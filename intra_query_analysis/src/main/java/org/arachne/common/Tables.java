package org.arachne.common;

import org.apache.calcite.sql.type.SqlTypeName;
import org.arachne.schema.ArachneTable;

public final class Tables {
    private Tables() {}

    public static final ArachneTable results = ArachneTable.newBuilder("results")
            .addField("i_category", SqlTypeName.VARCHAR)
            .addField("i_class", SqlTypeName.VARCHAR)
            .addField("i_brand", SqlTypeName.VARCHAR)
            .addField("i_product_name", SqlTypeName.VARCHAR)
            .addField("d_year", SqlTypeName.INTEGER)
            .addField("d_qoy", SqlTypeName.INTEGER)
            .addField("d_moy", SqlTypeName.INTEGER)
            .addField("s_store_id", SqlTypeName.VARCHAR)
            .addField("sumsales", SqlTypeName.DECIMAL)
            .withRowCount(14_136_756L)
            .build();

    public static final ArachneTable web_sales = ArachneTable.newBuilder("web_sales")
            .addField("ws_sold_date_sk", SqlTypeName.INTEGER)
            .addField("ws_sold_time_sk", SqlTypeName.INTEGER)
            .addField("ws_ship_date_sk", SqlTypeName.INTEGER)
            .addField("ws_item_sk", SqlTypeName.INTEGER)
            .addField("ws_bill_customer_sk", SqlTypeName.INTEGER)
            .addField("ws_bill_cdemo_sk", SqlTypeName.INTEGER)
            .addField("ws_bill_hdemo_sk", SqlTypeName.INTEGER)
            .addField("ws_bill_addr_sk", SqlTypeName.INTEGER)
            .addField("ws_ship_customer_sk", SqlTypeName.INTEGER)
            .addField("ws_ship_cdemo_sk", SqlTypeName.INTEGER)
            .addField("ws_ship_hdemo_sk", SqlTypeName.INTEGER)
            .addField("ws_ship_addr_sk", SqlTypeName.INTEGER)
            .addField("ws_web_page_sk", SqlTypeName.INTEGER)
            .addField("ws_web_site_sk", SqlTypeName.INTEGER)
            .addField("ws_ship_mode_sk", SqlTypeName.INTEGER)
            .addField("ws_warehouse_sk", SqlTypeName.INTEGER)
            .addField("ws_promo_sk", SqlTypeName.INTEGER)
            .addField("ws_order_number", SqlTypeName.INTEGER)
            .addField("ws_quantity", SqlTypeName.INTEGER)
            .addField("ws_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("ws_list_price", SqlTypeName.DECIMAL)
            .addField("ws_sales_price", SqlTypeName.DECIMAL)
            .addField("ws_ext_discount_amt", SqlTypeName.DECIMAL)
            .addField("ws_ext_sales_price", SqlTypeName.DECIMAL)
            .addField("ws_ext_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("ws_ext_list_price", SqlTypeName.DECIMAL)
            .addField("ws_ext_tax", SqlTypeName.DECIMAL)
            .addField("ws_coupon_amt", SqlTypeName.DECIMAL)
            .addField("ws_ext_ship_cost", SqlTypeName.DECIMAL)
            .addField("ws_net_paid", SqlTypeName.DECIMAL)
            .addField("ws_net_paid_inc_tax", SqlTypeName.DECIMAL)
            .addField("ws_net_paid_inc_ship", SqlTypeName.DECIMAL)
            .addField("ws_net_paid_inc_ship_tax", SqlTypeName.DECIMAL)
            .addField("ws_net_profit", SqlTypeName.DECIMAL)
            .withRowCount(1L)
            .build();

    public static final ArachneTable catalog_sales = ArachneTable.newBuilder("catalog_sales")
            .addField("cs_sold_date_sk", SqlTypeName.INTEGER)
            .addField("cs_sold_time_sk", SqlTypeName.INTEGER)
            .addField("cs_ship_date_sk", SqlTypeName.INTEGER)
            .addField("cs_bill_customer_sk", SqlTypeName.INTEGER)
            .addField("cs_bill_cdemo_sk", SqlTypeName.INTEGER)
            .addField("cs_bill_hdemo_sk", SqlTypeName.INTEGER)
            .addField("cs_bill_addr_sk", SqlTypeName.INTEGER)
            .addField("cs_ship_customer_sk", SqlTypeName.INTEGER)
            .addField("cs_ship_cdemo_sk", SqlTypeName.INTEGER)
            .addField("cs_ship_hdemo_sk", SqlTypeName.INTEGER)
            .addField("cs_ship_addr_sk", SqlTypeName.INTEGER)
            .addField("cs_call_center_sk", SqlTypeName.INTEGER)
            .addField("cs_catalog_page_sk", SqlTypeName.INTEGER)
            .addField("cs_ship_mode_sk", SqlTypeName.INTEGER)
            .addField("cs_warehouse_sk", SqlTypeName.INTEGER)
            .addField("cs_item_sk", SqlTypeName.INTEGER)
            .addField("cs_promo_sk", SqlTypeName.INTEGER)
            .addField("cs_order_number", SqlTypeName.INTEGER)
            .addField("cs_quantity", SqlTypeName.INTEGER)
            .addField("cs_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("cs_list_price", SqlTypeName.DECIMAL)
            .addField("cs_sales_price", SqlTypeName.DECIMAL)
            .addField("cs_ext_discount_amt", SqlTypeName.DECIMAL)
            .addField("cs_ext_sales_price", SqlTypeName.DECIMAL)
            .addField("cs_ext_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("cs_ext_list_price", SqlTypeName.DECIMAL)
            .addField("cs_ext_tax", SqlTypeName.DECIMAL)
            .addField("cs_coupon_amt", SqlTypeName.DECIMAL)
            .addField("cs_ext_ship_cost", SqlTypeName.DECIMAL)
            .addField("cs_net_paid", SqlTypeName.DECIMAL)
            .addField("cs_net_paid_inc_tax", SqlTypeName.DECIMAL)
            .addField("cs_net_paid_inc_ship", SqlTypeName.DECIMAL)
            .addField("cs_net_paid_inc_ship_tax", SqlTypeName.DECIMAL)
            .addField("cs_net_profit", SqlTypeName.DECIMAL)
            .withRowCount(576_001_697L)
            .build();

    public static final ArachneTable customer_address = ArachneTable.newBuilder("customer_address")
            .addField("ca_address_sk", SqlTypeName.INTEGER)
            .addField("ca_address_id", SqlTypeName.VARCHAR)
            .addField("ca_street_number", SqlTypeName.VARCHAR)
            .addField("ca_street_name", SqlTypeName.VARCHAR)
            .addField("ca_street_type", SqlTypeName.VARCHAR)
            .addField("ca_suite_number", SqlTypeName.VARCHAR)
            .addField("ca_city", SqlTypeName.VARCHAR)
            .addField("ca_county", SqlTypeName.VARCHAR)
            .addField("ca_state", SqlTypeName.VARCHAR)
            .addField("ca_zip", SqlTypeName.VARCHAR)
            .addField("ca_country", SqlTypeName.VARCHAR)
            .addField("ca_gmt_offset", SqlTypeName.DECIMAL)
            .addField("ca_location_type", SqlTypeName.VARCHAR)
            .withRowCount(550_000L)
            .build();

    public static final ArachneTable store_sales = ArachneTable.newBuilder("store_sales")
            .addField("ss_sold_date_sk", SqlTypeName.INTEGER)
            .addField("ss_sold_time_sk", SqlTypeName.INTEGER)
            .addField("ss_item_sk", SqlTypeName.INTEGER)
            .addField("ss_customer_sk", SqlTypeName.INTEGER)
            .addField("ss_cdemo_sk", SqlTypeName.INTEGER)
            .addField("ss_hdemo_sk", SqlTypeName.INTEGER)
            .addField("ss_addr_sk", SqlTypeName.INTEGER)
            .addField("ss_store_sk", SqlTypeName.INTEGER)
            .addField("ss_promo_sk", SqlTypeName.INTEGER)
            .addField("ss_ticket_number", SqlTypeName.INTEGER)
            .addField("ss_quantity", SqlTypeName.INTEGER)
            .addField("ss_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("ss_list_price", SqlTypeName.DECIMAL)
            .addField("ss_sales_price", SqlTypeName.DECIMAL)
            .addField("ss_ext_discount_amt", SqlTypeName.DECIMAL)
            .addField("ss_ext_sales_price", SqlTypeName.DECIMAL)
            .addField("ss_ext_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("ss_ext_list_price", SqlTypeName.DECIMAL)
            .addField("ss_ext_tax", SqlTypeName.DECIMAL)
            .addField("ss_coupon_amt", SqlTypeName.DECIMAL)
            .addField("ss_net_paid", SqlTypeName.DECIMAL)
            .addField("ss_net_paid_inc_tax", SqlTypeName.DECIMAL)
            .addField("ss_net_profit", SqlTypeName.DECIMAL)
            .withRowCount(159_524_450L)
            .build();

    public static final ArachneTable date_dim = ArachneTable.newBuilder("date_dim")
            .addField("d_date_sk", SqlTypeName.INTEGER)
            .addField("d_date_id", SqlTypeName.VARCHAR)
            .addField("d_date", SqlTypeName.DATE)
            .addField("d_month_seq", SqlTypeName.INTEGER)
            .addField("d_week_seq", SqlTypeName.INTEGER)
            .addField("d_quarter_seq", SqlTypeName.INTEGER)
            .addField("d_year", SqlTypeName.INTEGER)
            .addField("d_dow", SqlTypeName.INTEGER)
            .addField("d_moy", SqlTypeName.INTEGER)
            .addField("d_dom", SqlTypeName.INTEGER)
            .addField("d_qoy", SqlTypeName.INTEGER)
            .addField("d_fy_year", SqlTypeName.INTEGER)
            .addField("d_fy_quarter_seq", SqlTypeName.INTEGER)
            .addField("d_fy_week_seq", SqlTypeName.INTEGER)
            .addField("d_day_name", SqlTypeName.VARCHAR)
            .addField("d_quarter_name", SqlTypeName.VARCHAR)
            .addField("d_holiday", SqlTypeName.VARCHAR)
            .addField("d_weekend", SqlTypeName.VARCHAR)
            .addField("d_following_holiday", SqlTypeName.VARCHAR)
            .addField("d_first_dom", SqlTypeName.INTEGER)
            .addField("d_last_dom", SqlTypeName.INTEGER)
            .addField("d_same_day_ly", SqlTypeName.INTEGER)
            .addField("d_same_day_lq", SqlTypeName.INTEGER)
            .addField("d_current_day", SqlTypeName.VARCHAR)
            .addField("d_current_week", SqlTypeName.VARCHAR)
            .addField("d_current_month", SqlTypeName.VARCHAR)
            .addField("d_current_quarter", SqlTypeName.VARCHAR)
            .addField("d_current_year", SqlTypeName.VARCHAR)
            .withRowCount(73049L)
            .build();

    public static final ArachneTable store = ArachneTable.newBuilder("store")
            .addField("s_store_sk", SqlTypeName.INTEGER)
            .addField("s_store_id", SqlTypeName.VARCHAR)
            .addField("s_rec_start_date", SqlTypeName.DATE)
            .addField("s_rec_end_date", SqlTypeName.DATE)
            .addField("s_closed_date_sk", SqlTypeName.INTEGER)
            .addField("s_store_name", SqlTypeName.VARCHAR)
            .addField("s_number_employees", SqlTypeName.INTEGER)
            .addField("s_floor_space", SqlTypeName.INTEGER)
            .addField("s_hours", SqlTypeName.VARCHAR)
            .addField("s_manager", SqlTypeName.VARCHAR)
            .addField("s_market_id", SqlTypeName.INTEGER)
            .addField("s_geography_class", SqlTypeName.VARCHAR)
            .addField("s_market_desc", SqlTypeName.VARCHAR)
            .addField("s_market_manager", SqlTypeName.VARCHAR)
            .addField("s_division_id", SqlTypeName.INTEGER)
            .addField("s_division_name", SqlTypeName.VARCHAR)
            .addField("s_company_id", SqlTypeName.INTEGER)
            .addField("s_company_name", SqlTypeName.VARCHAR)
            .addField("s_street_number", SqlTypeName.VARCHAR)
            .addField("s_street_name", SqlTypeName.VARCHAR)
            .addField("s_street_type", SqlTypeName.VARCHAR)
            .addField("s_suite_number", SqlTypeName.VARCHAR)
            .addField("s_city", SqlTypeName.VARCHAR)
            .addField("s_county", SqlTypeName.VARCHAR)
            .addField("s_state", SqlTypeName.VARCHAR)
            .addField("s_zip", SqlTypeName.VARCHAR)
            .addField("s_country", SqlTypeName.VARCHAR)
            .addField("s_gmt_offset", SqlTypeName.DECIMAL)
            .addField("s_tax_precentage", SqlTypeName.DECIMAL)
            .withRowCount(40)
            .build();

    public static final ArachneTable item = ArachneTable.newBuilder("item")
            .addField("i_item_sk", SqlTypeName.INTEGER)
            .addField("i_item_id", SqlTypeName.VARCHAR)
            .addField("i_rec_start_date", SqlTypeName.DATE)
            .addField("i_rec_end_date", SqlTypeName.DATE)
            .addField("i_item_desc", SqlTypeName.VARCHAR)
            .addField("i_current_price", SqlTypeName.DECIMAL)
            .addField("i_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("i_brand_id", SqlTypeName.INTEGER)
            .addField("i_brand", SqlTypeName.VARCHAR)
            .addField("i_class_id", SqlTypeName.INTEGER)
            .addField("i_class", SqlTypeName.VARCHAR)
            .addField("i_category_id", SqlTypeName.INTEGER)
            .addField("i_category", SqlTypeName.VARCHAR)
            .addField("i_manufact_id", SqlTypeName.INTEGER)
            .addField("i_manufact", SqlTypeName.VARCHAR)
            .addField("i_size", SqlTypeName.VARCHAR)
            .addField("i_formulation", SqlTypeName.VARCHAR)
            .addField("i_color", SqlTypeName.VARCHAR)
            .addField("i_units", SqlTypeName.VARCHAR)
            .addField("i_container", SqlTypeName.VARCHAR)
            .addField("i_manager_id", SqlTypeName.INTEGER)
            .addField("i_product_name", SqlTypeName.VARCHAR)
            .withRowCount(22000L)
            .build();
    public static final ArachneTable call_center = ArachneTable.newBuilder("call_center")
            .addField("cc_call_center_sk", SqlTypeName.INTEGER)
            .addField("cc_call_center_id", SqlTypeName.VARCHAR)
            .addField("cc_rec_start_date", SqlTypeName.DATE)
            .addField("cc_rec_end_date", SqlTypeName.DATE)
            .addField("cc_closed_date_sk", SqlTypeName.INTEGER)
            .addField("cc_open_date_sk", SqlTypeName.INTEGER)
            .addField("cc_name", SqlTypeName.VARCHAR)
            .addField("cc_class", SqlTypeName.VARCHAR)
            .addField("cc_employees", SqlTypeName.INTEGER)
            .addField("cc_sq_ft", SqlTypeName.INTEGER)
            .addField("cc_hours", SqlTypeName.VARCHAR)
            .addField("cc_manager", SqlTypeName.VARCHAR)
            .addField("cc_mkt_id", SqlTypeName.INTEGER)
            .addField("cc_mkt_class", SqlTypeName.VARCHAR)
            .addField("cc_mkt_desc", SqlTypeName.VARCHAR)
            .addField("cc_market_manager", SqlTypeName.VARCHAR)
            .addField("cc_division", SqlTypeName.INTEGER)
            .addField("cc_division_name", SqlTypeName.VARCHAR)
            .addField("cc_company", SqlTypeName.INTEGER)
            .addField("cc_company_name", SqlTypeName.VARCHAR)
            .addField("cc_street_number", SqlTypeName.VARCHAR)
            .addField("cc_street_name", SqlTypeName.VARCHAR)
            .addField("cc_street_type", SqlTypeName.VARCHAR)
            .addField("cc_suite_number", SqlTypeName.VARCHAR)
            .addField("cc_city", SqlTypeName.VARCHAR)
            .addField("cc_county", SqlTypeName.VARCHAR)
            .addField("cc_state", SqlTypeName.VARCHAR)
            .addField("cc_zip", SqlTypeName.VARCHAR)
            .addField("cc_country", SqlTypeName.VARCHAR)
            .addField("cc_gmt_offset", SqlTypeName.DECIMAL)
            .addField("cc_tax_percentage", SqlTypeName.DECIMAL)
            .withRowCount(1L)
            .build();

    public static final ArachneTable catalog_page = ArachneTable.newBuilder("catalog_page")
            .addField("cp_catalog_page_sk", SqlTypeName.INTEGER)
            .addField("cp_catalog_page_id", SqlTypeName.VARCHAR)
            .addField("cp_start_date_sk", SqlTypeName.INTEGER)
            .addField("cp_end_date_sk", SqlTypeName.INTEGER)
            .addField("cp_department", SqlTypeName.VARCHAR)
            .addField("cp_catalog_number", SqlTypeName.INTEGER)
            .addField("cp_catalog_page_number", SqlTypeName.INTEGER)
            .addField("cp_description", SqlTypeName.VARCHAR)
            .addField("cp_type", SqlTypeName.VARCHAR)
            .withRowCount(1L)
            .build();

    public static final ArachneTable catalog_returns = ArachneTable.newBuilder("catalog_returns")
            .addField("cr_returned_date_sk", SqlTypeName.INTEGER)
            .addField("cr_returned_time_sk", SqlTypeName.INTEGER)
            .addField("cr_item_sk", SqlTypeName.INTEGER)
            .addField("cr_refunded_customer_sk", SqlTypeName.INTEGER)
            .addField("cr_refunded_cdemo_sk", SqlTypeName.INTEGER)
            .addField("cr_refunded_hdemo_sk", SqlTypeName.INTEGER)
            .addField("cr_refunded_addr_sk", SqlTypeName.INTEGER)
            .addField("cr_returning_customer_sk", SqlTypeName.INTEGER)
            .addField("cr_returning_cdemo_sk", SqlTypeName.INTEGER)
            .addField("cr_returning_hdemo_sk", SqlTypeName.INTEGER)
            .addField("cr_returning_addr_sk", SqlTypeName.INTEGER)
            .addField("cr_call_center_sk", SqlTypeName.INTEGER)
            .addField("cr_catalog_page_sk", SqlTypeName.INTEGER)
            .addField("cr_ship_mode_sk", SqlTypeName.INTEGER)
            .addField("cr_warehouse_sk", SqlTypeName.INTEGER)
            .addField("cr_reason_sk", SqlTypeName.INTEGER)
            .addField("cr_order_number", SqlTypeName.INTEGER)
            .addField("cr_return_quantity", SqlTypeName.INTEGER)
            .addField("cr_return_amount", SqlTypeName.DECIMAL)
            .addField("cr_return_tax", SqlTypeName.DECIMAL)
            .addField("cr_return_amt_inc_tax", SqlTypeName.DECIMAL)
            .addField("cr_fee", SqlTypeName.DECIMAL)
            .addField("cr_return_ship_cost", SqlTypeName.DECIMAL)
            .addField("cr_refunded_cash", SqlTypeName.DECIMAL)
            .addField("cr_reversed_charge", SqlTypeName.DECIMAL)
            .addField("cr_store_credit", SqlTypeName.DECIMAL)
            .addField("cr_net_loss", SqlTypeName.DECIMAL)
            .withRowCount(1L)
            .build();

    public static final ArachneTable customer = ArachneTable.newBuilder("customer")
            .addField("c_customer_sk", SqlTypeName.INTEGER)
            .addField("c_customer_id", SqlTypeName.VARCHAR)
            .addField("c_current_cdemo_sk", SqlTypeName.INTEGER)
            .addField("c_current_hdemo_sk", SqlTypeName.INTEGER)
            .addField("c_current_addr_sk", SqlTypeName.INTEGER)
            .addField("c_first_shipto_date_sk", SqlTypeName.INTEGER)
            .addField("c_first_sales_date_sk", SqlTypeName.INTEGER)
            .addField("c_salutation", SqlTypeName.VARCHAR)
            .addField("c_first_name", SqlTypeName.VARCHAR)
            .addField("c_last_name", SqlTypeName.VARCHAR)
            .addField("c_preferred_cust_flag", SqlTypeName.VARCHAR)
            .addField("c_birth_day", SqlTypeName.INTEGER)
            .addField("c_birth_month", SqlTypeName.INTEGER)
            .addField("c_birth_year", SqlTypeName.INTEGER)
            .addField("c_birth_country", SqlTypeName.VARCHAR)
            .addField("c_login", SqlTypeName.VARCHAR)
            .addField("c_email_address", SqlTypeName.VARCHAR)
            .addField("c_last_review_date_sk", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();

    public static final ArachneTable customer_demographics = ArachneTable.newBuilder("customer_demographics")
            .addField("cd_demo_sk", SqlTypeName.INTEGER)
            .addField("cd_gender", SqlTypeName.VARCHAR)
            .addField("cd_marital_status", SqlTypeName.VARCHAR)
            .addField("cd_education_status", SqlTypeName.VARCHAR)
            .addField("cd_purchase_estimate", SqlTypeName.INTEGER)
            .addField("cd_credit_rating", SqlTypeName.VARCHAR)
            .addField("cd_dep_count", SqlTypeName.INTEGER)
            .addField("cd_dep_employed_count", SqlTypeName.INTEGER)
            .addField("cd_dep_college_count", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();

    public static final ArachneTable household_demographics = ArachneTable.newBuilder("household_demographics")
            .addField("hd_demo_sk", SqlTypeName.INTEGER)
            .addField("hd_income_band_sk", SqlTypeName.INTEGER)
            .addField("hd_buy_potential", SqlTypeName.VARCHAR)
            .addField("hd_dep_count", SqlTypeName.INTEGER)
            .addField("hd_vehicle_count", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();

    public static final ArachneTable income_band = ArachneTable.newBuilder("income_band")
            .addField("ib_income_band_sk", SqlTypeName.INTEGER)
            .addField("ib_lower_bound", SqlTypeName.INTEGER)
            .addField("ib_upper_bound", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();

    public static final ArachneTable inventory = ArachneTable.newBuilder("inventory")
            .addField("inv_date_sk", SqlTypeName.INTEGER)
            .addField("inv_item_sk", SqlTypeName.INTEGER)
            .addField("inv_warehouse_sk", SqlTypeName.INTEGER)
            .addField("inv_quantity_on_hand", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();

    public static final ArachneTable promotion = ArachneTable.newBuilder("promotion")
            .addField("p_promo_sk", SqlTypeName.INTEGER)
            .addField("p_promo_id", SqlTypeName.VARCHAR)
            .addField("p_start_date_sk", SqlTypeName.INTEGER)
            .addField("p_end_date_sk", SqlTypeName.INTEGER)
            .addField("p_item_sk", SqlTypeName.INTEGER)
            .addField("p_cost", SqlTypeName.DECIMAL)
            .addField("p_response_target", SqlTypeName.INTEGER)
            .addField("p_promo_name", SqlTypeName.VARCHAR)
            .addField("p_channel_dmail", SqlTypeName.VARCHAR)
            .addField("p_channel_email", SqlTypeName.VARCHAR)
            .addField("p_channel_catalog", SqlTypeName.VARCHAR)
            .addField("p_channel_tv", SqlTypeName.VARCHAR)
            .addField("p_channel_radio", SqlTypeName.VARCHAR)
            .addField("p_channel_press", SqlTypeName.VARCHAR)
            .addField("p_channel_event", SqlTypeName.VARCHAR)
            .addField("p_channel_demo", SqlTypeName.VARCHAR)
            .addField("p_channel_details", SqlTypeName.VARCHAR)
            .addField("p_purpose", SqlTypeName.VARCHAR)
            .addField("p_discount_active", SqlTypeName.VARCHAR)
            .withRowCount(1L)
            .build();

    public static final ArachneTable reason = ArachneTable.newBuilder("reason")
            .addField("r_reason_sk", SqlTypeName.INTEGER)
            .addField("r_reason_id", SqlTypeName.VARCHAR)
            .addField("r_reason_desc", SqlTypeName.VARCHAR)
            .withRowCount(1L)
            .build();

    public static final ArachneTable ship_mode = ArachneTable.newBuilder("ship_mode")
            .addField("sm_ship_mode_sk", SqlTypeName.INTEGER)
            .addField("sm_ship_mode_id", SqlTypeName.VARCHAR)
            .addField("sm_type", SqlTypeName.VARCHAR)
            .addField("sm_code", SqlTypeName.VARCHAR)
            .addField("sm_carrier", SqlTypeName.VARCHAR)
            .addField("sm_contract", SqlTypeName.VARCHAR)
            .withRowCount(1L)
            .build();

    public static final ArachneTable store_returns = ArachneTable.newBuilder("store_returns")
            .addField("sr_returned_date_sk", SqlTypeName.INTEGER)
            .addField("sr_return_time_sk", SqlTypeName.INTEGER)
            .addField("sr_item_sk", SqlTypeName.INTEGER)
            .addField("sr_customer_sk", SqlTypeName.INTEGER)
            .addField("sr_cdemo_sk", SqlTypeName.INTEGER)
            .addField("sr_hdemo_sk", SqlTypeName.INTEGER)
            .addField("sr_addr_sk", SqlTypeName.INTEGER)
            .addField("sr_store_sk", SqlTypeName.INTEGER)
            .addField("sr_reason_sk", SqlTypeName.INTEGER)
            .addField("sr_ticket_number", SqlTypeName.INTEGER)
            .addField("sr_return_quantity", SqlTypeName.INTEGER)
            .addField("sr_return_amt", SqlTypeName.DECIMAL)
            .addField("sr_return_tax", SqlTypeName.DECIMAL)
            .addField("sr_return_amt_inc_tax", SqlTypeName.DECIMAL)
            .addField("sr_fee", SqlTypeName.DECIMAL)
            .addField("sr_return_ship_cost", SqlTypeName.DECIMAL)
            .addField("sr_refunded_cash", SqlTypeName.DECIMAL)
            .addField("sr_reversed_charge", SqlTypeName.DECIMAL)
            .addField("sr_store_credit", SqlTypeName.DECIMAL)
            .addField("sr_net_loss", SqlTypeName.DECIMAL)
            .withRowCount(1L)
            .build();

    public static final ArachneTable time_dim = ArachneTable.newBuilder("time_dim")
            .addField("t_time_sk", SqlTypeName.INTEGER)
            .addField("t_time_id", SqlTypeName.VARCHAR)
            .addField("t_time", SqlTypeName.INTEGER)
            .addField("t_hour", SqlTypeName.INTEGER)
            .addField("t_minute", SqlTypeName.INTEGER)
            .addField("t_second", SqlTypeName.INTEGER)
            .addField("t_am_pm", SqlTypeName.VARCHAR)
            .addField("t_shift", SqlTypeName.VARCHAR)
            .addField("t_sub_shift", SqlTypeName.VARCHAR)
            .addField("t_meal_time", SqlTypeName.VARCHAR)
            .withRowCount(1L)
            .build();

    public static final ArachneTable warehouse = ArachneTable.newBuilder("warehouse")
            .addField("w_warehouse_sk", SqlTypeName.INTEGER)
            .addField("w_warehouse_id", SqlTypeName.VARCHAR)
            .addField("w_warehouse_name", SqlTypeName.VARCHAR)
            .addField("w_warehouse_sq_ft", SqlTypeName.INTEGER)
            .addField("w_street_number", SqlTypeName.VARCHAR)
            .addField("w_street_name", SqlTypeName.VARCHAR)
            .addField("w_street_type", SqlTypeName.VARCHAR)
            .addField("w_suite_number", SqlTypeName.VARCHAR)
            .addField("w_city", SqlTypeName.VARCHAR)
            .addField("w_county", SqlTypeName.VARCHAR)
            .addField("w_state", SqlTypeName.VARCHAR)
            .addField("w_zip", SqlTypeName.VARCHAR)
            .addField("w_country", SqlTypeName.VARCHAR)
            .addField("w_gmt_offset", SqlTypeName.DECIMAL)
            .withRowCount(1L)
            .build();

    public static final ArachneTable web_page = ArachneTable.newBuilder("web_page")
            .addField("wp_web_page_sk", SqlTypeName.INTEGER)
            .addField("wp_web_page_id", SqlTypeName.VARCHAR)
            .addField("wp_rec_start_date", SqlTypeName.DATE)
            .addField("wp_rec_end_date", SqlTypeName.DATE)
            .addField("wp_creation_date_sk", SqlTypeName.INTEGER)
            .addField("wp_access_date_sk", SqlTypeName.INTEGER)
            .addField("wp_autogen_flag", SqlTypeName.VARCHAR)
            .addField("wp_customer_sk", SqlTypeName.INTEGER)
            .addField("wp_url", SqlTypeName.VARCHAR)
            .addField("wp_type", SqlTypeName.VARCHAR)
            .addField("wp_char_count", SqlTypeName.INTEGER)
            .addField("wp_link_count", SqlTypeName.INTEGER)
            .addField("wp_image_count", SqlTypeName.INTEGER)
            .addField("wp_max_ad_count", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();

    public static final ArachneTable web_returns = ArachneTable.newBuilder("web_returns")
            .addField("wr_returned_date_sk", SqlTypeName.INTEGER)
            .addField("wr_returned_time_sk", SqlTypeName.INTEGER)
            .addField("wr_item_sk", SqlTypeName.INTEGER)
            .addField("wr_refunded_customer_sk", SqlTypeName.INTEGER)
            .addField("wr_refunded_cdemo_sk", SqlTypeName.INTEGER)
            .addField("wr_refunded_hdemo_sk", SqlTypeName.INTEGER)
            .addField("wr_refunded_addr_sk", SqlTypeName.INTEGER)
            .addField("wr_returning_customer_sk", SqlTypeName.INTEGER)
            .addField("wr_returning_cdemo_sk", SqlTypeName.INTEGER)
            .addField("wr_returning_hdemo_sk", SqlTypeName.INTEGER)
            .addField("wr_returning_addr_sk", SqlTypeName.INTEGER)
            .addField("wr_web_page_sk", SqlTypeName.INTEGER)
            .addField("wr_reason_sk", SqlTypeName.INTEGER)
            .addField("wr_order_number", SqlTypeName.INTEGER)
            .addField("wr_return_quantity", SqlTypeName.INTEGER)
            .addField("wr_return_amt", SqlTypeName.DECIMAL)
            .addField("wr_return_tax", SqlTypeName.DECIMAL)
            .addField("wr_return_amt_inc_tax", SqlTypeName.DECIMAL)
            .addField("wr_fee", SqlTypeName.DECIMAL)
            .addField("wr_return_ship_cost", SqlTypeName.DECIMAL)
            .addField("wr_refunded_cash", SqlTypeName.DECIMAL)
            .addField("wr_reversed_charge", SqlTypeName.DECIMAL)
            .addField("wr_account_credit", SqlTypeName.DECIMAL)
            .addField("wr_net_loss", SqlTypeName.DECIMAL)
            .withRowCount(1L)
            .build();

    public static final ArachneTable web_site = ArachneTable.newBuilder("web_site")
            .addField("web_site_sk", SqlTypeName.INTEGER)
            .addField("web_site_id", SqlTypeName.VARCHAR)
            .addField("web_rec_start_date", SqlTypeName.DATE)
            .addField("web_rec_end_date", SqlTypeName.DATE)
            .addField("web_name", SqlTypeName.VARCHAR)
            .addField("web_open_date_sk", SqlTypeName.INTEGER)
            .addField("web_close_date_sk", SqlTypeName.INTEGER)
            .addField("web_class", SqlTypeName.VARCHAR)
            .addField("web_manager", SqlTypeName.VARCHAR)
            .addField("web_mkt_id", SqlTypeName.INTEGER)
            .addField("web_mkt_class", SqlTypeName.VARCHAR)
            .addField("web_mkt_desc", SqlTypeName.VARCHAR)
            .addField("web_market_manager", SqlTypeName.VARCHAR)
            .addField("web_company_id", SqlTypeName.INTEGER)
            .addField("web_company_name", SqlTypeName.VARCHAR)
            .addField("web_street_number", SqlTypeName.VARCHAR)
            .addField("web_street_name", SqlTypeName.VARCHAR)
            .addField("web_street_type", SqlTypeName.VARCHAR)
            .addField("web_suite_number", SqlTypeName.VARCHAR)
            .addField("web_city", SqlTypeName.VARCHAR)
            .addField("web_county", SqlTypeName.VARCHAR)
            .addField("web_state", SqlTypeName.VARCHAR)
            .addField("web_zip", SqlTypeName.VARCHAR)
            .addField("web_country", SqlTypeName.VARCHAR)
            .addField("web_gmt_offset", SqlTypeName.DECIMAL)
            .addField("web_tax_percentage", SqlTypeName.DECIMAL)
            .withRowCount(1L)
            .build();
}


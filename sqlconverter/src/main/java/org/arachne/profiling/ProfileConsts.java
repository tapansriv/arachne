package org.arachne.profiling;

import org.apache.calcite.sql.type.SqlTypeName;
import org.apache.calcite.tools.RuleSet;
import org.apache.calcite.tools.RuleSets;
import org.arachne.schema.ArachneSchema;
import org.arachne.schema.ArachneTable;

public class ProfileConsts {
    public static final ArachneSchema tpchSchema = ArachneSchema.newBuilder("tpch")
            .addTable(ArachneTable.emps)
            .addTable(ArachneTable.depts)
            .addTable(ArachneTable.nation)
            .addTable(ArachneTable.region)
            .addTable(ArachneTable.part)
            .addTable(ArachneTable.supplier)
            .addTable(ArachneTable.partsupp)
            .addTable(ArachneTable.customer)
            .addTable(ArachneTable.orders)
            .addTable(ArachneTable.lineitem)
            .build();

    public static final ArachneTable customer_address = ArachneTable.newBuilder("customer_address")
            .addField("ca_address_sk", SqlTypeName.INTEGER)
            .addField("ca_address_id", SqlTypeName.VARCHAR)
            .addField("ca_street_number", SqlTypeName.VARCHAR)
            .addField("ca_street_name", SqlTypeName.VARCHAR)
            .addField("ca_street_type", SqlTypeName.VARCHAR)
            .addField("ca_suite_number", SqlTypeName.VARCHAR)
            .addField("ca_city", SqlTypeName.VARCHAR)
            .addField("ca_county", SqlTypeName.VARCHAR)
            .addField("ca_state", SqlTypeName.VARCHAR)
            .addField("ca_zip", SqlTypeName.VARCHAR)
            .addField("ca_country", SqlTypeName.VARCHAR)
            .addField("ca_gmt_offset", SqlTypeName.DECIMAL)
            .addField("ca_location_type", SqlTypeName.VARCHAR)
            .withRowCount(550_000L)
            .build();

    public static final ArachneTable store_sales = ArachneTable.newBuilder("store_sales")
            .addField("ss_sold_date_sk", SqlTypeName.INTEGER)
            .addField("ss_sold_time_sk", SqlTypeName.INTEGER)
            .addField("ss_item_sk", SqlTypeName.INTEGER)
            .addField("ss_customer_sk", SqlTypeName.INTEGER)
            .addField("ss_cdemo_sk", SqlTypeName.INTEGER)
            .addField("ss_hdemo_sk", SqlTypeName.INTEGER)
            .addField("ss_addr_sk", SqlTypeName.INTEGER)
            .addField("ss_store_sk", SqlTypeName.INTEGER)
            .addField("ss_promo_sk", SqlTypeName.INTEGER)
            .addField("ss_ticket_number", SqlTypeName.INTEGER)
            .addField("ss_quantity", SqlTypeName.INTEGER)
            .addField("ss_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("ss_list_price", SqlTypeName.DECIMAL)
            .addField("ss_sales_price", SqlTypeName.DECIMAL)
            .addField("ss_ext_discount_amt", SqlTypeName.DECIMAL)
            .addField("ss_ext_sales_price", SqlTypeName.DECIMAL)
            .addField("ss_ext_wholesale_cost", SqlTypeName.DECIMAL)
            .addField("ss_ext_list_price", SqlTypeName.DECIMAL)
            .addField("ss_ext_tax", SqlTypeName.DECIMAL)
            .addField("ss_coupon_amt", SqlTypeName.DECIMAL)
            .addField("ss_net_paid", SqlTypeName.DECIMAL)
            .addField("ss_net_paid_inc_tax", SqlTypeName.DECIMAL)
            .addField("ss_net_profit", SqlTypeName.DECIMAL)
            .withRowCount(159_524_450L)
            .build();

    public static final ArachneTable date_dim = ArachneTable.newBuilder("date_dim")
            .addField("d_date_sk", SqlTypeName.INTEGER)
            .addField("d_date_id", SqlTypeName.VARCHAR)
            .addField("d_date", SqlTypeName.DATE)
            .addField("d_month_seq", SqlTypeName.INTEGER)
            .addField("d_week_seq", SqlTypeName.INTEGER)
            .addField("d_quarter_seq", SqlTypeName.INTEGER)
            .addField("d_year", SqlTypeName.INTEGER)
            .addField("d_dow", SqlTypeName.INTEGER)
            .addField("d_moy", SqlTypeName.INTEGER)
            .addField("d_dom", SqlTypeName.INTEGER)
            .addField("d_qoy", SqlTypeName.INTEGER)
            .addField("d_fy_year", SqlTypeName.INTEGER)
            .addField("d_fy_quarter_seq", SqlTypeName.INTEGER)
            .addField("d_fy_week_seq", SqlTypeName.INTEGER)
            .addField("d_day_name", SqlTypeName.VARCHAR)
            .addField("d_quarter_name", SqlTypeName.VARCHAR)
            .addField("d_holiday", SqlTypeName.VARCHAR)
            .addField("d_weekend", SqlTypeName.VARCHAR)
            .addField("d_following_holiday", SqlTypeName.VARCHAR)
            .addField("d_first_dom", SqlTypeName.INTEGER)
            .addField("d_last_dom", SqlTypeName.INTEGER)
            .addField("d_same_day_ly", SqlTypeName.INTEGER)
            .addField("d_same_day_lq", SqlTypeName.INTEGER)
                .addField("d_current_day", SqlTypeName.VARCHAR)
                .addField("d_current_week", SqlTypeName.VARCHAR)
                .addField("d_current_month", SqlTypeName.VARCHAR)
                .addField("d_current_quarter", SqlTypeName.VARCHAR)
                .addField("d_current_year", SqlTypeName.VARCHAR)
                .withRowCount(73049L)
                .build();

        public static final ArachneTable store = ArachneTable.newBuilder("store")
                .addField("s_store_sk", SqlTypeName.INTEGER)
                .addField("s_store_id", SqlTypeName.VARCHAR)
                .addField("s_rec_start_date", SqlTypeName.DATE)
                .addField("s_rec_end_date", SqlTypeName.DATE)
                .addField("s_closed_date_sk", SqlTypeName.INTEGER)
                .addField("s_store_name", SqlTypeName.VARCHAR)
                .addField("s_number_employees", SqlTypeName.INTEGER)
                .addField("s_floor_space", SqlTypeName.INTEGER)
                .addField("s_hours", SqlTypeName.VARCHAR)
                .addField("s_manager", SqlTypeName.VARCHAR)
                .addField("s_market_id", SqlTypeName.INTEGER)
                .addField("s_geography_class", SqlTypeName.VARCHAR)
                .addField("s_market_desc", SqlTypeName.VARCHAR)
                .addField("s_market_manager", SqlTypeName.VARCHAR)
                .addField("s_division_id", SqlTypeName.INTEGER)
                .addField("s_division_name", SqlTypeName.VARCHAR)
                .addField("s_company_id", SqlTypeName.INTEGER)
                .addField("s_company_name", SqlTypeName.VARCHAR)
                .addField("s_street_number", SqlTypeName.VARCHAR)
                .addField("s_street_name", SqlTypeName.VARCHAR)
                .addField("s_street_type", SqlTypeName.VARCHAR)
                .addField("s_suite_number", SqlTypeName.VARCHAR)
                .addField("s_city", SqlTypeName.VARCHAR)
                .addField("s_county", SqlTypeName.VARCHAR)
                .addField("s_state", SqlTypeName.VARCHAR)
                .addField("s_zip", SqlTypeName.VARCHAR)
                .addField("s_country", SqlTypeName.VARCHAR)
                .addField("s_gmt_offset", SqlTypeName.DECIMAL)
                .addField("s_tax_precentage", SqlTypeName.DECIMAL)
                .withRowCount(40)
                .build();

        public static final ArachneTable item = ArachneTable.newBuilder("item")
                .addField("i_item_sk", SqlTypeName.INTEGER)
                .addField("i_item_id", SqlTypeName.VARCHAR)
                .addField("i_rec_start_date", SqlTypeName.DATE)
                .addField("i_rec_end_date", SqlTypeName.DATE)
                .addField("i_item_desc", SqlTypeName.VARCHAR)
                .addField("i_current_price", SqlTypeName.DECIMAL)
                .addField("i_wholesale_cost", SqlTypeName.DECIMAL)
                .addField("i_brand_id", SqlTypeName.INTEGER)
                .addField("i_brand", SqlTypeName.VARCHAR)
                .addField("i_class_id", SqlTypeName.INTEGER)
                .addField("i_class", SqlTypeName.VARCHAR)
                .addField("i_category_id", SqlTypeName.INTEGER)
                .addField("i_category", SqlTypeName.VARCHAR)
                .addField("i_manufact_id", SqlTypeName.INTEGER)
                .addField("i_manufact", SqlTypeName.VARCHAR)
                .addField("i_size", SqlTypeName.VARCHAR)
                .addField("i_formulation", SqlTypeName.VARCHAR)
                .addField("i_color", SqlTypeName.VARCHAR)
                .addField("i_units", SqlTypeName.VARCHAR)
                .addField("i_container", SqlTypeName.VARCHAR)
                .addField("i_manager_id", SqlTypeName.INTEGER)
                .addField("i_product_name", SqlTypeName.VARCHAR)
                .withRowCount(22000L)
                .build();

    public static final ArachneSchema tpcdsSchema = ArachneSchema.newBuilder("tpcds")
            .addTable(customer_address)
            .addTable(date_dim)
            .addTable(store_sales)
            .addTable(store)
            .addTable(item)
            .build();

    public static final String qry12 = "SELECT * FROM store_sales";
}

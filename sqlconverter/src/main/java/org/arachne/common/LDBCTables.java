package org.arachne.common;

import org.apache.calcite.sql.type.SqlTypeName;
import org.arachne.schema.ArachneTable;

public final class LDBCTables {
    private LDBCTables() {
    }

    public static final ArachneTable post = ArachneTable.newBuilder("post")
            .addField("m_creationdate", SqlTypeName.INTEGER)
            .addField("m_deletiondate", SqlTypeName.INTEGER)
            .addField("m_explicitlyDeleted", SqlTypeName.BOOLEAN)
            .addField("m_messageid", SqlTypeName.INTEGER)
            .addField("m_ps_imagefile", SqlTypeName.VARCHAR)
            .addField("m_locationip", SqlTypeName.VARCHAR)
            .addField("m_browserused", SqlTypeName.VARCHAR)
            .addField("m_ps_language", SqlTypeName.VARCHAR)
            .addField("m_content", SqlTypeName.VARCHAR)
            .addField("m_length", SqlTypeName.INTEGER)
            .addField("m_creatorid", SqlTypeName.INTEGER)
            .addField("m_ps_forumid", SqlTypeName.INTEGER)
            .addField("m_locationid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable comment = ArachneTable.newBuilder("comment")
            .addField("m_creationdate", SqlTypeName.INTEGER)
            .addField("m_deletiondate", SqlTypeName.INTEGER)
            .addField("m_explicitlyDeleted", SqlTypeName.BOOLEAN)
            .addField("m_messageid", SqlTypeName.INTEGER)
            .addField("m_locationip", SqlTypeName.VARCHAR)
            .addField("m_browserused", SqlTypeName.VARCHAR)
            .addField("m_content", SqlTypeName.VARCHAR)
            .addField("m_length", SqlTypeName.INTEGER)
            .addField("m_creatorid", SqlTypeName.INTEGER)
            .addField("m_locationid", SqlTypeName.INTEGER)
            .addField("m_c_parentpostid", SqlTypeName.INTEGER)
            .addField("m_c_parentcommentid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable message = ArachneTable.newBuilder("message")
            .addField("m_creationdate", SqlTypeName.INTEGER)
            .addField("m_messageid", SqlTypeName.INTEGER)
            .addField("m_rootpostid", SqlTypeName.INTEGER)
            .addField("m_rootpostlanguage", SqlTypeName.VARCHAR)
            .addField("m_ps_imagefile", SqlTypeName.VARCHAR)
            .addField("m_locationip", SqlTypeName.VARCHAR)
            .addField("m_browserused", SqlTypeName.VARCHAR)
            .addField("m_content", SqlTypeName.VARCHAR)
            .addField("m_length", SqlTypeName.INTEGER)
            .addField("m_creatorid", SqlTypeName.INTEGER)
            .addField("m_forumid", SqlTypeName.INTEGER)
            .addField("m_locationid", SqlTypeName.INTEGER)
            .addField("m_c_replyof", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable forum = ArachneTable.newBuilder("forum")
            .addField("f_creationdate", SqlTypeName.INTEGER)
            .addField("f_deletiondate", SqlTypeName.INTEGER)
            .addField("f_explicitlyDeleted", SqlTypeName.BOOLEAN)
            .addField("f_forumid", SqlTypeName.INTEGER)
            .addField("f_title", SqlTypeName.VARCHAR)
            .addField("f_moderatorid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable forum_person = ArachneTable.newBuilder("forum_person")
            .addField("fp_creationdate", SqlTypeName.INTEGER)
            .addField("fp_deletiondate", SqlTypeName.INTEGER)
            .addField("fp_explicitlyDeleted", SqlTypeName.BOOLEAN)
            .addField("fp_forumid", SqlTypeName.INTEGER)
            .addField("fp_personid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable forum_tag = ArachneTable.newBuilder("forum_tag")
            .addField("ft_creationdate", SqlTypeName.INTEGER)
            .addField("ft_deletiondate", SqlTypeName.INTEGER)
            .addField("ft_forumid", SqlTypeName.INTEGER)
            .addField("ft_tagid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable person = ArachneTable.newBuilder("person")
            .addField("p_creationdate", SqlTypeName.INTEGER)
            .addField("p_deletiondate", SqlTypeName.INTEGER)
            .addField("p_explicitlyDeleted", SqlTypeName.BOOLEAN)
            .addField("p_personid", SqlTypeName.INTEGER)
            .addField("p_firstname", SqlTypeName.VARCHAR)
            .addField("p_lastname", SqlTypeName.VARCHAR)
            .addField("p_gender", SqlTypeName.VARCHAR)
            .addField("p_birthday", SqlTypeName.INTEGER)
            .addField("p_locationip", SqlTypeName.VARCHAR)
            .addField("p_browserused", SqlTypeName.VARCHAR)
            .addField("p_placeid", SqlTypeName.INTEGER)
            .addField("p_language", SqlTypeName.VARCHAR)
            .addField("p_email", SqlTypeName.VARCHAR)
            .withRowCount(1L)
            .build();
    public static final ArachneTable person_tag = ArachneTable.newBuilder("person_tag")
            .addField("pt_creationdate", SqlTypeName.INTEGER)
            .addField("pt_deletiondate", SqlTypeName.INTEGER)
            .addField("pt_personid", SqlTypeName.INTEGER)
            .addField("pt_tagid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable knows = ArachneTable.newBuilder("knows")
            .addField("k_creationdate", SqlTypeName.INTEGER)
            .addField("k_deletiondate", SqlTypeName.INTEGER)
            .addField("k_explicitlyDeleted", SqlTypeName.BOOLEAN)
            .addField("k_person1id", SqlTypeName.INTEGER)
            .addField("k_person2id", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable likes = ArachneTable.newBuilder("likes")
            .addField("l_creationdate", SqlTypeName.INTEGER)
            .addField("l_deletiondate", SqlTypeName.INTEGER)
            .addField("l_explicitlyDeleted", SqlTypeName.BOOLEAN)
            .addField("l_personid", SqlTypeName.INTEGER)
            .addField("l_messageid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable person_university = ArachneTable.newBuilder("person_university")
            .addField("pu_creationdate", SqlTypeName.INTEGER)
            .addField("pu_deletiondate", SqlTypeName.INTEGER)
            .addField("pu_personid", SqlTypeName.INTEGER)
            .addField("pu_organisationid", SqlTypeName.INTEGER)
            .addField("pu_classyear", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable person_company = ArachneTable.newBuilder("person_company")
            .addField("pc_creationdate", SqlTypeName.INTEGER)
            .addField("pc_deletiondate", SqlTypeName.INTEGER)
            .addField("pc_personid", SqlTypeName.INTEGER)
            .addField("pc_organisationid", SqlTypeName.INTEGER)
            .addField("pc_workfrom", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable message_tag = ArachneTable.newBuilder("message_tag")
            .addField("mt_creationdate", SqlTypeName.INTEGER)
            .addField("mt_deletiondate", SqlTypeName.INTEGER)
            .addField("mt_messageid", SqlTypeName.INTEGER)
            .addField("mt_tagid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable tagclass = ArachneTable.newBuilder("tagclass")
            .addField("tc_tagclassid", SqlTypeName.INTEGER)
            .addField("tc_name", SqlTypeName.VARCHAR)
            .addField("tc_url", SqlTypeName.VARCHAR)
            .addField("tc_subclassoftagclassid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable organisation = ArachneTable.newBuilder("organisation")
            .addField("o_organisationid", SqlTypeName.INTEGER)
            .addField("o_type", SqlTypeName.VARCHAR)
            .addField("o_name", SqlTypeName.VARCHAR)
            .addField("o_url", SqlTypeName.VARCHAR)
            .addField("o_placeid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable place = ArachneTable.newBuilder("place")
            .addField("pl_placeid", SqlTypeName.INTEGER)
            .addField("pl_name", SqlTypeName.VARCHAR)
            .addField("pl_url", SqlTypeName.VARCHAR)
            .addField("pl_type", SqlTypeName.VARCHAR)
            .addField("pl_containerplaceid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();
    public static final ArachneTable tag = ArachneTable.newBuilder("tag")
            .addField("t_tagid", SqlTypeName.INTEGER)
            .addField("t_name", SqlTypeName.VARCHAR)
            .addField("t_url", SqlTypeName.VARCHAR)
            .addField("t_tagclassid", SqlTypeName.INTEGER)
            .withRowCount(1L)
            .build();

}
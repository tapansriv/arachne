                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=25580912.74..25580912.99 rows=100 width=305)
   ->  Sort  (cost=25580912.74..25580947.72 rows=13993 width=305)
         Sort Key: customer_address.ca_country NULLS FIRST, customer_address.ca_state NULLS FIRST, customer_address.ca_county NULLS FIRST, item.i_item_id NULLS FIRST
         ->  Append  (cost=5115487.60..25580377.94 rows=13993 width=305)
               ->  Finalize GroupAggregate  (cost=5115487.60..5116186.46 rows=3498 width=272)
                     Group Key: item.i_item_id, customer_address.ca_country, customer_address.ca_state, customer_address.ca_county
                     ->  Gather Merge  (cost=5115487.60..5115959.04 rows=2916 width=272)
                           Workers Planned: 2
                           ->  Partial GroupAggregate  (cost=5114487.57..5114622.44 rows=1458 width=272)
                                 Group Key: item.i_item_id, customer_address.ca_country, customer_address.ca_state, customer_address.ca_county
                                 ->  Sort  (cost=5114487.57..5114491.22 rows=1458 width=92)
                                       Sort Key: item.i_item_id, customer_address.ca_country, customer_address.ca_state, customer_address.ca_county
                                       ->  Parallel Hash Join  (cost=5104856.13..5114410.96 rows=1458 width=92)
                                             Hash Cond: (item.i_item_sk = catalog_sales.cs_item_sk)
                                             ->  Parallel Seq Scan on item  (cost=0.00..9230.00 rows=85000 width=21)
                                             ->  Parallel Hash  (cost=5104837.90..5104837.90 rows=1458 width=79)
                                                   ->  Nested Loop  (cost=5066956.03..5104837.90 rows=1458 width=79)
                                                         ->  Parallel Hash Join  (cost=5066955.60..5093562.44 rows=1508 width=83)
                                                               Hash Cond: (customer_address.ca_address_sk = customer.c_current_addr_sk)
                                                               ->  Parallel Seq Scan on customer_address  (cost=0.00..26369.67 rows=61570 width=35)
                                                                     Filter: ((ca_state)::text = ANY ('{IN,MS,ND,NM,OK,VA}'::text[]))
                                                               ->  Parallel Hash  (cost=5066828.06..5066828.06 rows=10203 width=56)
                                                                     ->  Parallel Hash Join  (cost=5012111.36..5066828.06 rows=10203 width=56)
                                                                           Hash Cond: (customer.c_customer_sk = catalog_sales.cs_bill_customer_sk)
                                                                           ->  Parallel Seq Scan on customer  (cost=0.00..53161.85 rows=403292 width=16)
                                                                                 Filter: (c_birth_month = ANY ('{1,2,6,8,9,12}'::integer[]))
                                                                           ->  Parallel Hash  (cost=5011846.42..5011846.42 rows=21195 width=48)
                                                                                 ->  Parallel Hash Join  (cost=34273.79..5011846.42 rows=21195 width=48)
                                                                                       Hash Cond: (catalog_sales.cs_bill_cdemo_sk = customer_demographics.cd_demo_sk)
                                                                                       ->  Parallel Hash Join  (cost=2000.80..4978793.14 rows=297255 width=48)
                                                                                             Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)
                                                                                             ->  Parallel Seq Scan on catalog_sales  (cost=0.00..4819292.97 rows=59996297 width=52)
                                                                                             ->  Parallel Hash  (cost=1998.12..1998.12 rows=214 width=4)
                                                                                                   ->  Parallel Seq Scan on date_dim  (cost=0.00..1998.12 rows=214 width=4)
                                                                                                         Filter: (d_year = 1998)
                                                                                       ->  Parallel Hash  (cost=31556.00..31556.00 rows=57359 width=8)
                                                                                             ->  Parallel Seq Scan on customer_demographics  (cost=0.00..31556.00 rows=57359 width=8)
                                                                                                   Filter: (((cd_gender)::text = 'F'::text) AND ((cd_education_status)::text = 'Unknown'::text))
                                                         ->  Index Only Scan using customer_demographics_pkey on customer_demographics customer_demographics_1  (cost=0.43..7.48 rows=1 width=4)
                                                               Index Cond: (cd_demo_sk = customer.c_current_cdemo_sk)
               ->  Finalize GroupAggregate  (cost=5115487.60..5116175.52 rows=3498 width=290)
                     Group Key: item_1.i_item_id, customer_address_1.ca_country, customer_address_1.ca_state
                     ->  Gather Merge  (cost=5115487.60..5115955.40 rows=2916 width=258)
                           Workers Planned: 2
                           ->  Partial GroupAggregate  (cost=5114487.57..5114618.79 rows=1458 width=258)
                                 Group Key: item_1.i_item_id, customer_address_1.ca_country, customer_address_1.ca_state
                                 ->  Sort  (cost=5114487.57..5114491.22 rows=1458 width=78)
                                       Sort Key: item_1.i_item_id, customer_address_1.ca_country, customer_address_1.ca_state
                                       ->  Parallel Hash Join  (cost=5104856.13..5114410.96 rows=1458 width=78)
                                             Hash Cond: (item_1.i_item_sk = catalog_sales_1.cs_item_sk)
                                             ->  Parallel Seq Scan on item item_1  (cost=0.00..9230.00 rows=85000 width=21)
                                             ->  Parallel Hash  (cost=5104837.90..5104837.90 rows=1458 width=65)
                                                   ->  Nested Loop  (cost=5066956.03..5104837.90 rows=1458 width=65)
                                                         ->  Parallel Hash Join  (cost=5066955.60..5093562.44 rows=1508 width=69)
                                                               Hash Cond: (customer_address_1.ca_address_sk = customer_1.c_current_addr_sk)
                                                               ->  Parallel Seq Scan on customer_address customer_address_1  (cost=0.00..26369.67 rows=61570 width=21)
                                                                     Filter: ((ca_state)::text = ANY ('{IN,MS,ND,NM,OK,VA}'::text[]))
                                                               ->  Parallel Hash  (cost=5066828.06..5066828.06 rows=10203 width=56)
                                                                     ->  Parallel Hash Join  (cost=5012111.36..5066828.06 rows=10203 width=56)
                                                                           Hash Cond: (customer_1.c_customer_sk = catalog_sales_1.cs_bill_customer_sk)
                                                                           ->  Parallel Seq Scan on customer customer_1  (cost=0.00..53161.85 rows=403292 width=16)
                                                                                 Filter: (c_birth_month = ANY ('{1,2,6,8,9,12}'::integer[]))
                                                                           ->  Parallel Hash  (cost=5011846.42..5011846.42 rows=21195 width=48)
                                                                                 ->  Parallel Hash Join  (cost=34273.79..5011846.42 rows=21195 width=48)
                                                                                       Hash Cond: (catalog_sales_1.cs_bill_cdemo_sk = customer_demographics_2.cd_demo_sk)
                                                                                       ->  Parallel Hash Join  (cost=2000.80..4978793.14 rows=297255 width=48)
                                                                                             Hash Cond: (catalog_sales_1.cs_sold_date_sk = date_dim_1.d_date_sk)
                                                                                             ->  Parallel Seq Scan on catalog_sales catalog_sales_1  (cost=0.00..4819292.97 rows=59996297 width=52)
                                                                                             ->  Parallel Hash  (cost=1998.12..1998.12 rows=214 width=4)
                                                                                                   ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..1998.12 rows=214 width=4)
                                                                                                         Filter: (d_year = 1998)
                                                                                       ->  Parallel Hash  (cost=31556.00..31556.00 rows=57359 width=8)
                                                                                             ->  Parallel Seq Scan on customer_demographics customer_demographics_2  (cost=0.00..31556.00 rows=57359 width=8)
                                                                                                   Filter: (((cd_gender)::text = 'F'::text) AND ((cd_education_status)::text = 'Unknown'::text))
                                                         ->  Index Only Scan using customer_demographics_pkey on customer_demographics customer_demographics_3  (cost=0.43..7.48 rows=1 width=4)
                                                               Index Cond: (cd_demo_sk = customer_1.c_current_cdemo_sk)
               ->  Finalize GroupAggregate  (cost=5115487.60..5116164.59 rows=3498 width=319)
                     Group Key: item_2.i_item_id, customer_address_2.ca_country
                     ->  Gather Merge  (cost=5115487.60..5115951.75 rows=2916 width=255)
                           Workers Planned: 2
                           ->  Partial GroupAggregate  (cost=5114487.57..5114615.15 rows=1458 width=255)
                                 Group Key: item_2.i_item_id, customer_address_2.ca_country
                                 ->  Sort  (cost=5114487.57..5114491.22 rows=1458 width=75)
                                       Sort Key: item_2.i_item_id, customer_address_2.ca_country
                                       ->  Parallel Hash Join  (cost=5104856.13..5114410.96 rows=1458 width=75)
                                             Hash Cond: (item_2.i_item_sk = catalog_sales_2.cs_item_sk)
                                             ->  Parallel Seq Scan on item item_2  (cost=0.00..9230.00 rows=85000 width=21)
                                             ->  Parallel Hash  (cost=5104837.90..5104837.90 rows=1458 width=62)
                                                   ->  Nested Loop  (cost=5066956.03..5104837.90 rows=1458 width=62)
                                                         ->  Parallel Hash Join  (cost=5066955.60..5093562.44 rows=1508 width=66)
                                                               Hash Cond: (customer_address_2.ca_address_sk = customer_2.c_current_addr_sk)
                                                               ->  Parallel Seq Scan on customer_address customer_address_2  (cost=0.00..26369.67 rows=61570 width=18)
                                                                     Filter: ((ca_state)::text = ANY ('{IN,MS,ND,NM,OK,VA}'::text[]))
                                                               ->  Parallel Hash  (cost=5066828.06..5066828.06 rows=10203 width=56)
                                                                     ->  Parallel Hash Join  (cost=5012111.36..5066828.06 rows=10203 width=56)
                                                                           Hash Cond: (customer_2.c_customer_sk = catalog_sales_2.cs_bill_customer_sk)
                                                                           ->  Parallel Seq Scan on customer customer_2  (cost=0.00..53161.85 rows=403292 width=16)
                                                                                 Filter: (c_birth_month = ANY ('{1,2,6,8,9,12}'::integer[]))
                                                                           ->  Parallel Hash  (cost=5011846.42..5011846.42 rows=21195 width=48)
                                                                                 ->  Parallel Hash Join  (cost=34273.79..5011846.42 rows=21195 width=48)
                                                                                       Hash Cond: (catalog_sales_2.cs_bill_cdemo_sk = customer_demographics_4.cd_demo_sk)
                                                                                       ->  Parallel Hash Join  (cost=2000.80..4978793.14 rows=297255 width=48)
                                                                                             Hash Cond: (catalog_sales_2.cs_sold_date_sk = date_dim_2.d_date_sk)
                                                                                             ->  Parallel Seq Scan on catalog_sales catalog_sales_2  (cost=0.00..4819292.97 rows=59996297 width=52)
                                                                                             ->  Parallel Hash  (cost=1998.12..1998.12 rows=214 width=4)
                                                                                                   ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..1998.12 rows=214 width=4)
                                                                                                         Filter: (d_year = 1998)
                                                                                       ->  Parallel Hash  (cost=31556.00..31556.00 rows=57359 width=8)
                                                                                             ->  Parallel Seq Scan on customer_demographics customer_demographics_4  (cost=0.00..31556.00 rows=57359 width=8)
                                                                                                   Filter: (((cd_gender)::text = 'F'::text) AND ((cd_education_status)::text = 'Unknown'::text))
                                                         ->  Index Only Scan using customer_demographics_pkey on customer_demographics customer_demographics_5  (cost=0.43..7.48 rows=1 width=4)
                                                               Index Cond: (cd_demo_sk = customer_2.c_current_cdemo_sk)
               ->  Finalize GroupAggregate  (cost=5115487.60..5116153.65 rows=3498 width=337)
                     Group Key: item_3.i_item_id
                     ->  Gather Merge  (cost=5115487.60..5115948.11 rows=2916 width=241)
                           Workers Planned: 2
                           ->  Partial GroupAggregate  (cost=5114487.57..5114611.50 rows=1458 width=241)
                                 Group Key: item_3.i_item_id
                                 ->  Sort  (cost=5114487.57..5114491.22 rows=1458 width=61)
                                       Sort Key: item_3.i_item_id
                                       ->  Parallel Hash Join  (cost=5104856.13..5114410.96 rows=1458 width=61)
                                             Hash Cond: (item_3.i_item_sk = catalog_sales_3.cs_item_sk)
                                             ->  Parallel Seq Scan on item item_3  (cost=0.00..9230.00 rows=85000 width=21)
                                             ->  Parallel Hash  (cost=5104837.90..5104837.90 rows=1458 width=48)
                                                   ->  Nested Loop  (cost=5066956.03..5104837.90 rows=1458 width=48)
                                                         ->  Parallel Hash Join  (cost=5066955.60..5093562.44 rows=1508 width=52)
                                                               Hash Cond: (customer_address_3.ca_address_sk = customer_3.c_current_addr_sk)
                                                               ->  Parallel Seq Scan on customer_address customer_address_3  (cost=0.00..26369.67 rows=61570 width=4)
                                                                     Filter: ((ca_state)::text = ANY ('{IN,MS,ND,NM,OK,VA}'::text[]))
                                                               ->  Parallel Hash  (cost=5066828.06..5066828.06 rows=10203 width=56)
                                                                     ->  Parallel Hash Join  (cost=5012111.36..5066828.06 rows=10203 width=56)
                                                                           Hash Cond: (customer_3.c_customer_sk = catalog_sales_3.cs_bill_customer_sk)
                                                                           ->  Parallel Seq Scan on customer customer_3  (cost=0.00..53161.85 rows=403292 width=16)
                                                                                 Filter: (c_birth_month = ANY ('{1,2,6,8,9,12}'::integer[]))
                                                                           ->  Parallel Hash  (cost=5011846.42..5011846.42 rows=21195 width=48)
                                                                                 ->  Parallel Hash Join  (cost=34273.79..5011846.42 rows=21195 width=48)
                                                                                       Hash Cond: (catalog_sales_3.cs_bill_cdemo_sk = customer_demographics_6.cd_demo_sk)
                                                                                       ->  Parallel Hash Join  (cost=2000.80..4978793.14 rows=297255 width=48)
                                                                                             Hash Cond: (catalog_sales_3.cs_sold_date_sk = date_dim_3.d_date_sk)
                                                                                             ->  Parallel Seq Scan on catalog_sales catalog_sales_3  (cost=0.00..4819292.97 rows=59996297 width=52)
                                                                                             ->  Parallel Hash  (cost=1998.12..1998.12 rows=214 width=4)
                                                                                                   ->  Parallel Seq Scan on date_dim date_dim_3  (cost=0.00..1998.12 rows=214 width=4)
                                                                                                         Filter: (d_year = 1998)
                                                                                       ->  Parallel Hash  (cost=31556.00..31556.00 rows=57359 width=8)
                                                                                             ->  Parallel Seq Scan on customer_demographics customer_demographics_6  (cost=0.00..31556.00 rows=57359 width=8)
                                                                                                   Filter: (((cd_gender)::text = 'F'::text) AND ((cd_education_status)::text = 'Unknown'::text))
                                                         ->  Index Only Scan using customer_demographics_pkey on customer_demographics customer_demographics_7  (cost=0.43..7.48 rows=1 width=4)
                                                               Index Cond: (cd_demo_sk = customer_3.c_current_cdemo_sk)
               ->  Finalize Aggregate  (cost=5115487.82..5115487.83 rows=1 width=352)
                     ->  Gather  (cost=5115487.52..5115487.73 rows=2 width=224)
                           Workers Planned: 2
                           ->  Partial Aggregate  (cost=5114487.52..5114487.53 rows=1 width=224)
                                 ->  Parallel Hash Join  (cost=5104856.13..5114410.96 rows=1458 width=44)
                                       Hash Cond: (item_4.i_item_sk = catalog_sales_4.cs_item_sk)
                                       ->  Parallel Seq Scan on item item_4  (cost=0.00..9230.00 rows=85000 width=4)
                                       ->  Parallel Hash  (cost=5104837.90..5104837.90 rows=1458 width=48)
                                             ->  Nested Loop  (cost=5066956.03..5104837.90 rows=1458 width=48)
                                                   ->  Parallel Hash Join  (cost=5066955.60..5093562.44 rows=1508 width=52)
                                                         Hash Cond: (customer_address_4.ca_address_sk = customer_4.c_current_addr_sk)
                                                         ->  Parallel Seq Scan on customer_address customer_address_4  (cost=0.00..26369.67 rows=61570 width=4)
                                                               Filter: ((ca_state)::text = ANY ('{IN,MS,ND,NM,OK,VA}'::text[]))
                                                         ->  Parallel Hash  (cost=5066828.06..5066828.06 rows=10203 width=56)
                                                               ->  Parallel Hash Join  (cost=5012111.36..5066828.06 rows=10203 width=56)
                                                                     Hash Cond: (customer_4.c_customer_sk = catalog_sales_4.cs_bill_customer_sk)
                                                                     ->  Parallel Seq Scan on customer customer_4  (cost=0.00..53161.85 rows=403292 width=16)
                                                                           Filter: (c_birth_month = ANY ('{1,2,6,8,9,12}'::integer[]))
                                                                     ->  Parallel Hash  (cost=5011846.42..5011846.42 rows=21195 width=48)
                                                                           ->  Parallel Hash Join  (cost=34273.79..5011846.42 rows=21195 width=48)
                                                                                 Hash Cond: (catalog_sales_4.cs_bill_cdemo_sk = customer_demographics_8.cd_demo_sk)
                                                                                 ->  Parallel Hash Join  (cost=2000.80..4978793.14 rows=297255 width=48)
                                                                                       Hash Cond: (catalog_sales_4.cs_sold_date_sk = date_dim_4.d_date_sk)
                                                                                       ->  Parallel Seq Scan on catalog_sales catalog_sales_4  (cost=0.00..4819292.97 rows=59996297 width=52)
                                                                                       ->  Parallel Hash  (cost=1998.12..1998.12 rows=214 width=4)
                                                                                             ->  Parallel Seq Scan on date_dim date_dim_4  (cost=0.00..1998.12 rows=214 width=4)
                                                                                                   Filter: (d_year = 1998)
                                                                                 ->  Parallel Hash  (cost=31556.00..31556.00 rows=57359 width=8)
                                                                                       ->  Parallel Seq Scan on customer_demographics customer_demographics_8  (cost=0.00..31556.00 rows=57359 width=8)
                                                                                             Filter: (((cd_gender)::text = 'F'::text) AND ((cd_education_status)::text = 'Unknown'::text))
                                                   ->  Index Only Scan using customer_demographics_pkey on customer_demographics customer_demographics_9  (cost=0.43..7.48 rows=1 width=4)
                                                         Index Cond: (cd_demo_sk = customer_4.c_current_cdemo_sk)
 JIT:
   Functions: 309
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(183 rows)


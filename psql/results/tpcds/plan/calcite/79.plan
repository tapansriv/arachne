                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7864868.46..7864868.71 rows=100 width=65)
   ->  Sort  (cost=7864868.46..7865359.27 rows=196323 width=65)
         Sort Key: customer.c_last_name NULLS FIRST, customer.c_first_name NULLS FIRST, t14."SUBSTRING" NULLS FIRST, t14.profit NULLS FIRST
         ->  Hash Join  (cost=7813289.23..7857365.14 rows=196323 width=65)
               Hash Cond: (t14.ss_customer_sk = customer.c_customer_sk)
               ->  Subquery Scan on t14  (cost=7717989.64..7745994.19 rows=196323 width=56)
                     ->  Finalize GroupAggregate  (cost=7717989.64..7744030.96 rows=196323 width=70)
                           Group Key: store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, store.s_city
                           ->  Gather Merge  (cost=7717989.64..7739122.89 rows=163602 width=38)
                                 Workers Planned: 2
                                 ->  Partial GroupAggregate  (cost=7716989.61..7719239.14 rows=81801 width=38)
                                       Group Key: store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, store.s_city
                                       ->  Sort  (cost=7716989.61..7717194.12 rows=81801 width=38)
                                             Sort Key: store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, store.s_city
                                             ->  Hash Join  (cost=2542.28..7708074.72 rows=81801 width=38)
                                                   Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                   ->  Hash Join  (cost=2515.51..7707806.89 rows=90917 width=32)
                                                         Hash Cond: (store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)
                                                         ->  Parallel Hash Join  (cost=2321.51..7706986.86 rows=238352 width=36)
                                                               Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                               ->  Parallel Seq Scan on store_sales  (cost=0.00..7389799.50 rows=119942250 width=40)
                                                               ->  Parallel Hash  (cost=2320.40..2320.40 rows=89 width=4)
                                                                     ->  Parallel Seq Scan on date_dim  (cost=0.00..2320.40 rows=89 width=4)
                                                                           Filter: ((d_dow = 1) AND ((d_year = 1999) OR (d_year = 2000) OR (d_year = 2001)))
                                                         ->  Hash  (cost=158.00..158.00 rows=2880 width=4)
                                                               ->  Seq Scan on household_demographics  (cost=0.00..158.00 rows=2880 width=4)
                                                                     Filter: ((hd_dep_count = 6) OR (hd_vehicle_count > 2))
                                                   ->  Hash  (cost=22.03..22.03 rows=379 width=14)
                                                         ->  Seq Scan on store  (cost=0.00..22.03 rows=379 width=14)
                                                               Filter: ((s_number_employees >= 200) AND (s_number_employees <= 295))
               ->  Hash  (cost=58578.71..58578.71 rows=2000071 width=17)
                     ->  Seq Scan on customer  (cost=0.00..58578.71 rows=2000071 width=17)
 JIT:
   Functions: 49
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(35 rows)


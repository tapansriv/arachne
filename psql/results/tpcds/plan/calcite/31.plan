

 Merge Join  (cost=30861345.47..79292406783894480.00 rows=1023117813305539712 width=50)
   Merge Cond: ((customer_address_1.ca_county)::text = (customer_address_3.ca_county)::text)
   Join Filter: (CASE WHEN ((sum(web_sales.ws_ext_sales_price) > '0'::double precision)) THEN (((sum(web_sales_1.ws_ext_sales_price) * '1'::double precision)) / (sum(web_sales.ws_ext_sales_price))) ELSE NULL::double precision END > CASE WHEN ((sum(store_sales.ss_ext_sales_price) > '0'::double precision)) THEN (((sum(store_sales_1.ss_ext_sales_price) * '1'::double precision)) / (sum(store_sales.ss_ext_sales_price))) ELSE NULL::double precision END)
   ->  Merge Join  (cost=10286855.41..11408199.99 rows=71146501 width=50)
         Merge Cond: ((customer_address.ca_county)::text = (customer_address_1.ca_county)::text)
         ->  Finalize GroupAggregate  (cost=2530481.05..2541996.67 rows=89630 width=31)
               Group Key: customer_address.ca_county, date_dim.d_qoy, date_dim.d_year
               ->  Gather Merge  (cost=2530481.05..2539942.64 rows=74692 width=30)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=2529481.02..2530321.31 rows=37346 width=30)
                           Group Key: customer_address.ca_county, date_dim.d_qoy, date_dim.d_year
                           ->  Sort  (cost=2529481.02..2529574.39 rows=37346 width=30)
                                 Sort Key: customer_address.ca_county
                                 ->  Parallel Hash Join  (cost=2498557.06..2526644.84 rows=37346 width=30)
                                       Hash Cond: (customer_address.ca_address_sk = web_sales.ws_bill_addr_sk)
                                       ->  Parallel Seq Scan on customer_address  (cost=0.00..23244.67 rows=416667 width=18)
                                       ->  Parallel Hash  (cost=2498090.16..2498090.16 rows=37352 width=20)
                                             ->  Parallel Hash Join  (cost=2106.23..2498090.16 rows=37352 width=20)
                                                   Hash Cond: (web_sales.ws_sold_date_sk = date_dim.d_date_sk)
                                                   ->  Parallel Seq Scan on web_sales  (cost=0.00..2417251.13 rows=29991713 width=16)
                                                   ->  Parallel Hash  (cost=2105.55..2105.55 rows=54 width=12)
                                                         ->  Parallel Seq Scan on date_dim  (cost=0.00..2105.55 rows=54 width=12)
                                                               Filter: ((d_qoy = 1) AND (d_year = 2000))
         ->  Materialize  (cost=7756374.37..7798282.32 rows=158756 width=27)
               ->  Finalize GroupAggregate  (cost=7756374.37..7796297.87 rows=158756 width=31)
                     Group Key: customer_address_1.ca_county, date_dim_1.d_qoy, date_dim_1.d_year
                     ->  Gather Merge  (cost=7756374.37..7790905.92 rows=272600 width=30)
                           Workers Planned: 2
                           ->  Partial GroupAggregate  (cost=7755374.34..7758441.09 rows=136300 width=30)
                                 Group Key: customer_address_1.ca_county, date_dim_1.d_qoy, date_dim_1.d_year
                                 ->  Sort  (cost=7755374.34..7755715.09 rows=136300 width=30)
                                       Sort Key: customer_address_1.ca_county
                                       ->  Parallel Hash Join  (cost=7709392.30..7740488.39 rows=136300 width=30)
                                             Hash Cond: (customer_address_1.ca_address_sk = store_sales.ss_addr_sk)
                                             ->  Parallel Seq Scan on customer_address customer_address_1  (cost=0.00..23244.67 rows=416667 width=18)
                                             ->  Parallel Hash  (cost=7706771.58..7706771.58 rows=142698 width=20)
                                                   ->  Parallel Hash Join  (cost=2106.23..7706771.58 rows=142698 width=20)
                                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim_1.d_date_sk)
                                                         ->  Parallel Seq Scan on store_sales  (cost=0.00..7389799.50 rows=119942250 width=16)
                                                         ->  Parallel Hash  (cost=2105.55..2105.55 rows=54 width=12)
                                                               ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2105.55 rows=54 width=12)
                                                                     Filter: ((d_qoy = 1) AND (d_year = 2000))
   ->  Materialize  (cost=20574490.06..798137291193.30 rows=8628262478993 width=104)
         ->  Merge Join  (cost=20574490.06..776566634995.82 rows=8628262478993 width=104)
               Merge Cond: ((customer_address_3.ca_county)::text = (customer_address_5.ca_county)::text)
               Join Filter: ((CASE WHEN ((sum(web_sales_1.ws_ext_sales_price) > '0'::double precision)) THEN ((((sum(web_sales_2.ws_ext_sales_price) * '1'::double precision)) / (sum(web_sales_1.ws_ext_sales_price))))::numeric(19,4) ELSE NULL::numeric END)::double precision > CASE WHEN ((sum(store_sales_1.ss_ext_sales_price) > '0'::double precision)) THEN (((sum(store_sales_2.ss_ext_sales_price) * '1'::double precision)) / (sum(store_sales_1.ss_ext_sales_price))) ELSE NULL::double precision END)
               ->  Merge Join  (cost=10286855.41..11409689.18 rows=71146501 width=62)
                     Merge Cond: ((customer_address_2.ca_county)::text = (customer_address_3.ca_county)::text)
                     ->  Finalize GroupAggregate  (cost=2530481.05..2542407.47 rows=89630 width=39)
                           Group Key: customer_address_2.ca_county, date_dim_2.d_qoy, date_dim_2.d_year
                           ->  Gather Merge  (cost=2530481.05..2539942.64 rows=74692 width=30)
                                 Workers Planned: 2
                                 ->  Partial GroupAggregate  (cost=2529481.02..2530321.31 rows=37346 width=30)
                                       Group Key: customer_address_2.ca_county, date_dim_2.d_qoy, date_dim_2.d_year
                                       ->  Sort  (cost=2529481.02..2529574.39 rows=37346 width=30)
                                             Sort Key: customer_address_2.ca_county
                                             ->  Parallel Hash Join  (cost=2498557.06..2526644.84 rows=37346 width=30)
                                                   Hash Cond: (customer_address_2.ca_address_sk = web_sales_1.ws_bill_addr_sk)
                                                   ->  Parallel Seq Scan on customer_address customer_address_2  (cost=0.00..23244.67 rows=416667 width=18)
                                                   ->  Parallel Hash  (cost=2498090.16..2498090.16 rows=37352 width=20)
                                                         ->  Parallel Hash Join  (cost=2106.23..2498090.16 rows=37352 width=20)
                                                               Hash Cond: (web_sales_1.ws_sold_date_sk = date_dim_2.d_date_sk)
                                                               ->  Parallel Seq Scan on web_sales web_sales_1  (cost=0.00..2417251.13 rows=29991713 width=16)
                                                               ->  Parallel Hash  (cost=2105.55..2105.55 rows=54 width=12)
                                                                     ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..2105.55 rows=54 width=12)
                                                                           Filter: ((d_qoy = 2) AND (d_year = 2000))
                     ->  Materialize  (cost=7756374.37..7799360.71 rows=158756 width=31)
                           ->  Finalize GroupAggregate  (cost=7756374.37..7797376.26 rows=158756 width=39)
                                 Group Key: customer_address_3.ca_county, date_dim_3.d_qoy, date_dim_3.d_year
                                 ->  Gather Merge  (cost=7756374.37..7790905.92 rows=272600 width=30)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=7755374.34..7758441.09 rows=136300 width=30)
                                             Group Key: customer_address_3.ca_county, date_dim_3.d_qoy, date_dim_3.d_year
                                             ->  Sort  (cost=7755374.34..7755715.09 rows=136300 width=30)
                                                   Sort Key: customer_address_3.ca_county
                                                   ->  Parallel Hash Join  (cost=7709392.30..7740488.39 rows=136300 width=30)
                                                         Hash Cond: (customer_address_3.ca_address_sk = store_sales_1.ss_addr_sk)
                                                         ->  Parallel Seq Scan on customer_address customer_address_3  (cost=0.00..23244.67 rows=416667 width=18)
                                                         ->  Parallel Hash  (cost=7706771.58..7706771.58 rows=142698 width=20)
                                                               ->  Parallel Hash Join  (cost=2106.23..7706771.58 rows=142698 width=20)
                                                                     Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_3.d_date_sk)
                                                                     ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..7389799.50 rows=119942250 width=16)
                                                                     ->  Parallel Hash  (cost=2105.55..2105.55 rows=54 width=12)
                                                                           ->  Parallel Seq Scan on date_dim date_dim_3  (cost=0.00..2105.55 rows=54 width=12)
                                                                                 Filter: ((d_qoy = 2) AND (d_year = 2000))
               ->  Materialize  (cost=10287634.65..11614884.33 rows=72764751 width=44)
                     ->  Merge Join  (cost=10287634.65..11432972.45 rows=72764751 width=44)
                           Merge Cond: ((customer_address_4.ca_county)::text = (customer_address_5.ca_county)::text)
                           ->  Finalize GroupAggregate  (cost=2531042.83..2542496.10 rows=90615 width=30)
                                 Group Key: customer_address_4.ca_county, date_dim_4.d_qoy, date_dim_4.d_year
                                 ->  Gather Merge  (cost=2531042.83..2540608.29 rows=75512 width=30)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=2530042.80..2530892.31 rows=37756 width=30)
                                             Group Key: customer_address_4.ca_county, date_dim_4.d_qoy, date_dim_4.d_year
                                             ->  Sort  (cost=2530042.80..2530137.19 rows=37756 width=30)
                                                   Sort Key: customer_address_4.ca_county
                                                   ->  Parallel Hash Join  (cost=2498562.19..2527172.51 rows=37756 width=30)
                                                         Hash Cond: (customer_address_4.ca_address_sk = web_sales_2.ws_bill_addr_sk)
                                                         ->  Parallel Seq Scan on customer_address customer_address_4  (cost=0.00..23244.67 rows=416667 width=18)
                                                         ->  Parallel Hash  (cost=2498090.16..2498090.16 rows=37762 width=20)
                                                               ->  Parallel Hash Join  (cost=2106.23..2498090.16 rows=37762 width=20)
                                                                     Hash Cond: (web_sales_2.ws_sold_date_sk = date_dim_4.d_date_sk)
                                                                     ->  Parallel Seq Scan on web_sales web_sales_2  (cost=0.00..2417251.13 rows=29991713 width=16)
                                                                     ->  Parallel Hash  (cost=2105.55..2105.55 rows=54 width=12)
                                                                           ->  Parallel Seq Scan on date_dim date_dim_4  (cost=0.00..2105.55 rows=54 width=12)
                                                                                 Filter: ((d_qoy = 3) AND (d_year = 2000))
                           ->  Materialize  (cost=7756591.82..7798273.91 rows=160602 width=22)
                                 ->  Finalize GroupAggregate  (cost=7756591.82..7796266.38 rows=160602 width=30)
                                       Group Key: customer_address_5.ca_county, date_dim_5.d_qoy, date_dim_5.d_year
                                       ->  Gather Merge  (cost=7756591.82..7791502.90 rows=275596 width=30)
                                             Workers Planned: 2
                                             ->  Partial GroupAggregate  (cost=7755591.80..7758692.26 rows=137798 width=30)
                                                   Group Key: customer_address_5.ca_county, date_dim_5.d_qoy, date_dim_5.d_year
                                                   ->  Sort  (cost=7755591.80..7755936.30 rows=137798 width=30)
                                                         Sort Key: customer_address_5.ca_county
                                                         ->  Parallel Hash Join  (cost=7709420.90..7740532.23 rows=137798 width=30)
                                                               Hash Cond: (customer_address_5.ca_address_sk = store_sales_2.ss_addr_sk)
                                                               ->  Parallel Seq Scan on customer_address customer_address_5  (cost=0.00..23244.67 rows=416667 width=18)
                                                               ->  Parallel Hash  (cost=7706771.58..7706771.58 rows=144266 width=20)
                                                                     ->  Parallel Hash Join  (cost=2106.23..7706771.58 rows=144266 width=20)
                                                                           Hash Cond: (store_sales_2.ss_sold_date_sk = date_dim_5.d_date_sk)
                                                                           ->  Parallel Seq Scan on store_sales store_sales_2  (cost=0.00..7389799.50 rows=119942250 width=16)
                                                                           ->  Parallel Hash  (cost=2105.55..2105.55 rows=54 width=12)
                                                                                 ->  Parallel Seq Scan on date_dim date_dim_5  (cost=0.00..2105.55 rows=54 width=12)
                                                                                       Filter: ((d_qoy = 3) AND (d_year = 2000))
 JIT:
   Functions: 206
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(128 rows)


                                                                                                                                                 QUERY PLAN                                                                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15746439.24..15746439.24 rows=1 width=189)
   ->  Sort  (cost=15746439.24..15746439.24 rows=1 width=189)
         Sort Key: ((t8.sum_sales - t8.avg_monthly_sales)) NULLS FIRST, t8.i_category, t8.i_brand, t8.cc_name, t8.d_moy, t8.avg_monthly_sales, t8.sum_sales, (sum(catalog_sales_1.cs_sales_price)), (sum(catalog_sales.cs_sales_price))
         ->  Merge Join  (cost=15251095.26..15746439.23 rows=1 width=189)
               Merge Cond: (((item.i_category)::text = (t8.i_category)::text) AND ((item.i_brand)::text = (t8.i_brand)::text) AND ((call_center.cc_name)::text = (t8.cc_name)::text))
               Join Filter: (t8.rn = ((rank() OVER (?) - 1)))
               ->  WindowAgg  (cost=5083698.42..5222578.26 rows=828413 width=165)
                     ->  Finalize GroupAggregate  (cost=5083698.42..5191512.77 rows=828413 width=157)
                           Group Key: item.i_category, item.i_brand, call_center.cc_name, date_dim.d_year, date_dim.d_moy
                           ->  Gather Merge  (cost=5083698.42..5172873.48 rows=690344 width=157)
                                 Workers Planned: 2
                                 ->  Partial GroupAggregate  (cost=5082698.40..5092190.63 rows=345172 width=157)
                                       Group Key: item.i_category, item.i_brand, call_center.cc_name, date_dim.d_year, date_dim.d_moy
                                       ->  Sort  (cost=5082698.40..5083561.33 rows=345172 width=157)
                                             Sort Key: item.i_category, item.i_brand, call_center.cc_name, date_dim.d_year, date_dim.d_moy
                                             ->  Hash Join  (cost=13316.35..4996676.83 rows=345172 width=157)
                                                   Hash Cond: (catalog_sales.cs_call_center_sk = call_center.cc_call_center_sk)
                                                   ->  Parallel Hash Join  (cost=13305.45..4995658.87 rows=347070 width=43)
                                                         Hash Cond: (catalog_sales.cs_item_sk = item.i_item_sk)
                                                         ->  Parallel Hash Join  (cost=2430.95..4979223.29 rows=347070 width=24)
                                                               Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)
                                                               ->  Parallel Seq Scan on catalog_sales  (cost=0.00..4819292.97 rows=59996297 width=20)
                                                               ->  Parallel Hash  (cost=2427.82..2427.82 rows=250 width=12)
                                                                     ->  Parallel Seq Scan on date_dim  (cost=0.00..2427.82 rows=250 width=12)
                                                                           Filter: ((d_year = 1999) OR ((d_year = 1998) AND (d_moy = 12)) OR ((d_year = 2000) AND (d_moy = 1)))
                                                         ->  Parallel Hash  (cost=9230.00..9230.00 rows=85000 width=27)
                                                               ->  Parallel Seq Scan on item  (cost=0.00..9230.00 rows=85000 width=27)
                                                   ->  Hash  (cost=10.40..10.40 rows=40 width=122)
                                                         ->  Seq Scan on call_center  (cost=0.00..10.40 rows=40 width=122)
               ->  Materialize  (cost=10167396.84..10509363.72 rows=1 width=330)
                     ->  Merge Join  (cost=10167396.84..10509363.72 rows=1 width=330)
                           Merge Cond: (((item_1.i_category)::text = (t8.i_category)::text) AND ((item_1.i_brand)::text = (t8.i_brand)::text) AND ((call_center_1.cc_name)::text = (t8.cc_name)::text))
                           Join Filter: (t8.rn = ((rank() OVER (?) + 1)))
                           ->  WindowAgg  (cost=5083698.42..5222578.26 rows=828413 width=165)
                                 ->  Finalize GroupAggregate  (cost=5083698.42..5191512.77 rows=828413 width=157)
                                       Group Key: item_1.i_category, item_1.i_brand, call_center_1.cc_name, date_dim_1.d_year, date_dim_1.d_moy
                                       ->  Gather Merge  (cost=5083698.42..5172873.48 rows=690344 width=157)
                                             Workers Planned: 2
                                             ->  Partial GroupAggregate  (cost=5082698.40..5092190.63 rows=345172 width=157)
                                                   Group Key: item_1.i_category, item_1.i_brand, call_center_1.cc_name, date_dim_1.d_year, date_dim_1.d_moy
                                                   ->  Sort  (cost=5082698.40..5083561.33 rows=345172 width=157)
                                                         Sort Key: item_1.i_category, item_1.i_brand, call_center_1.cc_name, date_dim_1.d_year, date_dim_1.d_moy
                                                         ->  Hash Join  (cost=13316.35..4996676.83 rows=345172 width=157)
                                                               Hash Cond: (catalog_sales_1.cs_call_center_sk = call_center_1.cc_call_center_sk)
                                                               ->  Parallel Hash Join  (cost=13305.45..4995658.87 rows=347070 width=43)
                                                                     Hash Cond: (catalog_sales_1.cs_item_sk = item_1.i_item_sk)
                                                                     ->  Parallel Hash Join  (cost=2430.95..4979223.29 rows=347070 width=24)
                                                                           Hash Cond: (catalog_sales_1.cs_sold_date_sk = date_dim_1.d_date_sk)
                                                                           ->  Parallel Seq Scan on catalog_sales catalog_sales_1  (cost=0.00..4819292.97 rows=59996297 width=20)
                                                                           ->  Parallel Hash  (cost=2427.82..2427.82 rows=250 width=12)
                                                                                 ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2427.82 rows=250 width=12)
                                                                                       Filter: ((d_year = 1999) OR ((d_year = 1998) AND (d_moy = 12)) OR ((d_year = 2000) AND (d_moy = 1)))
                                                                     ->  Parallel Hash  (cost=9230.00..9230.00 rows=85000 width=27)
                                                                           ->  Parallel Seq Scan on item item_1  (cost=0.00..9230.00 rows=85000 width=27)
                                                               ->  Hash  (cost=10.40..10.40 rows=40 width=122)
                                                                     ->  Seq Scan on call_center call_center_1  (cost=0.00..10.40 rows=40 width=122)
                           ->  Materialize  (cost=5083698.42..5272284.19 rows=460 width=173)
                                 ->  Subquery Scan on t8  (cost=5083698.42..5272283.04 rows=460 width=173)
                                       Filter: ((t8.avg_monthly_sales > '0'::double precision) AND (t8.d_year = 1999) AND (CASE WHEN (t8.avg_monthly_sales > '0'::double precision) THEN ((abs((t8.sum_sales - t8.avg_monthly_sales)) / t8.avg_monthly_sales))::numeric(19,0) ELSE NULL::numeric END > 0.1))
                                       ->  WindowAgg  (cost=5083698.42..5245359.61 rows=828413 width=173)
                                             ->  WindowAgg  (cost=5083698.42..5220507.22 rows=828413 width=165)
                                                   ->  Finalize GroupAggregate  (cost=5083698.42..5191512.77 rows=828413 width=157)
                                                         Group Key: item_2.i_category, item_2.i_brand, call_center_2.cc_name, date_dim_2.d_year, date_dim_2.d_moy
                                                         ->  Gather Merge  (cost=5083698.42..5172873.48 rows=690344 width=157)
                                                               Workers Planned: 2
                                                               ->  Partial GroupAggregate  (cost=5082698.40..5092190.63 rows=345172 width=157)
                                                                     Group Key: item_2.i_category, item_2.i_brand, call_center_2.cc_name, date_dim_2.d_year, date_dim_2.d_moy
                                                                     ->  Sort  (cost=5082698.40..5083561.33 rows=345172 width=157)
                                                                           Sort Key: item_2.i_category, item_2.i_brand, call_center_2.cc_name, date_dim_2.d_year, date_dim_2.d_moy
                                                                           ->  Hash Join  (cost=13316.35..4996676.83 rows=345172 width=157)
                                                                                 Hash Cond: (catalog_sales_2.cs_call_center_sk = call_center_2.cc_call_center_sk)
                                                                                 ->  Parallel Hash Join  (cost=13305.45..4995658.87 rows=347070 width=43)
                                                                                       Hash Cond: (catalog_sales_2.cs_item_sk = item_2.i_item_sk)
                                                                                       ->  Parallel Hash Join  (cost=2430.95..4979223.29 rows=347070 width=24)
                                                                                             Hash Cond: (catalog_sales_2.cs_sold_date_sk = date_dim_2.d_date_sk)
                                                                                             ->  Parallel Seq Scan on catalog_sales catalog_sales_2  (cost=0.00..4819292.97 rows=59996297 width=20)
                                                                                             ->  Parallel Hash  (cost=2427.82..2427.82 rows=250 width=12)
                                                                                                   ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..2427.82 rows=250 width=12)
                                                                                                         Filter: ((d_year = 1999) OR ((d_year = 1998) AND (d_moy = 12)) OR ((d_year = 2000) AND (d_moy = 1)))
                                                                                       ->  Parallel Hash  (cost=9230.00..9230.00 rows=85000 width=27)
                                                                                             ->  Parallel Seq Scan on item item_2  (cost=0.00..9230.00 rows=85000 width=27)
                                                                                 ->  Hash  (cost=10.40..10.40 rows=40 width=122)
                                                                                       ->  Seq Scan on call_center call_center_2  (cost=0.00..10.40 rows=40 width=122)
 JIT:
   Functions: 158
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(86 rows)


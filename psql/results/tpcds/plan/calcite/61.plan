                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15488949.85..15488949.86 rows=1 width=48)
   ->  Sort  (cost=15488949.85..15488949.86 rows=1 width=48)
         Sort Key: (sum(store_sales.ss_ext_sales_price)), (sum(store_sales_1.ss_ext_sales_price))
         ->  Nested Loop  (cost=15488949.78..15488949.84 rows=1 width=48)
               ->  Finalize Aggregate  (cost=7735227.69..7735227.71 rows=1 width=26)
                     ->  Gather  (cost=7735227.47..7735227.68 rows=2 width=8)
                           Workers Planned: 2
                           ->  Partial Aggregate  (cost=7734227.47..7734227.48 rows=1 width=8)
                                 ->  Nested Loop  (cost=11721.68..7734226.46 rows=405 width=8)
                                       ->  Nested Loop  (cost=11721.25..7725580.70 rows=1112 width=12)
                                             ->  Hash Join  (cost=11720.82..7716523.18 rows=1165 width=12)
                                                   Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                   ->  Hash Join  (cost=11697.00..7716493.54 rows=2192 width=16)
                                                         Hash Cond: (store_sales.ss_promo_sk = promotion.p_promo_sk)
                                                         ->  Parallel Hash Join  (cost=11653.10..7716437.82 rows=4487 width=20)
                                                               Hash Cond: (store_sales.ss_item_sk = item.i_item_sk)
                                                               ->  Parallel Hash Join  (cost=2105.76..7706771.11 rows=45475 width=24)
                                                                     Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                     ->  Parallel Seq Scan on store_sales  (cost=0.00..7389799.50 rows=119942250 width=28)
                                                                     ->  Parallel Hash  (cost=2105.55..2105.55 rows=17 width=4)
                                                                           ->  Parallel Seq Scan on date_dim  (cost=0.00..2105.55 rows=17 width=4)
                                                                                 Filter: ((d_year = 1998) AND (d_moy = 11))
                                                               ->  Parallel Hash  (cost=9442.50..9442.50 rows=8387 width=4)
                                                                     ->  Parallel Seq Scan on item  (cost=0.00..9442.50 rows=8387 width=4)
                                                                           Filter: ((i_category)::text = 'Jewelry'::text)
                                                         ->  Hash  (cost=37.50..37.50 rows=512 width=4)
                                                               ->  Seq Scan on promotion  (cost=0.00..37.50 rows=512 width=4)
                                                                     Filter: (((p_channel_dmail)::text = 'Y'::text) OR ((p_channel_email)::text = 'Y'::text) OR ((p_channel_tv)::text = 'Y'::text))
                                                   ->  Hash  (cost=21.02..21.02 rows=224 width=4)
                                                         ->  Seq Scan on store  (cost=0.00..21.02 rows=224 width=4)
                                                               Filter: (s_gmt_offset = '-5'::double precision)
                                             ->  Index Scan using customer_pkey on customer  (cost=0.43..7.77 rows=1 width=8)
                                                   Index Cond: (c_customer_sk = store_sales.ss_customer_sk)
                                       ->  Index Scan using customer_address_pkey on customer_address  (cost=0.42..7.77 rows=1 width=4)
                                             Index Cond: (ca_address_sk = customer.c_current_addr_sk)
                                             Filter: (ca_gmt_offset = '-5'::double precision)
               ->  Finalize Aggregate  (cost=7753722.08..7753722.10 rows=1 width=26)
                     ->  Gather  (cost=7753721.86..7753722.07 rows=2 width=8)
                           Workers Planned: 2
                           ->  Partial Aggregate  (cost=7752721.86..7752721.87 rows=1 width=8)
                                 ->  Nested Loop  (cost=11677.78..7752719.79 rows=830 width=8)
                                       ->  Nested Loop  (cost=11677.35..7735023.98 rows=2276 width=12)
                                             ->  Hash Join  (cost=11676.92..7716473.55 rows=2386 width=12)
                                                   Hash Cond: (store_sales_1.ss_store_sk = store_1.s_store_sk)
                                                   ->  Parallel Hash Join  (cost=11653.10..7716437.82 rows=4487 width=16)
                                                         Hash Cond: (store_sales_1.ss_item_sk = item_1.i_item_sk)
                                                         ->  Parallel Hash Join  (cost=2105.76..7706771.11 rows=45475 width=20)
                                                               Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
                                                               ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..7389799.50 rows=119942250 width=24)
                                                               ->  Parallel Hash  (cost=2105.55..2105.55 rows=17 width=4)
                                                                     ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2105.55 rows=17 width=4)
                                                                           Filter: ((d_year = 1998) AND (d_moy = 11))
                                                         ->  Parallel Hash  (cost=9442.50..9442.50 rows=8387 width=4)
                                                               ->  Parallel Seq Scan on item item_1  (cost=0.00..9442.50 rows=8387 width=4)
                                                                     Filter: ((i_category)::text = 'Jewelry'::text)
                                                   ->  Hash  (cost=21.02..21.02 rows=224 width=4)
                                                         ->  Seq Scan on store store_1  (cost=0.00..21.02 rows=224 width=4)
                                                               Filter: (s_gmt_offset = '-5'::double precision)
                                             ->  Index Scan using customer_pkey on customer customer_1  (cost=0.43..7.77 rows=1 width=8)
                                                   Index Cond: (c_customer_sk = store_sales_1.ss_customer_sk)
                                       ->  Index Scan using customer_address_pkey on customer_address customer_address_1  (cost=0.42..7.77 rows=1 width=4)
                                             Index Cond: (ca_address_sk = customer_1.c_current_addr_sk)
                                             Filter: (ca_gmt_offset = '-5'::double precision)
 JIT:
   Functions: 97
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(66 rows)


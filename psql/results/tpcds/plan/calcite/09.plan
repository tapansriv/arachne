                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop Left Join  (cost=120716331.07..120716333.22 rows=1 width=40)
   ->  Nested Loop Left Join  (cost=112668637.63..112668639.74 rows=1 width=112)
         ->  Nested Loop Left Join  (cost=104620944.20..104620946.28 rows=1 width=104)
               ->  Nested Loop Left Join  (cost=96573250.77..96573252.81 rows=1 width=96)
                     ->  Nested Loop Left Join  (cost=88525707.26..88525709.28 rows=1 width=88)
                           ->  Nested Loop Left Join  (cost=80478163.75..80478165.74 rows=1 width=80)
                                 ->  Nested Loop Left Join  (cost=72430620.25..72430622.20 rows=1 width=72)
                                       ->  Nested Loop Left Join  (cost=64383246.66..64383248.59 rows=1 width=64)
                                             ->  Nested Loop Left Join  (cost=56335873.07..56335874.96 rows=1 width=56)
                                                   ->  Nested Loop Left Join  (cost=48288499.48..48288501.35 rows=1 width=48)
                                                         ->  Nested Loop Left Join  (cost=40240466.21..40240468.04 rows=1 width=40)
                                                               ->  Nested Loop Left Join  (cost=32192432.93..32192434.74 rows=1 width=32)
                                                                     ->  Nested Loop Left Join  (cost=24144399.66..24144401.44 rows=1 width=24)
                                                                           ->  Nested Loop Left Join  (cost=16096266.44..16096268.19 rows=1 width=16)
                                                                                 ->  Nested Loop Left Join  (cost=8048133.22..8048134.94 rows=1 width=8)
                                                                                       ->  Seq Scan on reason  (cost=0.00..1.69 rows=1 width=0)
                                                                                             Filter: (r_reason_sk = 1)
                                                                                       ->  Finalize Aggregate  (cost=8048133.22..8048133.23 rows=1 width=8)
                                                                                             ->  Gather  (cost=8048133.00..8048133.21 rows=2 width=8)
                                                                                                   Workers Planned: 2
                                                                                                   ->  Partial Aggregate  (cost=8047133.00..8047133.01 rows=1 width=8)
                                                                                                         ->  Parallel Seq Scan on store_sales  (cost=0.00..7989510.75 rows=23048902 width=0)
                                                                                                               Filter: ((ss_quantity >= 1) AND (ss_quantity <= 20))
                                                                                 ->  Finalize Aggregate  (cost=8048133.22..8048133.23 rows=1 width=8)
                                                                                       ->  Gather  (cost=8048133.00..8048133.21 rows=2 width=32)
                                                                                             Workers Planned: 2
                                                                                             ->  Partial Aggregate  (cost=8047133.00..8047133.01 rows=1 width=32)
                                                                                                   ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..7989510.75 rows=23048902 width=8)
                                                                                                         Filter: ((ss_quantity >= 1) AND (ss_quantity <= 20))
                                                                           ->  Finalize Aggregate  (cost=8048133.22..8048133.23 rows=1 width=8)
                                                                                 ->  Gather  (cost=8048133.00..8048133.21 rows=2 width=32)
                                                                                       Workers Planned: 2
                                                                                       ->  Partial Aggregate  (cost=8047133.00..8047133.01 rows=1 width=32)
                                                                                             ->  Parallel Seq Scan on store_sales store_sales_2  (cost=0.00..7989510.75 rows=23048902 width=8)
                                                                                                   Filter: ((ss_quantity >= 1) AND (ss_quantity <= 20))
                                                                     ->  Finalize Aggregate  (cost=8048033.27..8048033.28 rows=1 width=8)
                                                                           ->  Gather  (cost=8048033.05..8048033.26 rows=2 width=8)
                                                                                 Workers Planned: 2
                                                                                 ->  Partial Aggregate  (cost=8047033.05..8047033.06 rows=1 width=8)
                                                                                       ->  Parallel Seq Scan on store_sales store_sales_3  (cost=0.00..7989510.75 rows=23008922 width=0)
                                                                                             Filter: ((ss_quantity >= 21) AND (ss_quantity <= 40))
                                                               ->  Finalize Aggregate  (cost=8048033.27..8048033.28 rows=1 width=8)
                                                                     ->  Gather  (cost=8048033.05..8048033.26 rows=2 width=32)
                                                                           Workers Planned: 2
                                                                           ->  Partial Aggregate  (cost=8047033.05..8047033.06 rows=1 width=32)
                                                                                 ->  Parallel Seq Scan on store_sales store_sales_4  (cost=0.00..7989510.75 rows=23008922 width=8)
                                                                                       Filter: ((ss_quantity >= 21) AND (ss_quantity <= 40))
                                                         ->  Finalize Aggregate  (cost=8048033.27..8048033.28 rows=1 width=8)
                                                               ->  Gather  (cost=8048033.05..8048033.26 rows=2 width=32)
                                                                     Workers Planned: 2
                                                                     ->  Partial Aggregate  (cost=8047033.05..8047033.06 rows=1 width=32)
                                                                           ->  Parallel Seq Scan on store_sales store_sales_5  (cost=0.00..7989510.75 rows=23008922 width=8)
                                                                                 Filter: ((ss_quantity >= 21) AND (ss_quantity <= 40))
                                                   ->  Finalize Aggregate  (cost=8047373.59..8047373.60 rows=1 width=8)
                                                         ->  Gather  (cost=8047373.37..8047373.58 rows=2 width=8)
                                                               Workers Planned: 2
                                                               ->  Partial Aggregate  (cost=8046373.37..8046373.38 rows=1 width=8)
                                                                     ->  Parallel Seq Scan on store_sales store_sales_6  (cost=0.00..7989510.75 rows=22745049 width=0)
                                                                           Filter: ((ss_quantity >= 41) AND (ss_quantity <= 60))
                                             ->  Finalize Aggregate  (cost=8047373.59..8047373.60 rows=1 width=8)
                                                   ->  Gather  (cost=8047373.37..8047373.58 rows=2 width=32)
                                                         Workers Planned: 2
                                                         ->  Partial Aggregate  (cost=8046373.37..8046373.38 rows=1 width=32)
                                                               ->  Parallel Seq Scan on store_sales store_sales_7  (cost=0.00..7989510.75 rows=22745049 width=8)
                                                                     Filter: ((ss_quantity >= 41) AND (ss_quantity <= 60))
                                       ->  Finalize Aggregate  (cost=8047373.59..8047373.60 rows=1 width=8)
                                             ->  Gather  (cost=8047373.37..8047373.58 rows=2 width=32)
                                                   Workers Planned: 2
                                                   ->  Partial Aggregate  (cost=8046373.37..8046373.38 rows=1 width=32)
                                                         ->  Parallel Seq Scan on store_sales store_sales_8  (cost=0.00..7989510.75 rows=22745049 width=8)
                                                               Filter: ((ss_quantity >= 41) AND (ss_quantity <= 60))
                                 ->  Finalize Aggregate  (cost=8047543.50..8047543.51 rows=1 width=8)
                                       ->  Gather  (cost=8047543.29..8047543.50 rows=2 width=8)
                                             Workers Planned: 2
                                             ->  Partial Aggregate  (cost=8046543.29..8046543.30 rows=1 width=8)
                                                   ->  Parallel Seq Scan on store_sales store_sales_9  (cost=0.00..7989510.75 rows=22813016 width=0)
                                                         Filter: ((ss_quantity >= 61) AND (ss_quantity <= 80))
                           ->  Finalize Aggregate  (cost=8047543.51..8047543.52 rows=1 width=8)
                                 ->  Gather  (cost=8047543.29..8047543.50 rows=2 width=32)
                                       Workers Planned: 2
                                       ->  Partial Aggregate  (cost=8046543.29..8046543.30 rows=1 width=32)
                                             ->  Parallel Seq Scan on store_sales store_sales_10  (cost=0.00..7989510.75 rows=22813016 width=8)
                                                   Filter: ((ss_quantity >= 61) AND (ss_quantity <= 80))
                     ->  Finalize Aggregate  (cost=8047543.51..8047543.52 rows=1 width=8)
                           ->  Gather  (cost=8047543.29..8047543.50 rows=2 width=32)
                                 Workers Planned: 2
                                 ->  Partial Aggregate  (cost=8046543.29..8046543.30 rows=1 width=32)
                                       ->  Parallel Seq Scan on store_sales store_sales_11  (cost=0.00..7989510.75 rows=22813016 width=8)
                                             Filter: ((ss_quantity >= 61) AND (ss_quantity <= 80))
               ->  Finalize Aggregate  (cost=8047693.43..8047693.44 rows=1 width=8)
                     ->  Gather  (cost=8047693.22..8047693.43 rows=2 width=8)
                           Workers Planned: 2
                           ->  Partial Aggregate  (cost=8046693.22..8046693.23 rows=1 width=8)
                                 ->  Parallel Seq Scan on store_sales store_sales_12  (cost=0.00..7989510.75 rows=22872987 width=0)
                                       Filter: ((ss_quantity >= 81) AND (ss_quantity <= 100))
         ->  Finalize Aggregate  (cost=8047693.44..8047693.45 rows=1 width=8)
               ->  Gather  (cost=8047693.22..8047693.43 rows=2 width=32)
                     Workers Planned: 2
                     ->  Partial Aggregate  (cost=8046693.22..8046693.23 rows=1 width=32)
                           ->  Parallel Seq Scan on store_sales store_sales_13  (cost=0.00..7989510.75 rows=22872987 width=8)
                                 Filter: ((ss_quantity >= 81) AND (ss_quantity <= 100))
   ->  Finalize Aggregate  (cost=8047693.44..8047693.45 rows=1 width=8)
         ->  Gather  (cost=8047693.22..8047693.43 rows=2 width=32)
               Workers Planned: 2
               ->  Partial Aggregate  (cost=8046693.22..8046693.23 rows=1 width=32)
                     ->  Parallel Seq Scan on store_sales store_sales_14  (cost=0.00..7989510.75 rows=22872987 width=8)
                           Filter: ((ss_quantity >= 81) AND (ss_quantity <= 100))
 JIT:
   Functions: 117
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(110 rows)


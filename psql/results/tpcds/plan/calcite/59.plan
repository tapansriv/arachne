                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71266978.15..71266978.40 rows=100 width=81)
   ->  Sort  (cost=71266978.15..71267354.55 rows=150560 width=81)
         Sort Key: store.s_store_name NULLS FIRST, store.s_store_id NULLS FIRST, date_dim_2.d_week_seq NULLS FIRST
         ->  Merge Join  (cost=65736020.86..71261223.85 rows=150560 width=81)
               Merge Cond: ((date_dim_2.d_week_seq = ((date_dim_3.d_week_seq - 52))) AND (store_sales.ss_store_sk = store.s_store_sk))
               ->  Merge Join  (cost=30091266.53..35609765.68 rows=75777 width=68)
                     Merge Cond: (date_dim_2.d_week_seq = date_dim.d_week_seq)
                     ->  Finalize GroupAggregate  (cost=30088693.67..35579745.25 rows=2104872 width=64)
                           Group Key: date_dim_2.d_week_seq, store_sales.ss_store_sk
                           ->  Gather Merge  (cost=30088693.67..35463977.29 rows=4209744 width=64)
                                 Workers Planned: 2
                                 ->  Partial GroupAggregate  (cost=30087693.64..34977068.36 rows=2104872 width=64)
                                       Group Key: date_dim_2.d_week_seq, store_sales.ss_store_sk
                                       ->  Sort  (cost=30087693.64..30374065.76 rows=114548847 width=24)
                                             Sort Key: date_dim_2.d_week_seq, store_sales.ss_store_sk
                                             ->  Parallel Hash Join  (cost=2427.82..7707093.18 rows=114548847 width=24)
                                                   Hash Cond: (store_sales.ss_sold_date_sk = date_dim_2.d_date_sk)
                                                   ->  Parallel Seq Scan on store_sales  (cost=0.00..7389799.50 rows=119942250 width=16)
                                                   ->  Parallel Hash  (cost=1890.70..1890.70 rows=42970 width=16)
                                                         ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..1890.70 rows=42970 width=16)
                     ->  Sort  (cost=2572.87..2573.81 rows=377 width=4)
                           Sort Key: date_dim.d_week_seq
                           ->  Seq Scan on date_dim  (cost=0.00..2556.73 rows=377 width=4)
                                 Filter: ((d_month_seq >= 1212) AND (d_month_seq <= 1223))
               ->  Materialize  (cost=35644754.33..35645552.67 rows=159668 width=85)
                     ->  Sort  (cost=35644754.33..35645153.50 rows=159668 width=85)
                           Sort Key: ((date_dim_3.d_week_seq - 52)), store.s_store_sk
                           ->  Hash Join  (cost=30091290.33..35623314.75 rows=159668 width=85)
                                 Hash Cond: ((store_1.s_store_id)::text = (store.s_store_id)::text)
                                 ->  Nested Loop  (cost=30091265.29..35621253.82 rows=70149 width=77)
                                       ->  Merge Join  (cost=30091265.14..35609679.86 rows=70149 width=64)
                                             Merge Cond: (date_dim_3.d_week_seq = date_dim_1.d_week_seq)
                                             ->  Finalize GroupAggregate  (cost=30088693.67..35579745.25 rows=2104872 width=64)
                                                   Group Key: date_dim_3.d_week_seq, store_sales_1.ss_store_sk
                                                   ->  Gather Merge  (cost=30088693.67..35463977.29 rows=4209744 width=64)
                                                         Workers Planned: 2
                                                         ->  Partial GroupAggregate  (cost=30087693.64..34977068.36 rows=2104872 width=64)
                                                               Group Key: date_dim_3.d_week_seq, store_sales_1.ss_store_sk
                                                               ->  Sort  (cost=30087693.64..30374065.76 rows=114548847 width=24)
                                                                     Sort Key: date_dim_3.d_week_seq, store_sales_1.ss_store_sk
                                                                     ->  Parallel Hash Join  (cost=2427.82..7707093.18 rows=114548847 width=24)
                                                                           Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_3.d_date_sk)
                                                                           ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..7389799.50 rows=119942250 width=16)
                                                                           ->  Parallel Hash  (cost=1890.70..1890.70 rows=42970 width=16)
                                                                                 ->  Parallel Seq Scan on date_dim date_dim_3  (cost=0.00..1890.70 rows=42970 width=16)
                                             ->  Sort  (cost=2571.48..2572.35 rows=349 width=4)
                                                   Sort Key: date_dim_1.d_week_seq
                                                   ->  Seq Scan on date_dim date_dim_1  (cost=0.00..2556.73 rows=349 width=4)
                                                         Filter: ((d_month_seq >= 1224) AND (d_month_seq <= 1235))
                                       ->  Index Scan using store_pkey on store store_1  (cost=0.15..0.17 rows=1 width=21)
                                             Index Cond: (s_store_sk = store_sales_1.ss_store_sk)
                                 ->  Hash  (cost=20.02..20.02 rows=402 width=25)
                                       ->  Seq Scan on store  (cost=0.00..20.02 rows=402 width=25)
 JIT:
   Functions: 76
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(56 rows)


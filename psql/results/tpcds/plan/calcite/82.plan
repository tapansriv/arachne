                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=99234.26..99334.23 rows=24 width=127)
   ->  Group  (cost=99234.26..99334.23 rows=24 width=127)
         Group Key: item.i_item_id, item.i_item_desc, item.i_current_price
         ->  Gather Merge  (cost=99234.26..99333.87 rows=48 width=127)
               Workers Planned: 2
               ->  Group  (cost=98234.24..98328.31 rows=24 width=127)
                     Group Key: item.i_item_id, item.i_item_desc, item.i_current_price
                     ->  Sort  (cost=98234.24..98257.75 rows=9407 width=127)
                           Sort Key: item.i_item_id, item.i_item_desc, item.i_current_price
                           ->  Nested Loop  (cost=45.03..97613.40 rows=9407 width=127)
                                 Join Filter: (item.i_item_sk = store_sales.ss_item_sk)
                                 ->  Nested Loop  (cost=0.57..50975.27 rows=7 width=135)
                                       ->  Parallel Seq Scan on item  (cost=0.00..10080.00 rows=10 width=131)
                                             Filter: ((i_current_price >= '62'::double precision) AND (i_current_price <= '92'::double precision) AND (i_manufact_id = ANY ('{129,270,423,821}'::integer[])))
                                       ->  Nested Loop  (cost=0.57..4086.85 rows=268 width=4)
                                             ->  Seq Scan on date_dim  (cost=0.00..2556.73 rows=67 width=4)
                                                   Filter: ((d_date >= '2000-05-25'::date) AND (d_date <= '2000-07-24'::date))
                                             ->  Index Scan using inventory_pkey on inventory  (cost=0.57..22.80 rows=4 width=8)
                                                   Index Cond: ((inv_date_sk = date_dim.d_date_sk) AND (inv_item_sk = item.i_item_sk))
                                                   Filter: ((inv_quantity_on_hand >= 100) AND (inv_quantity_on_hand <= 500))
                                 ->  Bitmap Heap Scan on store_sales  (cost=44.46..6640.60 rows=1759 width=4)
                                       Recheck Cond: (ss_item_sk = inventory.inv_item_sk)
                                       ->  Bitmap Index Scan on store_sales_pkey  (cost=0.00..44.02 rows=1759 width=0)
                                             Index Cond: (ss_item_sk = inventory.inv_item_sk)
(24 rows)


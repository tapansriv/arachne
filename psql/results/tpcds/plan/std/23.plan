                                                                                                               QUERY PLAN                                                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=98700632.28..98700632.53 rows=100 width=21)
   CTE frequent_ss_items
     ->  Finalize GroupAggregate  (cost=8116435.77..8830724.02 rows=1826534 width=48)
           Group Key: ("substring"((item.i_item_desc)::text, 1, 30)), item.i_item_sk, date_dim_2.d_date
           Filter: (count(*) > 4)
           ->  Gather Merge  (cost=8116435.77..8700583.44 rows=4566336 width=48)
                 Workers Planned: 2
                 ->  Partial GroupAggregate  (cost=8115435.74..8172514.94 rows=2283168 width=48)
                       Group Key: ("substring"((item.i_item_desc)::text, 1, 30)), item.i_item_sk, date_dim_2.d_date
                       ->  Sort  (cost=8115435.74..8121143.66 rows=2283168 width=40)
                             Sort Key: ("substring"((item.i_item_desc)::text, 1, 30)), item.i_item_sk, date_dim_2.d_date
                             ->  Parallel Hash Join  (cost=13820.75..7749437.46 rows=2283168 width=40)
                                   Hash Cond: (store_sales.ss_item_sk = item.i_item_sk)
                                   ->  Parallel Hash Join  (cost=2116.25..7706781.60 rows=2283168 width=8)
                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim_2.d_date_sk)
                                         ->  Parallel Seq Scan on store_sales  (cost=0.00..7389799.50 rows=119942250 width=8)
                                         ->  Parallel Hash  (cost=2105.55..2105.55 rows=856 width=8)
                                               ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..2105.55 rows=856 width=8)
                                                     Filter: (d_year = ANY ('{2000,2001,2002,2003}'::integer[]))
                                   ->  Parallel Hash  (cost=9230.00..9230.00 rows=85000 width=106)
                                         ->  Parallel Seq Scan on item  (cost=0.00..9230.00 rows=85000 width=106)
   CTE best_ss_customer
     ->  GroupAggregate  (cost=38635394.31..81019171.87 rows=666690 width=12)
           Group Key: customer_2.c_customer_sk
           Filter: (sum(((store_sales_1.ss_quantity)::double precision * store_sales_1.ss_sales_price)) > ('0.5'::double precision * max((max((sum(((store_sales_2.ss_quantity)::double precision * store_sales_2.ss_sales_price))))))))
           ->  Nested Loop  (cost=38635394.31..75496199.56 rows=274648562 width=24)
                 ->  Gather Merge  (cost=29957747.50..63385445.70 rows=274648562 width=16)
                       Workers Planned: 2
                       ->  Merge Join  (cost=29956747.47..31683186.90 rows=114436901 width=16)
                             Merge Cond: (store_sales_1.ss_customer_sk = customer_2.c_customer_sk)
                             ->  Sort  (cost=29634096.92..29933952.54 rows=119942250 width=16)
                                   Sort Key: store_sales_1.ss_customer_sk
                                   ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..7389799.50 rows=119942250 width=16)
                             ->  Sort  (cost=322593.34..327593.52 rows=2000071 width=4)
                                   Sort Key: customer_2.c_customer_sk
                                   ->  Seq Scan on customer customer_2  (cost=0.00..58578.71 rows=2000071 width=4)
                 ->  Materialize  (cost=8677646.82..8677646.84 rows=1 width=8)
                       ->  Aggregate  (cost=8677646.82..8677646.83 rows=1 width=8)
                             ->  Finalize GroupAggregate  (cost=8103698.53..8652645.93 rows=2000071 width=12)
                                   Group Key: customer_3.c_customer_sk
                                   ->  Gather Merge  (cost=8103698.53..8612644.51 rows=4000142 width=12)
                                         Workers Planned: 2
                                         ->  Partial GroupAggregate  (cost=8102698.51..8149928.84 rows=2000071 width=12)
                                               Group Key: customer_3.c_customer_sk
                                               ->  Sort  (cost=8102698.51..8108144.43 rows=2178370 width=16)
                                                     Sort Key: customer_3.c_customer_sk
                                                     ->  Parallel Hash Join  (cost=62700.92..7798913.59 rows=2178370 width=16)
                                                           Hash Cond: (store_sales_2.ss_customer_sk = customer_3.c_customer_sk)
                                                           ->  Parallel Hash Join  (cost=2116.25..7706781.60 rows=2283168 width=16)
                                                                 Hash Cond: (store_sales_2.ss_sold_date_sk = date_dim_3.d_date_sk)
                                                                 ->  Parallel Seq Scan on store_sales store_sales_2  (cost=0.00..7389799.50 rows=119942250 width=20)
                                                                 ->  Parallel Hash  (cost=2105.55..2105.55 rows=856 width=4)
                                                                       ->  Parallel Seq Scan on date_dim date_dim_3  (cost=0.00..2105.55 rows=856 width=4)
                                                                             Filter: (d_year = ANY ('{2000,2001,2002,2003}'::integer[]))
                                                           ->  Parallel Hash  (cost=46911.63..46911.63 rows=833363 width=4)
                                                                 ->  Parallel Seq Scan on customer customer_3  (cost=0.00..46911.63 rows=833363 width=4)
   ->  Sort  (cost=8850736.39..8851736.43 rows=400014 width=21)
         Sort Key: customer.c_last_name NULLS FIRST, customer.c_first_name NULLS FIRST, (sum(((catalog_sales.cs_quantity)::double precision * catalog_sales.cs_list_price))) NULLS FIRST
         ->  Append  (cost=5753501.03..8835448.14 rows=400014 width=21)
               ->  GroupAggregate  (cost=5753501.03..5806899.77 rows=200007 width=21)
                     Group Key: customer.c_last_name, customer.c_first_name
                     ->  Sort  (cost=5753501.03..5762067.48 rows=3426578 width=25)
                           Sort Key: customer.c_last_name, customer.c_first_name
                           ->  Hash Join  (cost=5121277.40..5217606.48 rows=3426578 width=25)
                                 Hash Cond: (frequent_ss_items.item_sk = catalog_sales.cs_item_sk)
                                 ->  CTE Scan on frequent_ss_items  (cost=0.00..36530.68 rows=1826534 width=4)
                                 ->  Hash  (cost=5115254.22..5115254.22 rows=311455 width=29)
                                       ->  Hash Join  (cost=5010785.34..5115254.22 rows=311455 width=29)
                                             Hash Cond: (customer.c_customer_sk = catalog_sales.cs_bill_customer_sk)
                                             ->  Seq Scan on customer  (cost=0.00..58578.71 rows=2000071 width=17)
                                             ->  Hash  (cost=5005036.68..5005036.68 rows=313093 width=24)
                                                   ->  Hash Join  (cost=4986071.86..5005036.68 rows=313093 width=24)
                                                         Hash Cond: (best_ss_customer.c_customer_sk = catalog_sales.cs_bill_customer_sk)
                                                         ->  CTE Scan on best_ss_customer  (cost=0.00..13333.80 rows=666690 width=4)
                                                         ->  Hash  (cost=4985385.89..4985385.89 rows=54878 width=20)
                                                               ->  Gather  (cost=3105.75..4985385.89 rows=54878 width=20)
                                                                     Workers Planned: 2
                                                                     ->  Parallel Hash Join  (cost=2105.75..4978898.09 rows=22866 width=20)
                                                                           Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)
                                                                           ->  Parallel Seq Scan on catalog_sales  (cost=0.00..4819292.97 rows=59996297 width=24)
                                                                           ->  Parallel Hash  (cost=2105.55..2105.55 rows=16 width=4)
                                                                                 ->  Parallel Seq Scan on date_dim  (cost=0.00..2105.55 rows=16 width=4)
                                                                                       Filter: ((d_year = 2000) AND (d_moy = 2))
               ->  GroupAggregate  (cost=2988726.29..3022548.16 rows=200007 width=21)
                     Group Key: customer_1.c_last_name, customer_1.c_first_name
                     ->  Sort  (cost=2988726.29..2994029.93 rows=2121453 width=25)
                           Sort Key: customer_1.c_last_name, customer_1.c_first_name
                           ->  Hash Join  (cost=2584137.73..2664276.42 rows=2121453 width=25)
                                 Hash Cond: (frequent_ss_items_1.item_sk = web_sales.ws_item_sk)
                                 ->  CTE Scan on frequent_ss_items frequent_ss_items_1  (cost=0.00..36530.68 rows=1826534 width=4)
                                 ->  Hash  (cost=2580534.60..2580534.60 rows=186330 width=29)
                                       ->  Hash Join  (cost=2558670.60..2580534.60 rows=186330 width=29)
                                             Hash Cond: (best_ss_customer_1.c_customer_sk = web_sales.ws_bill_customer_sk)
                                             ->  CTE Scan on best_ss_customer best_ss_customer_1  (cost=0.00..13333.80 rows=666690 width=4)
                                             ->  Hash  (cost=2558325.89..2558325.89 rows=27577 width=37)
                                                   ->  Gather  (cost=2499233.35..2558325.89 rows=27577 width=37)
                                                         Workers Planned: 2
                                                         ->  Parallel Hash Join  (cost=2498233.35..2554568.19 rows=11490 width=37)
                                                               Hash Cond: (customer_1.c_customer_sk = web_sales.ws_bill_customer_sk)
                                                               ->  Parallel Seq Scan on customer customer_1  (cost=0.00..46911.63 rows=833363 width=17)
                                                               ->  Parallel Hash  (cost=2498089.69..2498089.69 rows=11493 width=20)
                                                                     ->  Parallel Hash Join  (cost=2105.75..2498089.69 rows=11493 width=20)
                                                                           Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                                                           ->  Parallel Seq Scan on web_sales  (cost=0.00..2417251.13 rows=29991713 width=24)
                                                                           ->  Parallel Hash  (cost=2105.55..2105.55 rows=16 width=4)
                                                                                 ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2105.55 rows=16 width=4)
                                                                                       Filter: ((d_year = 2000) AND (d_moy = 2))
 JIT:
   Functions: 161
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(110 rows)


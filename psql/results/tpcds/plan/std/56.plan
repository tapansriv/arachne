                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15292579.08..15292579.33 rows=100 width=25)
   ->  Sort  (cost=15292579.08..15292579.58 rows=200 width=25)
         Sort Key: (sum((sum(store_sales.ss_ext_sales_price)))) NULLS FIRST, item.i_item_id NULLS FIRST
         ->  GroupAggregate  (cost=15292540.28..15292571.44 rows=200 width=25)
               Group Key: item.i_item_id
               ->  Sort  (cost=15292540.28..15292550.00 rows=3888 width=25)
                     Sort Key: item.i_item_id NULLS FIRST
                     ->  Append  (cost=7732945.74..15292308.46 rows=3888 width=25)
                           ->  Finalize GroupAggregate  (cost=7732945.74..7753377.24 rows=2140 width=25)
                                 Group Key: item.i_item_id
                                 ->  Gather Merge  (cost=7732945.74..7753346.92 rows=1784 width=25)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=7731945.72..7752140.98 rows=892 width=25)
                                             Group Key: item.i_item_id
                                             ->  Nested Loop  (cost=7731945.72..7752127.60 rows=892 width=25)
                                                   ->  Merge Semi Join  (cost=7731945.29..7732216.59 rows=2562 width=29)
                                                         Merge Cond: ((item.i_item_id)::text = (item_1.i_item_id)::text)
                                                         ->  Sort  (cost=7720437.34..7720547.11 rows=43907 width=29)
                                                               Sort Key: item.i_item_id
                                                               ->  Parallel Hash Join  (cost=7707319.94..7717051.64 rows=43907 width=29)
                                                                     Hash Cond: (item.i_item_sk = store_sales.ss_item_sk)
                                                                     ->  Parallel Seq Scan on item  (cost=0.00..9230.00 rows=85000 width=21)
                                                                     ->  Parallel Hash  (cost=7706771.10..7706771.10 rows=43907 width=16)
                                                                           ->  Parallel Hash Join  (cost=2105.75..7706771.10 rows=43907 width=16)
                                                                                 Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                                 ->  Parallel Seq Scan on store_sales  (cost=0.00..7389799.50 rows=119942250 width=20)
                                                                                 ->  Parallel Hash  (cost=2105.55..2105.55 rows=16 width=4)
                                                                                       ->  Parallel Seq Scan on date_dim  (cost=0.00..2105.55 rows=16 width=4)
                                                                                             Filter: ((d_year = 2001) AND (d_moy = 2))
                                                         ->  Sort  (cost=11507.95..11521.02 rows=5229 width=17)
                                                               Sort Key: item_1.i_item_id
                                                               ->  Seq Scan on item item_1  (cost=0.00..11185.00 rows=5229 width=17)
                                                                     Filter: ((i_color)::text = ANY ('{slate,blanched,burnished}'::text[]))
                                                   ->  Index Scan using customer_address_pkey on customer_address  (cost=0.42..7.77 rows=1 width=4)
                                                         Index Cond: (ca_address_sk = store_sales.ss_addr_sk)
                                                         Filter: (ca_gmt_offset = '-5'::double precision)
                           ->  Finalize GroupAggregate  (cost=5002991.95..5013239.84 rows=1161 width=25)
                                 Group Key: item_2.i_item_id
                                 ->  Gather Merge  (cost=5002991.95..5013223.39 rows=968 width=25)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=5001991.92..5012111.63 rows=484 width=25)
                                             Group Key: item_2.i_item_id
                                             ->  Nested Loop  (cost=5001991.92..5012104.37 rows=484 width=25)
                                                   ->  Merge Semi Join  (cost=5001991.50..5002145.31 rows=1335 width=29)
                                                         Merge Cond: ((item_2.i_item_id)::text = (item_3.i_item_id)::text)
                                                         ->  Sort  (cost=4990483.55..4990540.71 rows=22866 width=29)
                                                               Sort Key: item_2.i_item_id
                                                               ->  Parallel Hash Join  (cost=4979183.91..4988827.94 rows=22866 width=29)
                                                                     Hash Cond: (item_2.i_item_sk = catalog_sales.cs_item_sk)
                                                                     ->  Parallel Seq Scan on item item_2  (cost=0.00..9230.00 rows=85000 width=21)
                                                                     ->  Parallel Hash  (cost=4978898.09..4978898.09 rows=22866 width=16)
                                                                           ->  Parallel Hash Join  (cost=2105.75..4978898.09 rows=22866 width=16)
                                                                                 Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_1.d_date_sk)
                                                                                 ->  Parallel Seq Scan on catalog_sales  (cost=0.00..4819292.97 rows=59996297 width=20)
                                                                                 ->  Parallel Hash  (cost=2105.55..2105.55 rows=16 width=4)
                                                                                       ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2105.55 rows=16 width=4)
                                                                                             Filter: ((d_year = 2001) AND (d_moy = 2))
                                                         ->  Sort  (cost=11507.95..11521.02 rows=5229 width=17)
                                                               Sort Key: item_3.i_item_id
                                                               ->  Seq Scan on item item_3  (cost=0.00..11185.00 rows=5229 width=17)
                                                                     Filter: ((i_color)::text = ANY ('{slate,blanched,burnished}'::text[]))
                                                   ->  Index Scan using customer_address_pkey on customer_address customer_address_1  (cost=0.42..7.46 rows=1 width=4)
                                                         Index Cond: (ca_address_sk = catalog_sales.cs_bill_addr_sk)
                                                         Filter: (ca_gmt_offset = '-5'::double precision)
                           ->  Finalize GroupAggregate  (cost=2521113.50..2525633.06 rows=587 width=25)
                                 Group Key: item_4.i_item_id
                                 ->  Gather Merge  (cost=2521113.50..2525624.74 rows=490 width=25)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=2520113.48..2524568.16 rows=245 width=25)
                                             Group Key: item_4.i_item_id
                                             ->  Nested Loop  (cost=2520113.48..2524564.48 rows=245 width=25)
                                                   ->  Merge Semi Join  (cost=2520113.06..2520203.38 rows=671 width=29)
                                                         Merge Cond: ((item_4.i_item_id)::text = (item_5.i_item_id)::text)
                                                         ->  Sort  (cost=2508605.10..2508633.84 rows=11493 width=29)
                                                               Sort Key: item_4.i_item_id
                                                               ->  Parallel Hash Join  (cost=2498233.35..2507829.99 rows=11493 width=29)
                                                                     Hash Cond: (item_4.i_item_sk = web_sales.ws_item_sk)
                                                                     ->  Parallel Seq Scan on item item_4  (cost=0.00..9230.00 rows=85000 width=21)
                                                                     ->  Parallel Hash  (cost=2498089.69..2498089.69 rows=11493 width=16)
                                                                           ->  Parallel Hash Join  (cost=2105.75..2498089.69 rows=11493 width=16)
                                                                                 Hash Cond: (web_sales.ws_sold_date_sk = date_dim_2.d_date_sk)
                                                                                 ->  Parallel Seq Scan on web_sales  (cost=0.00..2417251.13 rows=29991713 width=20)
                                                                                 ->  Parallel Hash  (cost=2105.55..2105.55 rows=16 width=4)
                                                                                       ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..2105.55 rows=16 width=4)
                                                                                             Filter: ((d_year = 2001) AND (d_moy = 2))
                                                         ->  Sort  (cost=11507.95..11521.02 rows=5229 width=17)
                                                               Sort Key: item_5.i_item_id
                                                               ->  Seq Scan on item item_5  (cost=0.00..11185.00 rows=5229 width=17)
                                                                     Filter: ((i_color)::text = ANY ('{slate,blanched,burnished}'::text[]))
                                                   ->  Index Scan using customer_address_pkey on customer_address customer_address_2  (cost=0.42..6.50 rows=1 width=4)
                                                         Index Cond: (ca_address_sk = web_sales.ws_bill_addr_sk)
                                                         Filter: (ca_gmt_offset = '-5'::double precision)
 JIT:
   Functions: 132
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(95 rows)


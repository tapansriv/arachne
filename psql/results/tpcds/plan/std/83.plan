                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1500026.74..1500026.99 rows=100 width=169)
   ->  Sort  (cost=1500026.74..1504116.15 rows=1635766 width=169)
         Sort Key: item.i_item_id NULLS FIRST, (sum(store_returns.sr_return_quantity)) NULLS FIRST
         ->  Hash Join  (cost=1319329.06..1437508.94 rows=1635766 width=169)
               Hash Cond: ((item.i_item_id)::text = (wr_items.item_id)::text)
               ->  Merge Join  (cost=1122470.65..1125703.53 rows=165396 width=50)
                     Merge Cond: ((item.i_item_id)::text = (item_1.i_item_id)::text)
                     ->  Finalize GroupAggregate  (cost=715802.17..716742.67 rows=7994 width=25)
                           Group Key: item.i_item_id
                           ->  Gather Merge  (cost=715802.17..716629.42 rows=6662 width=25)
                                 Workers Planned: 2
                                 ->  Partial GroupAggregate  (cost=714802.14..714860.43 rows=3331 width=25)
                                       Group Key: item.i_item_id
                                       ->  Sort  (cost=714802.14..714810.47 rows=3331 width=21)
                                             Sort Key: item.i_item_id
                                             ->  Nested Loop  (cost=6059.86..714607.25 rows=3331 width=21)
                                                   ->  Parallel Hash Join  (cost=6059.44..711721.27 rows=3331 width=8)
                                                         Hash Cond: (store_returns.sr_returned_date_sk = date_dim.d_date_sk)
                                                         ->  Parallel Seq Scan on store_returns  (cost=0.00..660660.86 rows=11995186 width=12)
                                                         ->  Parallel Hash  (cost=6059.29..6059.29 rows=12 width=4)
                                                               ->  Parallel Hash Semi Join  (cost=4055.66..6059.29 rows=12 width=4)
                                                                     Hash Cond: (date_dim.d_date = date_dim_1.d_date)
                                                                     ->  Parallel Seq Scan on date_dim  (cost=0.00..1890.70 rows=42970 width=8)
                                                                     ->  Parallel Hash  (cost=4055.51..4055.51 rows=12 width=4)
                                                                           ->  Parallel Hash Semi Join  (cost=2051.86..4055.51 rows=12 width=4)
                                                                                 Hash Cond: (date_dim_1.d_week_seq = date_dim_2.d_week_seq)
                                                                                 ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..1890.70 rows=42970 width=8)
                                                                                 ->  Parallel Hash  (cost=2051.84..2051.84 rows=2 width=4)
                                                                                       ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..2051.84 rows=2 width=4)
                                                                                             Filter: (d_date = ANY ('{2000-06-30,2000-09-27,2000-11-17}'::date[]))
                                                   ->  Index Scan using item_pkey on item  (cost=0.42..0.87 rows=1 width=21)
                                                         Index Cond: (i_item_sk = store_returns.sr_item_sk)
                     ->  Finalize GroupAggregate  (cost=406668.48..407155.26 rows=4138 width=25)
                           Group Key: item_1.i_item_id
                           ->  Gather Merge  (cost=406668.48..407096.64 rows=3448 width=25)
                                 Workers Planned: 2
                                 ->  Partial GroupAggregate  (cost=405668.46..405698.63 rows=1724 width=25)
                                       Group Key: item_1.i_item_id
                                       ->  Sort  (cost=405668.46..405672.77 rows=1724 width=21)
                                             Sort Key: item_1.i_item_id
                                             ->  Nested Loop  (cost=6059.86..405575.78 rows=1724 width=21)
                                                   ->  Parallel Hash Join  (cost=6059.44..404817.25 rows=1724 width=8)
                                                         Hash Cond: (catalog_returns.cr_returned_date_sk = date_dim_3.d_date_sk)
                                                         ->  Parallel Seq Scan on catalog_returns  (cost=0.00..376254.79 rows=5998179 width=12)
                                                         ->  Parallel Hash  (cost=6059.29..6059.29 rows=12 width=4)
                                                               ->  Parallel Hash Semi Join  (cost=4055.66..6059.29 rows=12 width=4)
                                                                     Hash Cond: (date_dim_3.d_date = date_dim_4.d_date)
                                                                     ->  Parallel Seq Scan on date_dim date_dim_3  (cost=0.00..1890.70 rows=42970 width=8)
                                                                     ->  Parallel Hash  (cost=4055.51..4055.51 rows=12 width=4)
                                                                           ->  Parallel Hash Semi Join  (cost=2051.86..4055.51 rows=12 width=4)
                                                                                 Hash Cond: (date_dim_4.d_week_seq = date_dim_5.d_week_seq)
                                                                                 ->  Parallel Seq Scan on date_dim date_dim_4  (cost=0.00..1890.70 rows=42970 width=8)
                                                                                 ->  Parallel Hash  (cost=2051.84..2051.84 rows=2 width=4)
                                                                                       ->  Parallel Seq Scan on date_dim date_dim_5  (cost=0.00..2051.84 rows=2 width=4)
                                                                                             Filter: (d_date = ANY ('{2000-06-30,2000-09-27,2000-11-17}'::date[]))
                                                   ->  Index Scan using item_pkey on item item_1  (cost=0.42..0.44 rows=1 width=21)
                                                         Index Cond: (i_item_sk = catalog_returns.cr_item_sk)
               ->  Hash  (cost=196833.69..196833.69 rows=1978 width=25)
                     ->  Subquery Scan on wr_items  (cost=196581.25..196833.69 rows=1978 width=25)
                           ->  Finalize GroupAggregate  (cost=196581.25..196813.91 rows=1978 width=25)
                                 Group Key: item_2.i_item_id
                                 ->  Gather Merge  (cost=196581.25..196785.89 rows=1648 width=25)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=195581.23..195595.65 rows=824 width=25)
                                             Group Key: item_2.i_item_id
                                             ->  Sort  (cost=195581.23..195583.29 rows=824 width=21)
                                                   Sort Key: item_2.i_item_id
                                                   ->  Nested Loop  (cost=6059.86..195541.32 rows=824 width=21)
                                                         ->  Parallel Hash Join  (cost=6059.44..195176.72 rows=824 width=8)
                                                               Hash Cond: (web_returns.wr_returned_date_sk = date_dim_6.d_date_sk)
                                                               ->  Parallel Seq Scan on web_returns  (cost=0.00..177866.24 rows=2999024 width=12)
                                                               ->  Parallel Hash  (cost=6059.29..6059.29 rows=12 width=4)
                                                                     ->  Parallel Hash Semi Join  (cost=4055.66..6059.29 rows=12 width=4)
                                                                           Hash Cond: (date_dim_6.d_date = date_dim_7.d_date)
                                                                           ->  Parallel Seq Scan on date_dim date_dim_6  (cost=0.00..1890.70 rows=42970 width=8)
                                                                           ->  Parallel Hash  (cost=4055.51..4055.51 rows=12 width=4)
                                                                                 ->  Parallel Hash Semi Join  (cost=2051.86..4055.51 rows=12 width=4)
                                                                                       Hash Cond: (date_dim_7.d_week_seq = date_dim_8.d_week_seq)
                                                                                       ->  Parallel Seq Scan on date_dim date_dim_7  (cost=0.00..1890.70 rows=42970 width=8)
                                                                                       ->  Parallel Hash  (cost=2051.84..2051.84 rows=2 width=4)
                                                                                             ->  Parallel Seq Scan on date_dim date_dim_8  (cost=0.00..2051.84 rows=2 width=4)
                                                                                                   Filter: (d_date = ANY ('{2000-06-30,2000-09-27,2000-11-17}'::date[]))
                                                         ->  Index Scan using item_pkey on item item_2  (cost=0.42..0.44 rows=1 width=21)
                                                               Index Cond: (i_item_sk = web_returns.wr_item_sk)
 JIT:
   Functions: 131
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(87 rows)


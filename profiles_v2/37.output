-Dexec.args="single duck 37 1.48 0.0"
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/usr/share/maven/lib/guice.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------------------< [0;36morg.arachne:arachne[0;1m >-------------------------[m
[[1;34mINFO[m] [1mBuilding arachne 1.0-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mexec-maven-plugin:3.0.0:java[m [1m(default-cli)[m @ [36marachne[0;1m ---[m
GCP
37 1.48 0.0 GCP
SELECT i_item_id,
       i_item_desc,
       i_current_price
FROM '/mnt/disks/tpcds/parquet/item.parquet' AS item,
     '/mnt/disks/tpcds/parquet/inventory.parquet' AS inventory,
     '/mnt/disks/tpcds/parquet/date_dim.parquet' AS date_dim,
     '/mnt/disks/tpcds/parquet/catalog_sales.parquet' AS catalog_sales
WHERE i_current_price BETWEEN 68 AND 68 + 30
  AND inv_item_sk = i_item_sk
  AND d_date_sk=inv_date_sk
  AND d_date BETWEEN cast('2000-02-01' AS date) AND cast('2000-04-01' AS date)
  AND i_manufact_id IN (677,
                        940,
                        694,
                        808)
  AND inv_quantity_on_hand BETWEEN 100 AND 500
  AND cs_item_sk = i_item_sk
GROUP BY i_item_id,
         i_item_desc,
         i_current_price
ORDER BY i_item_id
LIMIT 100;

BASE:
212:ProfileSort(sort0=[$0], dir0=[ASC], fetch=[100]): rowcount = 100.0, cumulative cost = {100.0 rows, 5.3952484429119475E14 cpu, 0.0 io, 0.0 money}
  230:ProfileAggregate(group=[{0, 1, 2}]): rowcount = 4.881513806778688E12, cumulative cost = {4.881513806778688E12 rows, 0.0 cpu, 0.0 io, 0.0 money}
    247:ProfileProject(i_item_id=[$1], i_item_desc=[$2], i_current_price=[$3]): rowcount = 4.881513806778688E13, cumulative cost = {4.881513806778688E13 rows, 1.4644541420336066E14 cpu, 0.0 io, 0.0 money}
      264:ProfileJoin(condition=[=($4, $0)], joinType=[inner]): rowcount = 4.881513806778688E13, cumulative cost = {4.881513806778688E13 rows, 0.0 cpu, 0.0 io, 0.0 money}
        278:ProfileProject(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$2], i_current_price=[$3]): rowcount = 564988.359375, cumulative cost = {564988.359375 rows, 2259953.4375 cpu, 0.0 io, 0.0 money}
          292:ProfileJoin(condition=[=($5, $4)], joinType=[inner]): rowcount = 564988.359375, cumulative cost = {564988.359375 rows, 0.0 cpu, 0.0 io, 0.0 money}
            301:ProfileProject(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$2], i_current_price=[$3], inv_date_sk=[$4]): rowcount = 206.25, cumulative cost = {206.25 rows, 1031.25 cpu, 0.0 io, 0.0 money}
              310:ProfileJoin(condition=[=($5, $0)], joinType=[inner]): rowcount = 206.25, cumulative cost = {206.25 rows, 0.0 cpu, 0.0 io, 0.0 money}
                314:ProfileProject(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$2], i_current_price=[$3]): rowcount = 1375.0, cumulative cost = {1375.0 rows, 5500.0 cpu, 0.0 io, 0.0 money}
                  317:ProfileProject(i_item_sk=[$0], i_item_id=[$1], i_item_desc=[$4], i_current_price=[$5], i_manufact_id=[$13]): rowcount = 1375.0, cumulative cost = {1375.0 rows, 6875.0 cpu, 0.0 io, 0.0 money}
                    319:ProfileFilter(condition=[AND(>=($5, 68), <=($5, +(68, 30)), SEARCH($13, Sarg[677, 694, 808, 940]))]): rowcount = 1375.0, cumulative cost = {1375.0 rows, 22000.0 cpu, 0.0 io, 0.0 money}
                      320:ProfileTableScan(table=[[tpcds, item]]): rowcount = 22000.0, cumulative cost = {22000.0 rows, 22001.0 cpu, 0.0 io, 0.0 money}
                324:ProfileProject(inv_date_sk=[$0], inv_item_sk=[$1]): rowcount = 1.0, cumulative cost = {1.0 rows, 2.0 cpu, 0.0 io, 0.0 money}
                  327:ProfileProject(inv_date_sk=[$0], inv_item_sk=[$1], inv_quantity_on_hand=[$3]): rowcount = 1.0, cumulative cost = {1.0 rows, 3.0 cpu, 0.0 io, 0.0 money}
                    329:ProfileFilter(condition=[SEARCH($3, Sarg[[100..500]])]): rowcount = 1.0, cumulative cost = {1.0 rows, 1.0 cpu, 0.0 io, 0.0 money}
                      330:ProfileTableScan(table=[[tpcds, inventory]]): rowcount = 1.0, cumulative cost = {1.0 rows, 2.0 cpu, 0.0 io, 0.0 money}
            334:ProfileProject(d_date_sk=[$0]): rowcount = 18262.25, cumulative cost = {18262.25 rows, 18262.25 cpu, 0.0 io, 0.0 money}
              337:ProfileProject(d_date_sk=[$0], d_date=[$2]): rowcount = 18262.25, cumulative cost = {18262.25 rows, 36524.5 cpu, 0.0 io, 0.0 money}
                339:ProfileFilter(condition=[SEARCH($2, Sarg[[2000-02-01..2000-04-01]])]): rowcount = 18262.25, cumulative cost = {18262.25 rows, 73049.0 cpu, 0.0 io, 0.0 money}
                  340:ProfileTableScan(table=[[tpcds, date_dim]]): rowcount = 73049.0, cumulative cost = {73049.0 rows, 73050.0 cpu, 0.0 io, 0.0 money}
        342:ProfileProject(cs_item_sk=[$15]): rowcount = 5.76001697E8, cumulative cost = {5.76001697E8 rows, 5.76001697E8 cpu, 0.0 io, 0.0 money}
          343:ProfileTableScan(table=[[tpcds, catalog_sales]]): rowcount = 5.76001697E8, cumulative cost = {5.76001697E8 rows, 5.76001698E8 cpu, 0.0 io, 0.0 money}

trial 0
java.lang.RuntimeException: Issue matching: rel#622:ProfileJoin.PROFILE(left=ProfileProject#625,right=ProfileProject#632,condition==($5, $0),joinType=inner) , 0 1439980416 20.011367 PARQUET_SCAN
	at org.arachne.profiling.ProfileMatcher.matchCardinality(ProfileMatcher.java:184)
	at org.arachne.profiling.ProfileMatcher.matchCardinality(ProfileMatcher.java:222)
	at org.arachne.profiling.ProfileMatcher.matchCardinality(ProfileMatcher.java:222)
	at org.arachne.profiling.ProfileMatcher.matchCardinality(ProfileMatcher.java:222)
	at org.arachne.profiling.ProfileMatcher.matchCardinality(ProfileMatcher.java:222)
	at org.arachne.profiling.ProfileMatcher.goMatchCard(ProfileMatcher.java:131)
	at org.arachne.collection.Collector.constructTree(Collector.java:662)
	at org.arachne.collection.Collector.go(Collector.java:98)
	at org.arachne.ArachneQueryProcessor.run(ArachneQueryProcessor.java:281)
	at org.arachne.ArachneQueryProcessor.main(ArachneQueryProcessor.java:340)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:254)
	at java.base/java.lang.Thread.run(Thread.java:829)
STARTING QRY: CREATE TABLE duck_table_37_0 AS SELECT "t9"."i_item_id", "t9"."i_item_desc", "t9"."i_current_price"
FROM (SELECT "t5"."i_item_sk", "t5"."i_item_id", "t5"."i_item_desc", "t5"."i_current_price"
FROM (SELECT "t1"."i_item_sk", "t1"."i_item_id", "t1"."i_item_desc", "t1"."i_current_price", "t4"."inv_date_sk"
FROM (SELECT "i_item_sk", "i_item_id", "i_item_desc", "i_current_price"
FROM '/mnt/disks/tpcds/parquet/item.parquet' AS item
WHERE "i_current_price" >= 68 AND "i_current_price" <= 68 + 30 AND "i_manufact_id" IN (677, 694, 808, 940)) AS "t1"
INNER JOIN (SELECT "inv_date_sk", "inv_item_sk"
FROM '/mnt/disks/tpcds/parquet/inventory.parquet' AS inventory
WHERE "inv_quantity_on_hand" >= 100 AND "inv_quantity_on_hand" <= 500) AS "t4" ON "t1"."i_item_sk" = "t4"."inv_item_sk") AS "t5"
INNER JOIN (SELECT "d_date_sk"
FROM '/mnt/disks/tpcds/parquet/date_dim.parquet' AS date_dim
WHERE "d_date" >= DATE '2000-02-01' AND "d_date" <= DATE '2000-04-01') AS "t8" ON "t5"."inv_date_sk" = "t8"."d_date_sk") AS "t9"
INNER JOIN (SELECT "cs_item_sk"
FROM '/mnt/disks/tpcds/parquet/catalog_sales.parquet' AS catalog_sales) AS "t10" ON "t9"."i_item_sk" = "t10"."cs_item_sk"

110.865419102
2807894
2807894
finished query
STARTING QRY: SELECT "i_item_id", "i_item_desc", "i_current_price"
FROM "duck_table_37_0"
GROUP BY "i_item_id", "i_item_desc", "i_current_price"
ORDER BY "i_item_id"
FETCH NEXT 100 ROWS ONLY

1.189647889
finished query
FINISHED PROFILING FOR TRIAL 0
CTAS: duck_table_37_0 SRC: GCP DEST: GCP NUM INPUTS: 0 RUNTIME: 110.865419102 CARDINALITY: 2807894 COST: 0.045578005630822226
CTAS: duck_table_37_1 SRC: GCP DEST: GCP NUM INPUTS: 1 RUNTIME: 1.189647889 CARDINALITY: -1 COST: 4.890774654777777E-4
2
CTAS: duck_table_37_0 SRC: GCP DEST: GCP NUM INPUTS: 0 RUNTIME: 110.865419102 CARDINALITY: 2807894 COST: 0.045578005630822226
CTAS: duck_table_37_1 SRC: GCP DEST: GCP NUM INPUTS: 1 RUNTIME: 1.189647889 CARDINALITY: -1 COST: 4.890774654777777E-4
BEGUN PROCESSING
CTAS: duck_table_37_1 SRC: GCP DEST: GCP NUM INPUTS: 1 RUNTIME: 1.189647889 CARDINALITY: -1 COST: 4.890774654777777E-4
CTAS: duck_table_37_0 SRC: GCP DEST: GCP NUM INPUTS: 0 RUNTIME: 110.865419102 CARDINALITY: 2807894 COST: 0.045578005630822226
rowSize: 220
{"bqSize":0.61773668,"compressed":0.29416032380952384,"mvmtCost":0.0,"runtime":110.865419102,"runCost":0.045578005630822226,"bqCost":0.0030886834,"cutNoHybrid":112.055066991}
baseline runtime: 4800.071063995361 baselineBQ read size: 3.0043799552E10
arachneCost: 0.048666689030822226, baselineCost2: 1.9733625485314263, baseline: 0.15021899776, cutNoHybrid: 0.046067083096300004
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  01:31 h
[[1;34mINFO[m] Finished at: 2022-03-30T02:44:17Z
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m

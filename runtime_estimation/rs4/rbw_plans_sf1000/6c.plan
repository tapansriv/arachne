XN CTE Scan on friend_shortest  (cost=3866100631036.30..3866100631048.99 rows=5079 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..3866100631036.30 rows=5079 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..150000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..150000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=932314120256.82..3866100481036.29 rows=5078 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=932314120256.82..3866100480985.51 rows=5078 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=932314120256.82..932314303570.72 rows=18331390 width=8)
                            ->  XN Hash Join DS_DIST_BOTH  (cost=373396190107.31..932020799685.43 rows=18331390 width=8)
                                  Outer Dist Key: "inner".cs_item_sk
                                  Inner Dist Key: public.catalog_sales.cs_item_sk
                                  Hash Cond: ("outer".cs_item_sk = "inner".cs_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=18005588.72..373378178732.61 rows=2314389 width=8)
                                        Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                        ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=4)
                                        ->  XN Hash  (cost=17999755.20..17999755.20 rows=2333410 width=8)
                                              ->  XN Seq Scan on catalog_sales  (cost=0.00..17999755.20 rows=2333410 width=8)
                                                    Filter: (cs_item_sk < 500)
                                  ->  XN Hash  (cost=373378178732.61..373378178732.61 rows=2314389 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=18005588.72..373378178732.61 rows=2314389 width=8)
                                              Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                              ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=4)
                                              ->  XN Hash  (cost=17999755.20..17999755.20 rows=2333410 width=8)
                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..17999755.20 rows=2333410 width=8)
                                                          Filter: (cs_item_sk < 500)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
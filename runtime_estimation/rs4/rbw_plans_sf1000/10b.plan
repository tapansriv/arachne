XN CTE Scan on friend_shortest  (cost=3084984565547556.00..3084984565560901.00 rows=5338056 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..3084984565547556.00 rows=5338056 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..150000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..150000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=593718167640.66..3084984565397556.00 rows=5338055 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=593718167640.66..3084984565344175.50 rows=5338055 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=593718167640.66..593948528635.30 rows=19272030864 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=115906780840.13..285308761099.79 rows=19272030864 width=8)
                                  Hash Cond: ("outer".cs_bill_customer_sk = "inner".c_customer_sk)
                                  ->  XN Nested Loop DS_BCAST_INNER  (cost=115906628425.86..166213096570.63 rows=241445710734 width=8)
                                        Join Filter: (("outer".cs_sales_price < ("inner".cs_sales_price + 5::double precision)) OR ("outer".cs_sales_price > ("inner".cs_sales_price - 5::double precision)))
                                        ->  XN Seq Scan on catalog_sales  (cost=0.00..17999755.20 rows=2333410 width=12)
                                              Filter: (cs_item_sk < 500)
                                        ->  XN Materialize  (cost=115906628425.86..115906630288.38 rows=186252 width=12)
                                              ->  XN Hash Join DS_BCAST_INNER  (cost=152414.27..115902903199.61 rows=186252 width=12)
                                                    Hash Cond: ("outer".cs_bill_customer_sk = "inner".c_customer_sk)
                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..17999755.20 rows=2333410 width=12)
                                                          Filter: (cs_item_sk < 500)
                                                    ->  XN Hash  (cost=150000.00..150000.00 rows=965706 width=4)
                                                          ->  XN Seq Scan on customer  (cost=0.00..150000.00 rows=965706 width=4)
                                                                Filter: ((c_last_name)::text ~~ 'M%'::text)
                                  ->  XN Hash  (cost=150000.00..150000.00 rows=965706 width=4)
                                        ->  XN Seq Scan on customer  (cost=0.00..150000.00 rows=965706 width=4)
                                              Filter: ((c_last_name)::text ~~ 'M%'::text)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
XN Aggregate  (cost=456382333474.37..456382333474.37 rows=1 width=0)
  ->  XN Hash Join DS_DIST_INNER  (cost=446778030865.21..456382060842.83 rows=109052615 width=0)
        Inner Dist Key: p1.friendid
        Hash Cond: ("outer".friendid = "inner".friendid)
        Join Filter: ("inner".personid < "outer".personid)
        ->  XN Hash Join DS_DIST_BOTH  (cost=296033743598.59..304208761946.13 rows=1925194 width=16)
              Outer Dist Key: p2.friendid
              Inner Dist Key: p3.friendid
              Hash Cond: ("outer".friendid = "inner".friendid)
              Join Filter: ("outer".personid < "inner".personid)
              ->  XN Subquery Scan p2  (cost=145289456331.98..150744287181.65 rows=33987 width=8)
                    ->  XN Unique  (cost=145289456331.98..150744286841.78 rows=33987 width=8)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=145289456331.98..150744286671.85 rows=33987 width=8)
                                Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                                ->  XN Hash  (cost=145289456246.75..145289456246.75 rows=34091 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=122658157041.06..145289456246.75 rows=34091 width=8)
                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                            ->  XN Seq Scan on customer_address ca  (cost=0.00..75000.00 rows=1909182 width=4)
                                                  Filter: ((ca_location_type)::text ~~ 'condo'::text)
                                            ->  XN Hash  (cost=122658156758.17..122658156758.17 rows=113156 width=12)
                                                  ->  XN Hash Join DS_DIST_BOTH  (cost=3626958.44..122658156758.17 rows=113156 width=12)
                                                        Outer Dist Key: "outer".c_customer_sk
                                                        Inner Dist Key: sr.sr_customer_sk
                                                        Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=24700.17..33128585111.76 rows=1559821 width=8)
                                                              Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                              ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=24010.00..24010.00 rows=276069 width=4)
                                                                    ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=276069 width=4)
                                                                          Filter: ((cd_education_status)::text ~~ 'College'::text)
                                                        ->  XN Hash  (cost=3599997.20..3599997.20 rows=904425 width=4)
                                                              ->  XN Seq Scan on store_returns sr  (cost=0.00..3599997.20 rows=904425 width=4)
                                                                    Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
              ->  XN Hash  (cost=150744287181.65..150744287181.65 rows=33987 width=8)
                    ->  XN Subquery Scan p3  (cost=145289456331.98..150744287181.65 rows=33987 width=8)
                          ->  XN Unique  (cost=145289456331.98..150744286841.78 rows=33987 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=145289456331.98..150744286671.85 rows=33987 width=8)
                                      Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                      ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                                      ->  XN Hash  (cost=145289456246.75..145289456246.75 rows=34091 width=8)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=122658157041.06..145289456246.75 rows=34091 width=8)
                                                  Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                  ->  XN Seq Scan on customer_address ca  (cost=0.00..75000.00 rows=1909182 width=4)
                                                        Filter: ((ca_location_type)::text ~~ 'condo'::text)
                                                  ->  XN Hash  (cost=122658156758.17..122658156758.17 rows=113156 width=12)
                                                        ->  XN Hash Join DS_DIST_BOTH  (cost=3626958.44..122658156758.17 rows=113156 width=12)
                                                              Outer Dist Key: "outer".c_customer_sk
                                                              Inner Dist Key: sr.sr_customer_sk
                                                              Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=24700.17..33128585111.76 rows=1559821 width=8)
                                                                    Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                                    ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=24010.00..24010.00 rows=276069 width=4)
                                                                          ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=276069 width=4)
                                                                                Filter: ((cd_education_status)::text ~~ 'College'::text)
                                                              ->  XN Hash  (cost=3599997.20..3599997.20 rows=904425 width=4)
                                                                    ->  XN Seq Scan on store_returns sr  (cost=0.00..3599997.20 rows=904425 width=4)
                                                                          Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
        ->  XN Hash  (cost=150744287181.65..150744287181.65 rows=33987 width=8)
              ->  XN Subquery Scan p1  (cost=145289456331.98..150744287181.65 rows=33987 width=8)
                    ->  XN Unique  (cost=145289456331.98..150744286841.78 rows=33987 width=8)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=145289456331.98..150744286671.85 rows=33987 width=8)
                                Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                                ->  XN Hash  (cost=145289456246.75..145289456246.75 rows=34091 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=122658157041.06..145289456246.75 rows=34091 width=8)
                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                            ->  XN Seq Scan on customer_address ca  (cost=0.00..75000.00 rows=1909182 width=4)
                                                  Filter: ((ca_location_type)::text ~~ 'condo'::text)
                                            ->  XN Hash  (cost=122658156758.17..122658156758.17 rows=113156 width=12)
                                                  ->  XN Hash Join DS_DIST_BOTH  (cost=3626958.44..122658156758.17 rows=113156 width=12)
                                                        Outer Dist Key: "outer".c_customer_sk
                                                        Inner Dist Key: sr.sr_customer_sk
                                                        Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=24700.17..33128585111.76 rows=1559821 width=8)
                                                              Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                              ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=24010.00..24010.00 rows=276069 width=4)
                                                                    ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=276069 width=4)
                                                                          Filter: ((cd_education_status)::text ~~ 'College'::text)
                                                        ->  XN Hash  (cost=3599997.20..3599997.20 rows=904425 width=4)
                                                              ->  XN Seq Scan on store_returns sr  (cost=0.00..3599997.20 rows=904425 width=4)
                                                                    Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
XN CTE Scan on friend_shortest  (cost=4096887490376.87..4096887490390.44 rows=5430 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..4096887490376.87 rows=5430 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..150000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..150000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=960212467236.14..4096887340376.86 rows=5429 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=960212467236.14..4096887340322.57 rows=5429 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=960212467236.14..960212663227.27 rows=19599113 width=8)
                            ->  XN Hash Join DS_DIST_BOTH  (cost=384205831928.71..959898861829.03 rows=19599113 width=8)
                                  Outer Dist Key: "inner".ws_item_sk
                                  Inner Dist Key: public.web_sales.ws_item_sk
                                  Hash Cond: ("outer".ws_item_sk = "inner".ws_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=9006007.62..384196819938.40 rows=2393078 width=8)
                                        Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                        ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=4)
                                        ->  XN Hash  (cost=9000004.80..9000004.80 rows=2401127 width=8)
                                              ->  XN Seq Scan on web_sales  (cost=0.00..9000004.80 rows=2401127 width=8)
                                                    Filter: (ws_item_sk < 1000)
                                  ->  XN Hash  (cost=384196819938.40..384196819938.40 rows=2393078 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=9006007.62..384196819938.40 rows=2393078 width=8)
                                              Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                              ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=4)
                                              ->  XN Hash  (cost=9000004.80..9000004.80 rows=2401127 width=8)
                                                    ->  XN Seq Scan on web_sales  (cost=0.00..9000004.80 rows=2401127 width=8)
                                                          Filter: (ws_item_sk < 1000)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
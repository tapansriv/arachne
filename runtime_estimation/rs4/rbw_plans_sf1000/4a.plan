XN Aggregate  (cost=10955325814.10..10955325814.10 rows=1 width=0)
  ->  XN Hash Join DS_DIST_OUTER  (cost=10953455813.75..10955325814.09 rows=1 width=0)
        Outer Dist Key: p1.friendid
        Hash Cond: ("outer".friendid = "inner".friendid)
        Join Filter: ("outer".personid < "inner".personid)
        ->  XN Subquery Scan p1  (cost=3649905271.04..3651455271.24 rows=8 width=8)
              ->  XN Unique  (cost=3649905271.04..3651455271.16 rows=8 width=8)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=3649905271.04..3651455271.12 rows=8 width=8)
                          Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                          ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                          ->  XN Hash  (cost=3649905271.02..3649905271.02 rows=8 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=3622779920.94..3649905271.02 rows=8 width=8)
                                      Hash Cond: ("outer".cr_refunded_customer_sk = "inner".c_customer_sk)
                                      ->  XN Seq Scan on catalog_returns cr  (cost=0.00..1799959.40 rows=431248 width=4)
                                            Filter: ((cr_item_sk < 1000) AND (cr_refunded_customer_sk IS NOT NULL))
                                      ->  XN Hash  (cost=3622779920.41..3622779920.41 rows=211 width=4)
                                            ->  XN Hash Join DS_DIST_BOTH  (cost=114104.67..3622779920.41 rows=211 width=4)
                                                  Outer Dist Key: "outer".c_current_addr_sk
                                                  Inner Dist Key: ca.ca_address_sk
                                                  Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=24029.67..944449287.61 rows=44456 width=8)
                                                        Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                        ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                              Filter: (c_current_cdemo_sk IS NOT NULL)
                                                        ->  XN Hash  (cost=24010.00..24010.00 rows=7868 width=4)
                                                              ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=7868 width=4)
                                                                    Filter: ((cd_education_status)::text ~~ '%Degree'::text)
                                                  ->  XN Hash  (cost=90000.00..90000.00 rows=30000 width=4)
                                                        ->  XN Seq Scan on customer_address ca  (cost=0.00..90000.00 rows=30000 width=4)
                                                              Filter: (upper((ca_street_type)::text) ~~ 'ST%'::text)
        ->  XN Hash  (cost=7303550542.70..7303550542.70 rows=3 width=16)
              ->  XN Hash Join DS_DIST_BOTH  (cost=7301360542.31..7303550542.70 rows=3 width=16)
                    Outer Dist Key: p2.friendid
                    Inner Dist Key: p3.friendid
                    Hash Cond: ("outer".friendid = "inner".friendid)
                    Join Filter: ("outer".personid < "inner".personid)
                    ->  XN Subquery Scan p2  (cost=3649905271.04..3651455271.24 rows=8 width=8)
                          ->  XN Unique  (cost=3649905271.04..3651455271.16 rows=8 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=3649905271.04..3651455271.12 rows=8 width=8)
                                      Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                      ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                                      ->  XN Hash  (cost=3649905271.02..3649905271.02 rows=8 width=8)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=3622779920.94..3649905271.02 rows=8 width=8)
                                                  Hash Cond: ("outer".cr_refunded_customer_sk = "inner".c_customer_sk)
                                                  ->  XN Seq Scan on catalog_returns cr  (cost=0.00..1799959.40 rows=431248 width=4)
                                                        Filter: ((cr_item_sk < 1000) AND (cr_refunded_customer_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=3622779920.41..3622779920.41 rows=211 width=4)
                                                        ->  XN Hash Join DS_DIST_BOTH  (cost=114104.67..3622779920.41 rows=211 width=4)
                                                              Outer Dist Key: "outer".c_current_addr_sk
                                                              Inner Dist Key: ca.ca_address_sk
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=24029.67..944449287.61 rows=44456 width=8)
                                                                    Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                                    ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=24010.00..24010.00 rows=7868 width=4)
                                                                          ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=7868 width=4)
                                                                                Filter: ((cd_education_status)::text ~~ '%Degree'::text)
                                                              ->  XN Hash  (cost=90000.00..90000.00 rows=30000 width=4)
                                                                    ->  XN Seq Scan on customer_address ca  (cost=0.00..90000.00 rows=30000 width=4)
                                                                          Filter: (upper((ca_street_type)::text) ~~ 'ST%'::text)
                    ->  XN Hash  (cost=3651455271.24..3651455271.24 rows=8 width=8)
                          ->  XN Subquery Scan p3  (cost=3649905271.04..3651455271.24 rows=8 width=8)
                                ->  XN Unique  (cost=3649905271.04..3651455271.16 rows=8 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=3649905271.04..3651455271.12 rows=8 width=8)
                                            Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                            ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                                            ->  XN Hash  (cost=3649905271.02..3649905271.02 rows=8 width=8)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3622779920.94..3649905271.02 rows=8 width=8)
                                                        Hash Cond: ("outer".cr_refunded_customer_sk = "inner".c_customer_sk)
                                                        ->  XN Seq Scan on catalog_returns cr  (cost=0.00..1799959.40 rows=431248 width=4)
                                                              Filter: ((cr_item_sk < 1000) AND (cr_refunded_customer_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=3622779920.41..3622779920.41 rows=211 width=4)
                                                              ->  XN Hash Join DS_DIST_BOTH  (cost=114104.67..3622779920.41 rows=211 width=4)
                                                                    Outer Dist Key: "outer".c_current_addr_sk
                                                                    Inner Dist Key: ca.ca_address_sk
                                                                    Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=24029.67..944449287.61 rows=44456 width=8)
                                                                          Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                                          ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                                Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                          ->  XN Hash  (cost=24010.00..24010.00 rows=7868 width=4)
                                                                                ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=7868 width=4)
                                                                                      Filter: ((cd_education_status)::text ~~ '%Degree'::text)
                                                                    ->  XN Hash  (cost=90000.00..90000.00 rows=30000 width=4)
                                                                          ->  XN Seq Scan on customer_address ca  (cost=0.00..90000.00 rows=30000 width=4)
                                                                                Filter: (upper((ca_street_type)::text) ~~ 'ST%'::text)
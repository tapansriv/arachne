XN Aggregate  (cost=254279652906.00..254279652906.00 rows=1 width=0)
  ->  XN Hash Join DS_DIST_INNER  (cost=252115022754.31..254279649719.53 rows=1274587 width=0)
        Inner Dist Key: p1.friendid
        Hash Cond: ("outer".friendid = "inner".friendid)
        Join Filter: ("inner".personid < "outer".personid)
        ->  XN Hash Join DS_DIST_BOTH  (cost=167663951765.50..169519245240.13 rows=99151 width=16)
              Outer Dist Key: p2.friendid
              Inner Dist Key: p3.friendid
              Hash Cond: ("outer".friendid = "inner".friendid)
              Join Filter: ("outer".personid < "inner".personid)
              ->  XN Subquery Scan p2  (cost=83212880776.69..84451070969.53 rows=7713 width=8)
                    ->  XN Unique  (cost=83212880776.69..84451070892.40 rows=7713 width=8)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=83212880776.69..84451070853.83 rows=7713 width=8)
                                Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                                ->  XN Hash  (cost=83212880757.35..83212880757.35 rows=7737 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=70411509377.47..83212880757.35 rows=7737 width=8)
                                            Hash Cond: ("outer".sr_customer_sk = "inner".c_customer_sk)
                                            ->  XN Seq Scan on store_returns sr  (cost=0.00..3599997.20 rows=904425 width=4)
                                                  Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
                                            ->  XN Hash  (cost=70411509110.85..70411509110.85 rows=106648 width=4)
                                                  ->  XN Hash Join DS_DIST_BOTH  (cost=100754.18..70411509110.85 rows=106648 width=4)
                                                        Outer Dist Key: "outer".c_current_cdemo_sk
                                                        Inner Dist Key: cd.cd_demo_sk
                                                        Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=75758.33..36400306116.96 rows=554525 width=8)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=75000.00..75000.00 rows=303333 width=4)
                                                                    ->  XN Seq Scan on customer_address ca  (cost=0.00..75000.00 rows=303333 width=4)
                                                                          Filter: ((ca_zip)::text ~~ '9%'::text)
                                                        ->  XN Hash  (cost=24010.00..24010.00 rows=394339 width=4)
                                                              ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=394339 width=4)
                                                                    Filter: ((cd_marital_status)::text ~~ 'S'::text)
              ->  XN Hash  (cost=84451070969.53..84451070969.53 rows=7713 width=8)
                    ->  XN Subquery Scan p3  (cost=83212880776.69..84451070969.53 rows=7713 width=8)
                          ->  XN Unique  (cost=83212880776.69..84451070892.40 rows=7713 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=83212880776.69..84451070853.83 rows=7713 width=8)
                                      Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                      ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                                      ->  XN Hash  (cost=83212880757.35..83212880757.35 rows=7737 width=8)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=70411509377.47..83212880757.35 rows=7737 width=8)
                                                  Hash Cond: ("outer".sr_customer_sk = "inner".c_customer_sk)
                                                  ->  XN Seq Scan on store_returns sr  (cost=0.00..3599997.20 rows=904425 width=4)
                                                        Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=70411509110.85..70411509110.85 rows=106648 width=4)
                                                        ->  XN Hash Join DS_DIST_BOTH  (cost=100754.18..70411509110.85 rows=106648 width=4)
                                                              Outer Dist Key: "outer".c_current_cdemo_sk
                                                              Inner Dist Key: cd.cd_demo_sk
                                                              Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=75758.33..36400306116.96 rows=554525 width=8)
                                                                    Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                    ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=75000.00..75000.00 rows=303333 width=4)
                                                                          ->  XN Seq Scan on customer_address ca  (cost=0.00..75000.00 rows=303333 width=4)
                                                                                Filter: ((ca_zip)::text ~~ '9%'::text)
                                                              ->  XN Hash  (cost=24010.00..24010.00 rows=394339 width=4)
                                                                    ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=394339 width=4)
                                                                          Filter: ((cd_marital_status)::text ~~ 'S'::text)
        ->  XN Hash  (cost=84451070969.53..84451070969.53 rows=7713 width=8)
              ->  XN Subquery Scan p1  (cost=83212880776.69..84451070969.53 rows=7713 width=8)
                    ->  XN Unique  (cost=83212880776.69..84451070892.40 rows=7713 width=8)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=83212880776.69..84451070853.83 rows=7713 width=8)
                                Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                ->  XN Seq Scan on customer c2  (cost=0.00..120000.00 rows=12000000 width=4)
                                ->  XN Hash  (cost=83212880757.35..83212880757.35 rows=7737 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=70411509377.47..83212880757.35 rows=7737 width=8)
                                            Hash Cond: ("outer".sr_customer_sk = "inner".c_customer_sk)
                                            ->  XN Seq Scan on store_returns sr  (cost=0.00..3599997.20 rows=904425 width=4)
                                                  Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
                                            ->  XN Hash  (cost=70411509110.85..70411509110.85 rows=106648 width=4)
                                                  ->  XN Hash Join DS_DIST_BOTH  (cost=100754.18..70411509110.85 rows=106648 width=4)
                                                        Outer Dist Key: "outer".c_current_cdemo_sk
                                                        Inner Dist Key: cd.cd_demo_sk
                                                        Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=75758.33..36400306116.96 rows=554525 width=8)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Seq Scan on customer c1  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=75000.00..75000.00 rows=303333 width=4)
                                                                    ->  XN Seq Scan on customer_address ca  (cost=0.00..75000.00 rows=303333 width=4)
                                                                          Filter: ((ca_zip)::text ~~ '9%'::text)
                                                        ->  XN Hash  (cost=24010.00..24010.00 rows=394339 width=4)
                                                              ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=394339 width=4)
                                                                    Filter: ((cd_marital_status)::text ~~ 'S'::text)
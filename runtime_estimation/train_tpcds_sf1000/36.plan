XN Limit  (cost=2000323615977.48..2000323615977.73 rows=100 width=80)
  ->  XN Merge  (cost=2000323615977.48..2000323615980.01 rows=1011 width=80)
        Merge Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
        ->  XN Network  (cost=2000323615977.48..2000323615980.01 rows=1011 width=80)
              Send to leader
              ->  XN Sort  (cost=2000323615977.48..2000323615980.01 rows=1011 width=80)
                    Sort Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
                    ->  XN Window  (cost=1000323615901.75..1000323615927.02 rows=1011 width=80)
                          Partition: lochierarchy, CASE WHEN (t_class = 0) THEN i_category ELSE NULL::character varying END
                          Order: gross_margin
                          ->  XN Sort  (cost=1000323615901.75..1000323615904.27 rows=1011 width=80)
                                Sort Key: lochierarchy, CASE WHEN (t_class = 0) THEN i_category ELSE NULL::character varying END, gross_margin
                                ->  XN Network  (cost=107873012.60..323615851.29 rows=1011 width=80)
                                      Distribute
                                      ->  XN Subquery Scan results_rollup  (cost=107873012.60..323615851.29 rows=1011 width=80)
                                            ->  XN Unique  (cost=107873012.60..323615841.18 rows=1011 width=36)
                                                  ->  XN Append  (cost=107873012.60..323615826.02 rows=1011 width=36)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=107873012.60..107873032.60 rows=1000 width=36)
                                                              ->  XN HashAggregate  (cost=107873012.60..107873022.60 rows=1000 width=36)
                                                                    ->  XN Hash Join DS_DIST_NONE  (cost=4676.59..107868703.27 rows=430933 width=36)
                                                                          Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=926.59..107851200.13 rows=419725 width=20)
                                                                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..103140887.50 rows=11826789 width=24)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2625746076 width=28)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=345 width=4)
                                                                                                  Filter: (d_year = 2001)
                                                                                ->  XN Hash  (cost=12.53..12.53 rows=37 width=4)
                                                                                      ->  XN Seq Scan on store  (cost=0.00..12.53 rows=37 width=4)
                                                                                            Filter: ((s_state)::text = 'TN'::text)
                                                                          ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=24)
                                                                                ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=24)
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=107871935.27..107871935.47 rows=10 width=25)
                                                              ->  XN HashAggregate  (cost=107871935.27..107871935.37 rows=10 width=25)
                                                                    ->  XN Hash Join DS_DIST_NONE  (cost=4676.59..107868703.27 rows=430933 width=25)
                                                                          Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=926.59..107851200.13 rows=419725 width=20)
                                                                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..103140887.50 rows=11826789 width=24)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2625746076 width=28)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=345 width=4)
                                                                                                  Filter: (d_year = 2001)
                                                                                ->  XN Hash  (cost=12.53..12.53 rows=37 width=4)
                                                                                      ->  XN Seq Scan on store  (cost=0.00..12.53 rows=37 width=4)
                                                                                            Filter: ((s_state)::text = 'TN'::text)
                                                                          ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=13)
                                                                                ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=13)
                                                        ->  XN Network  (cost=107870857.94..107870857.95 rows=1 width=16)
                                                              Distribute Round Robin
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=107870857.94..107870857.95 rows=1 width=16)
                                                                    ->  XN Aggregate  (cost=107870857.94..107870857.94 rows=1 width=16)
                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=4676.59..107868703.27 rows=430933 width=16)
                                                                                Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=926.59..107851200.13 rows=419725 width=20)
                                                                                      Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..103140887.50 rows=11826789 width=24)
                                                                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2625746076 width=28)
                                                                                                  Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                                  ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=345 width=4)
                                                                                                        Filter: (d_year = 2001)
                                                                                      ->  XN Hash  (cost=12.53..12.53 rows=37 width=4)
                                                                                            ->  XN Seq Scan on store  (cost=0.00..12.53 rows=37 width=4)
                                                                                                  Filter: ((s_state)::text = 'TN'::text)
                                                                                ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=4)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=4)
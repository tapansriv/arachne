XN Merge  (cost=1000396258377.60..1000396258380.09 rows=997 width=43)
  Merge Key: customer.c_last_name, customer.c_first_name, customer.c_salutation, customer.c_preferred_cust_flag, dn.ss_ticket_number
  ->  XN Network  (cost=1000396258377.60..1000396258380.09 rows=997 width=43)
        Send to leader
        ->  XN Sort  (cost=1000396258377.60..1000396258380.09 rows=997 width=43)
              Sort Key: customer.c_last_name, customer.c_first_name, customer.c_salutation, customer.c_preferred_cust_flag, dn.ss_ticket_number
              ->  XN Hash Join DS_BCAST_INNER  (cost=144108317.97..396258327.94 rows=997 width=43)
                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                    ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=35)
                    ->  XN Hash  (cost=144108315.47..144108315.47 rows=1000 width=16)
                          ->  XN Subquery Scan dn  (cost=144108141.85..144108315.47 rows=1000 width=16)
                                ->  XN HashAggregate  (cost=144108141.85..144108305.47 rows=1000 width=8)
                                      Filter: ((count(*) <= 20) AND (count(*) >= 15))
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=2257.12..144107978.22 rows=13090 width=8)
                                            Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=2021.90..85423210.38 rows=195632 width=12)
                                                  Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=2009.28..80973766.88 rows=5665536 width=16)
                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2508417805 width=20)
                                                              Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=2008.85..2008.85 rows=173 width=4)
                                                              ->  XN Seq Scan on date_dim  (cost=0.00..2008.85 rows=173 width=4)
                                                                    Filter: (((d_year = 2000) OR (d_year = 2001) OR (d_year = 1999)) AND (((d_dom >= 25) AND (d_dom <= 28)) OR ((d_dom <= 3) AND (d_dom >= 1))))
                                                  ->  XN Hash  (cost=12.53..12.53 rows=36 width=4)
                                                        ->  XN Seq Scan on store  (cost=0.00..12.53 rows=36 width=4)
                                                              Filter: ((s_county)::text = 'Williamson County'::text)
                                            ->  XN Hash  (cost=234.00..234.00 rows=489 width=4)
                                                  ->  XN Seq Scan on household_demographics  (cost=0.00..234.00 rows=489 width=4)
                                                        Filter: ((((hd_buy_potential)::text = '>10000'::text) OR ((hd_buy_potential)::text = 'Unknown'::text)) AND (CASE WHEN (hd_vehicle_count > 0) THEN (((hd_dep_count)::numeric * 1.000) / (hd_vehicle_count)::numeric) ELSE NULL::numeric END > 1.20000000000000) AND (hd_vehicle_count > 0))
XN Limit  (cost=1000054708369.66..1000054708369.75 rows=34 width=133)
  ->  XN Merge  (cost=1000054708369.66..1000054708369.75 rows=34 width=133)
        Merge Key: item.i_item_id
        ->  XN Network  (cost=1000054708369.66..1000054708369.75 rows=34 width=133)
              Send to leader
              ->  XN Sort  (cost=1000054708369.66..1000054708369.75 rows=34 width=133)
                    Sort Key: item.i_item_id
                    ->  XN HashAggregate  (cost=54708368.80..54708368.80 rows=34 width=133)
                          ->  XN Hash Join DS_DIST_NONE  (cost=22305641.38..54707024.14 rows=179287 width=133)
                                Hash Cond: ("outer".cs_item_sk = "inner".inv_item_sk)
                                ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1439980416 width=4)
                                ->  XN Hash  (cost=22305641.29..22305641.29 rows=37 width=141)
                                      ->  XN Hash Join DS_DIST_NONE  (cost=8595.99..22305641.29 rows=37 width=141)
                                            Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1095.88..22292941.19 rows=231094 width=4)
                                                  Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                  ->  XN Seq Scan on inventory  (cost=0.00..11745000.00 rows=296362750 width=8)
                                                        Filter: ((inv_quantity_on_hand <= 500) AND (inv_quantity_on_hand >= 100))
                                                  ->  XN Hash  (cost=1095.73..1095.73 rows=57 width=4)
                                                        ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=57 width=4)
                                                              Filter: ((d_date >= '2000-02-01'::date) AND (d_date <= '2000-04-01'::date))
                                            ->  XN Hash  (cost=7500.00..7500.00 rows=46 width=137)
                                                  ->  XN Seq Scan on item  (cost=0.00..7500.00 rows=46 width=137)
                                                        Filter: (((i_manufact_id = 677) OR (i_manufact_id = 694) OR (i_manufact_id = 808) OR (i_manufact_id = 940)) AND (i_current_price <= 98::double precision) AND (i_current_price >= 68::double precision))
XN Limit  (cost=1000280961928.24..1000280961928.24 rows=1 width=37)
  ->  XN Merge  (cost=1000280961928.24..1000280961928.24 rows=1 width=37)
        Merge Key: "substring"((reason.r_reason_desc)::text, 1, 20), avg(web_sales.ws_quantity), avg(web_returns.wr_refunded_cash), avg(web_returns.wr_fee)
        ->  XN Network  (cost=1000280961928.24..1000280961928.24 rows=1 width=37)
              Send to leader
              ->  XN Sort  (cost=1000280961928.24..1000280961928.24 rows=1 width=37)
                    Sort Key: "substring"((reason.r_reason_desc)::text, 1, 20), avg(web_sales.ws_quantity), avg(web_returns.wr_refunded_cash), avg(web_returns.wr_fee)
                    ->  XN HashAggregate  (cost=280961928.22..280961928.23 rows=1 width=37)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=280441860.70..280961928.21 rows=1 width=37)
                                Hash Cond: ("outer".wp_web_page_sk = "inner".ws_web_page_sk)
                                ->  XN Seq Scan on web_page  (cost=0.00..30.00 rows=3000 width=4)
                                ->  XN Hash  (cost=280441860.69..280441860.69 rows=1 width=41)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=279580166.01..280441860.69 rows=1 width=41)
                                            Hash Cond: ("outer".ca_address_sk = "inner".wr_refunded_addr_sk)
                                            Join Filter: ((("inner".ws_net_profit >= 50::double precision) AND ("inner".ws_net_profit <= 250::double precision) AND ((("outer".ca_state)::text = 'IA'::text) OR (("outer".ca_state)::text = 'AR'::text) OR (("outer".ca_state)::text = 'LA'::text))) OR (("inner".ws_net_profit >= 150::double precision) AND ("inner".ws_net_profit <= 300::double precision) AND ((("outer".ca_state)::text = 'KY'::text) OR (("outer".ca_state)::text = 'CT'::text) OR (("outer".ca_state)::text = 'WI'::text))) OR (("inner".ws_net_profit >= 100::double precision) AND ("inner".ws_net_profit <= 200::double precision) AND ((("outer".ca_state)::text = 'IN'::text) OR (("outer".ca_state)::text = 'OH'::text) OR (("outer".ca_state)::text = 'NJ'::text))))
                                            ->  XN Seq Scan on customer_address  (cost=0.00..210000.00 rows=935571 width=10)
                                                  Filter: (((((ca_state)::text = 'IN'::text) OR ((ca_state)::text = 'OH'::text) OR ((ca_state)::text = 'NJ'::text)) OR (((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'CT'::text) OR ((ca_state)::text = 'WI'::text)) OR (((ca_state)::text = 'IA'::text) OR ((ca_state)::text = 'AR'::text) OR ((ca_state)::text = 'LA'::text))) AND ((ca_country)::text = 'United States'::text))
                                            ->  XN Hash  (cost=279580166.01..279580166.01 rows=1 width=53)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=278648928.00..279580166.01 rows=1 width=53)
                                                        Hash Cond: (("outer".cd_demo_sk = "inner".wr_returning_cdemo_sk) AND (("outer".cd_education_status)::text = ("inner".cd_education_status)::text) AND (("outer".cd_marital_status)::text = ("inner".cd_marital_status)::text))
                                                        ->  XN Seq Scan on customer_demographics cd2  (cost=0.00..19208.00 rows=1920800 width=22)
                                                        ->  XN Hash  (cost=278648927.99..278648927.99 rows=1 width=75)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=236035598.68..278648927.99 rows=1 width=75)
                                                                    Hash Cond: ("outer".wr_reason_sk = "inner".r_reason_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=236035597.87..257845633.66 rows=102151 width=62)
                                                                          Hash Cond: ("outer".cd_demo_sk = "inner".wr_refunded_cdemo_sk)
                                                                          Join Filter: ((("inner".ws_sales_price <= 150::double precision) AND ("inner".ws_sales_price >= 100::double precision) AND (("outer".cd_education_status)::text = 'Advanced Degree'::text) AND (("outer".cd_marital_status)::text = 'M'::text)) OR (("inner".ws_sales_price <= 100::double precision) AND ("inner".ws_sales_price >= 50::double precision) AND (("outer".cd_education_status)::text = 'College'::text) AND (("outer".cd_marital_status)::text = 'S'::text)) OR (("inner".ws_sales_price <= 200::double precision) AND ("inner".ws_sales_price >= 150::double precision) AND (("outer".cd_education_status)::text = '2 yr Degree'::text) AND (("outer".cd_marital_status)::text = 'W'::text)))
                                                                          ->  XN Seq Scan on customer_demographics cd1  (cost=0.00..48020.00 rows=161254 width=22)
                                                                                Filter: ((((cd_education_status)::text = 'College'::text) AND ((cd_marital_status)::text = 'S'::text)) OR (((cd_education_status)::text = '2 yr Degree'::text) AND ((cd_marital_status)::text = 'W'::text)) OR (((cd_education_status)::text = 'Advanced Degree'::text) AND ((cd_marital_status)::text = 'M'::text)))
                                                                          ->  XN Hash  (cost=236035597.78..236035597.78 rows=34 width=56)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=70202016.75..236035597.78 rows=34 width=56)
                                                                                      Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                                      ->  XN Seq Scan on web_returns  (cost=0.00..719975.20 rows=60544233 width=40)
                                                                                            Filter: ((wr_refunded_addr_sk IS NOT NULL) AND (wr_returning_cdemo_sk IS NOT NULL) AND (wr_refunded_cdemo_sk IS NOT NULL) AND (wr_reason_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=70202014.70..70202014.70 rows=409 width=32)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..70202014.70 rows=409 width=32)
                                                                                                  Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Seq Scan on web_sales  (cost=0.00..28800015.36 rows=86502 width=36)
                                                                                                        Filter: ((((ws_net_profit >= 50::double precision) AND (ws_net_profit <= 250::double precision)) OR ((ws_net_profit >= 150::double precision) AND (ws_net_profit <= 300::double precision)) OR ((ws_net_profit >= 100::double precision) AND (ws_net_profit <= 200::double precision))) AND (((ws_sales_price <= 150::double precision) AND (ws_sales_price >= 100::double precision)) OR ((ws_sales_price <= 200::double precision) AND (ws_sales_price >= 150::double precision)) OR ((ws_sales_price <= 100::double precision) AND (ws_sales_price >= 50::double precision))))
                                                                                                  ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                              Filter: (d_year = 2000)
                                                                    ->  XN Hash  (cost=0.65..0.65 rows=65 width=21)
                                                                          ->  XN Seq Scan on reason  (cost=0.00..0.65 rows=65 width=21)
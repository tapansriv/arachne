XN HashAggregate  (cost=20602067369.87..20602240373.54 rows=4942962 width=27)
  ->  XN Hash Join DS_BCAST_INNER  (cost=913.11..20543089525.78 rows=2621237515 width=27)
        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
        ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2748508627 width=16)
              Filter: (ss_sold_date_sk IS NOT NULL)
        ->  XN Hash  (cost=730.49..730.49 rows=73049 width=19)
              ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=19)

XN Limit  (cost=1000428619736.57..1000428619736.82 rows=100 width=143)
  ->  XN Merge  (cost=1000428619736.57..1000428619737.72 rows=461 width=143)
        Merge Key: store.s_store_name, store.s_store_id, volt_tt_618ff006f62d1.d_week_seq
        ->  XN Network  (cost=1000428619736.57..1000428619737.72 rows=461 width=143)
              Send to leader
              ->  XN Sort  (cost=1000428619736.57..1000428619737.72 rows=461 width=143)
                    Sort Key: store.s_store_name, store.s_store_id, volt_tt_618ff006f62d1.d_week_seq
                    ->  XN Hash Join DS_BCAST_INNER  (cost=168615104.73..428619716.17 rows=461 width=143)
                          Hash Cond: (("outer".d_week_seq = "inner".d_week_seq) AND ("outer".ss_store_sk = "inner".s_store_sk))
                          ->  XN Seq Scan on volt_tt_618ff006f62d1  (cost=0.00..1315.24 rows=131524 width=64)
                          ->  XN Hash  (cost=168615103.48..168615103.48 rows=250 width=95)
                                ->  XN Hash Join DS_DIST_NONE  (cost=168615078.43..168615103.48 rows=250 width=95)
                                      Hash Cond: (("outer".s_store_id)::text = ("inner".s_store_id)::text)
                                      ->  XN Seq Scan on store  (cost=0.00..10.02 rows=1002 width=31)
                                      ->  XN Hash  (cost=168615078.12..168615078.12 rows=124 width=84)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=75135054.34..168615078.12 rows=124 width=84)
                                                  Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                                  ->  XN Seq Scan on store volt_dt_1  (cost=0.00..10.02 rows=1002 width=24)
                                                  ->  XN Hash  (cost=75135054.03..75135054.03 rows=123 width=68)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=2193.03..75135054.03 rows=123 width=68)
                                                              Hash Cond: (("outer".d_week_seq - 52) = "inner".d_week_seq)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..37573302.71 rows=4022 width=64)
                                                                    Hash Cond: ("outer".d_week_seq = "inner".d_week_seq)
                                                                    ->  XN Seq Scan on volt_tt_618ff006f62d1 volt_dt_2  (cost=0.00..1315.24 rows=131524 width=64)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                          ->  XN Seq Scan on date_dim volt_dt_0  (cost=0.00..1095.73 rows=313 width=4)
                                                                                Filter: ((d_month_seq >= 1224) AND (d_month_seq <= 1235))
                                                              ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                    ->  XN Seq Scan on date_dim d  (cost=0.00..1095.73 rows=313 width=4)
                                                                          Filter: ((d_month_seq >= 1212) AND (d_month_seq <= 1223))
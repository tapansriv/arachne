XN HashAggregate  (cost=102843932.06..102873446.06 rows=11805599 width=16)
  ->  XN Hash Join DS_BCAST_INNER  (cost=1096.56..102755390.06 rows=11805599 width=16)
        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
        ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2748508627 width=20)
              Filter: (ss_sold_date_sk IS NOT NULL)
        ->  XN Hash  (cost=1095.73..1095.73 rows=329 width=4)
              ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=329 width=4)
                    Filter: ((d_month_seq <= 1187) AND (d_month_seq >= 1176))

XN Limit  (cost=1468270180317.05..1468270180317.30 rows=100 width=156)
  ->  XN Merge  (cost=1468270180317.05..1468270213149.92 rows=13133148 width=156)
        Merge Key: store.s_store_name, item.i_item_desc
        ->  XN Network  (cost=1468270180317.05..1468270213149.92 rows=13133148 width=156)
              Send to leader
              ->  XN Sort  (cost=1468270180317.05..1468270213149.92 rows=13133148 width=156)
                    Sort Key: store.s_store_name, item.i_item_desc
                    ->  XN Hash Join DS_BCAST_INNER  (cost=102332896.03..468268627538.37 rows=13133148 width=156)
                          Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=102329146.03..267798757.01 rows=25178719 width=19)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                Join Filter: ("outer".col2 <= ("inner".ave * 0.10000000000000001::double precision))
                                ->  XN Seq Scan on volt_tt_618ff1db4b00f  (cost=0.00..752405.68 rows=75240568 width=16)
                                ->  XN Hash  (cost=102329144.75..102329144.75 rows=510 width=23)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1128616.11..102329144.75 rows=510 width=23)
                                            Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                            ->  XN Seq Scan on store  (cost=0.00..10.02 rows=1002 width=11)
                                            ->  XN Hash  (cost=1128614.84..1128614.84 rows=506 width=12)
                                                  ->  XN Subquery Scan sb  (cost=1128608.52..1128614.84 rows=506 width=12)
                                                        ->  XN HashAggregate  (cost=1128608.52..1128609.78 rows=506 width=12)
                                                              ->  XN Seq Scan on volt_tt_618ff1db4b00f  (cost=0.00..752405.68 rows=75240568 width=12)
                          ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=145)
                                ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=145)
XN Limit  (cost=1106353410224.09..1106353410224.34 rows=100 width=96)
  ->  XN Merge  (cost=1106353410224.09..1106353474344.86 rows=25648309 width=96)
        Merge Key: t_s_secyear.customer_id
        ->  XN Network  (cost=1106353410224.09..1106353474344.86 rows=25648309 width=96)
              Send to leader
              ->  XN Sort  (cost=1106353410224.09..1106353474344.86 rows=25648309 width=96)
                    Sort Key: t_s_secyear.customer_id
                    ->  XN Hash Join DS_BCAST_INNER  (cost=84805785299.67..106350253896.97 rows=25648309 width=96)
                          Hash Cond: (("outer".year_ = "inner".year_) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                          Join Filter: (CASE WHEN ("outer".year_total > 0::double precision) THEN ("outer".year_total / "outer".year_total) ELSE NULL::double precision END < CASE WHEN ("outer".year_total > 0::double precision) THEN ("inner".year_total / "outer".year_total) ELSE NULL::double precision END)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=75335791557.53..76378293587.25 rows=1131125 width=188)
                                Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".year_ = "inner".year_))
                                ->  XN Hash Join DS_BCAST_INNER  (cost=42402891653.64..42923553023.74 rows=652097 width=152)
                                      Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                                      ->  XN Subquery Scan t_s_secyear  (cost=32932898575.97..32932901507.49 rows=130289 width=108)
                                            ->  XN Append  (cost=32932898575.97..32932900204.60 rows=130289 width=51)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=32932898575.97..32932900204.57 rows=130288 width=51)
                                                        ->  XN HashAggregate  (cost=32932898575.97..32932898901.69 rows=130288 width=51)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=62225644.49..32932896947.37 rows=130288 width=51)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=43)
                                                                    ->  XN Hash  (cost=62225302.09..62225302.09 rows=136960 width=16)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..62225302.09 rows=136960 width=16)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2622621955 width=16)
                                                                                      Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                            Filter: ((d_year = 2002) AND ((d_year = 2002) OR (d_year = 2001)))
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.02..0.03 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                      ->  XN Hash  (cost=9469993075.17..9469993075.17 rows=1001 width=44)
                                            ->  XN Subquery Scan t_w_firstyear  (cost=0.02..9469993075.17 rows=1001 width=44)
                                                  ->  XN Append  (cost=0.02..9469993065.16 rows=1001 width=51)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.02..0.03 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=9469992760.72..9469993065.13 rows=1000 width=51)
                                                              ->  XN HashAggregate  (cost=9469992760.72..9469993055.13 rows=1000 width=51)
                                                                    Filter: (sum(ws_net_paid) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=16841779.34..9469992171.90 rows=39255 width=51)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=43)
                                                                          ->  XN Hash  (cost=16841680.88..16841680.88 rows=39387 width=16)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..16841680.88 rows=39387 width=16)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=16)
                                                                                      ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                                  Filter: ((d_year = 2001) AND ((d_year = 2002) OR (d_year = 2001)))
                                ->  XN Hash  (cost=32932899898.88..32932899898.88 rows=1001 width=44)
                                      ->  XN Subquery Scan t_s_firstyear  (cost=32932898901.69..32932899898.88 rows=1001 width=44)
                                            ->  XN Append  (cost=32932898901.69..32932899888.88 rows=1001 width=51)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=32932898901.69..32932899888.85 rows=1000 width=51)
                                                        ->  XN HashAggregate  (cost=32932898901.69..32932899878.85 rows=1000 width=51)
                                                              Filter: (sum(ss_net_paid) > 0::double precision)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=62225644.49..32932896947.37 rows=130288 width=51)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=43)
                                                                    ->  XN Hash  (cost=62225302.09..62225302.09 rows=136960 width=16)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..62225302.09 rows=136960 width=16)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2622621955 width=16)
                                                                                      Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                            Filter: ((d_year = 2001) AND ((d_year = 2002) OR (d_year = 2001)))
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.02..0.03 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                          ->  XN Hash  (cost=9469993545.86..9469993545.86 rows=39256 width=44)
                                ->  XN Subquery Scan t_w_secyear  (cost=0.02..9469993545.86 rows=39256 width=44)
                                      ->  XN Append  (cost=0.02..9469993153.30 rows=39256 width=51)
                                            ->  XN Subquery Scan "*SELECT* 1"  (cost=0.02..0.03 rows=1 width=0)
                                                  ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                        ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                              ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                    Distribute Round Robin
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          One-Time Filter: false
                                            ->  XN Subquery Scan "*SELECT* 2"  (cost=9469992662.58..9469993153.27 rows=39255 width=51)
                                                  ->  XN HashAggregate  (cost=9469992662.58..9469992760.72 rows=39255 width=51)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=16841779.34..9469992171.90 rows=39255 width=51)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=43)
                                                              ->  XN Hash  (cost=16841680.88..16841680.88 rows=39387 width=16)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..16841680.88 rows=39387 width=16)
                                                                          Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=16)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                      Filter: ((d_year = 2002) AND ((d_year = 2002) OR (d_year = 2001)))
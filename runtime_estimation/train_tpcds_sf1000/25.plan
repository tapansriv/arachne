XN Limit  (cost=1000570820067.50..1000570820067.75 rows=100 width=176)
  ->  XN Merge  (cost=1000570820067.50..1000570852742.20 rows=13069878 width=176)
        Merge Key: item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name
        ->  XN Network  (cost=1000570820067.50..1000570852742.20 rows=13069878 width=176)
              Send to leader
              ->  XN Sort  (cost=1000570820067.50..1000570852742.20 rows=13069878 width=176)
                    Sort Key: item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name
                    ->  XN HashAggregate  (cost=569177200.68..569275224.76 rows=13069878 width=176)
                          ->  XN Hash Join DS_DIST_NONE  (cost=168044912.79..568948477.81 rows=13069878 width=176)
                                Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_customer_sk = "inner".cs_bill_customer_sk) AND ("outer".i_item_sk = "inner".cs_item_sk) AND ("outer".d_year = "inner".d_year))
                                ->  XN Hash Join DS_BCAST_INNER  (cost=64771372.44..465628135.60 rows=936037 width=180)
                                      Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                      ->  XN Hash Join DS_DIST_NONE  (cost=64771359.91..64796849.23 rows=973932 width=157)
                                            Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                            ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=129)
                                            ->  XN Hash  (cost=64768988.40..64768988.40 rows=948603 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..64768988.40 rows=948603 width=28)
                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2505482151 width=28)
                                                              Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=8)
                                                              ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=29 width=8)
                                                                    Filter: ((d_year = 2001) AND (d_moy = 4))
                                      ->  XN Hash  (cost=10.02..10.02 rows=1002 width=31)
                                            ->  XN Seq Scan on store  (cost=0.00..10.02 rows=1002 width=31)
                                ->  XN Hash  (cost=103273360.73..103273360.73 rows=17962 width=44)
                                      ->  XN Hash Join DS_DIST_NONE  (cost=38562321.88..103273360.73 rows=17962 width=44)
                                            Hash Cond: (("outer".cs_bill_customer_sk = "inner".sr_customer_sk) AND ("outer".cs_item_sk = "inner".sr_item_sk) AND ("outer".d_year = "inner".d_year))
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1278.86..64565553.28 rows=3913718 width=20)
                                                  Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                  ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1424426646 width=20)
                                                        Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=1278.36..1278.36 rows=202 width=8)
                                                        ->  XN Seq Scan on date_dim d3  (cost=0.00..1278.36 rows=202 width=8)
                                                              Filter: ((d_year = 2001) AND (d_moy >= 4) AND (d_moy <= 10))
                                            ->  XN Hash  (cost=38555698.15..38555698.15 rows=712650 width=24)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1278.86..38555698.15 rows=712650 width=24)
                                                        Hash Cond: ("outer".sr_returned_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=267783602 width=24)
                                                              Filter: ((sr_returned_date_sk IS NOT NULL) AND (sr_customer_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=1278.36..1278.36 rows=202 width=8)
                                                              ->  XN Seq Scan on date_dim d2  (cost=0.00..1278.36 rows=202 width=8)
                                                                    Filter: ((d_year = 2001) AND (d_moy >= 4) AND (d_moy <= 10))
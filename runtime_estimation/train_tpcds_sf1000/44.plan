XN Limit  (cost=3000300964995.29..3000300964995.54 rows=100 width=60)
  ->  XN Merge  (cost=3000300964995.29..3000300964995.74 rows=179 width=60)
        Merge Key: v11.rnk
        ->  XN Network  (cost=3000300964995.29..3000300964995.74 rows=179 width=60)
              Send to leader
              ->  XN Sort  (cost=3000300964995.29..3000300964995.74 rows=179 width=60)
                    Sort Key: v11.rnk
                    ->  XN Hash Join DS_BCAST_INNER  (cost=2000180944198.53..2000300964988.59 rows=179 width=60)
                          Hash Cond: ("outer".rnk = "inner".rnk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1000072041723.08..1000108902474.97 rows=189 width=34)
                                Hash Cond: ("outer".i_item_sk = "inner".item_sk)
                                ->  XN Seq Scan on item i2  (cost=0.00..3000.00 rows=300000 width=30)
                                ->  XN Hash  (cost=1000072041722.62..1000072041722.62 rows=184 width=12)
                                      ->  XN Subquery Scan v21  (cost=1000072041708.82..1000072041722.62 rows=184 width=12)
                                            Filter: (rnk < 11)
                                            ->  XN Window  (cost=1000072041708.82..1000072041715.72 rows=552 width=12)
                                                  Order: rank_col
                                                  ->  XN Sort  (cost=1000072041708.82..1000072041710.20 rows=552 width=12)
                                                        Sort Key: rank_col
                                                        ->  XN Network  (cost=72041672.65..72041683.68 rows=552 width=12)
                                                              Send to slice 0
                                                              ->  XN Subquery Scan v2  (cost=72041672.65..72041683.68 rows=552 width=12)
                                                                    ->  XN HashAggregate  (cost=72041672.65..72041678.16 rows=552 width=12)
                                                                          Filter: (avg(ss_net_profit) > (0.90000000000000002::double precision * $0))
                                                                          InitPlan
                                                                            ->  XN HashAggregate  (cost=36001072.15..36001072.15 rows=1 width=12)
                                                                                  ->  XN Seq Scan on store_sales  (cost=0.00..35999849.60 rows=244509 width=12)
                                                                                        Filter: ((ss_store_sk = 4) AND (ss_addr_sk IS NULL))
                                                                          ->  XN Seq Scan on store_sales ss1  (cost=0.00..35999849.60 rows=5433453 width=12)
                                                                                Filter: (ss_store_sk = 4)
                          ->  XN Hash  (cost=1000108902474.97..1000108902474.97 rows=189 width=34)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1000072041723.08..1000108902474.97 rows=189 width=34)
                                      Hash Cond: ("outer".i_item_sk = "inner".item_sk)
                                      ->  XN Seq Scan on item i1  (cost=0.00..3000.00 rows=300000 width=30)
                                      ->  XN Hash  (cost=1000072041722.62..1000072041722.62 rows=184 width=12)
                                            ->  XN Subquery Scan v11  (cost=1000072041708.82..1000072041722.62 rows=184 width=12)
                                                  Filter: (rnk < 11)
                                                  ->  XN Window  (cost=1000072041708.82..1000072041715.72 rows=552 width=12)
                                                        Order: rank_col
                                                        ->  XN Sort  (cost=1000072041708.82..1000072041710.20 rows=552 width=12)
                                                              Sort Key: rank_col
                                                              ->  XN Network  (cost=72041672.65..72041683.68 rows=552 width=12)
                                                                    Send to slice 0
                                                                    ->  XN Subquery Scan v1  (cost=72041672.65..72041683.68 rows=552 width=12)
                                                                          ->  XN HashAggregate  (cost=72041672.65..72041678.16 rows=552 width=12)
                                                                                Filter: (avg(ss_net_profit) > (0.90000000000000002::double precision * $1))
                                                                                InitPlan
                                                                                  ->  XN HashAggregate  (cost=36001072.15..36001072.15 rows=1 width=12)
                                                                                        ->  XN Seq Scan on store_sales  (cost=0.00..35999849.60 rows=244509 width=12)
                                                                                              Filter: ((ss_store_sk = 4) AND (ss_addr_sk IS NULL))
                                                                                ->  XN Seq Scan on store_sales ss1  (cost=0.00..35999849.60 rows=5433453 width=12)
                                                                                      Filter: (ss_store_sk = 4)
XN Seq Scan on item  (cost=0.00..3750.00 rows=30770 width=4)
  Filter: ((i_category)::text = 'Electronics'::text)

XN Limit  (cost=1000241785983.53..1000241785983.53 rows=3 width=12)
  ->  XN Merge  (cost=1000241785983.53..1000241785983.53 rows=3 width=12)
        Merge Key: sum(total_sales)
        ->  XN Network  (cost=1000241785983.53..1000241785983.53 rows=3 width=12)
              Send to leader
              ->  XN Sort  (cost=1000241785983.53..1000241785983.53 rows=3 width=12)
                    Sort Key: sum(total_sales)
                    ->  XN HashAggregate  (cost=241785983.50..241785983.50 rows=3 width=12)
                          ->  XN Subquery Scan tmp1  (cost=105533422.95..241785983.48 rows=3 width=12)
                                ->  XN Append  (cost=105533422.95..241785983.45 rows=3 width=12)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=105533422.95..105533422.96 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=105533422.95..105533422.95 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=65413410.50..105533422.95 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=373.59..373.59 rows=993 width=4)
                                                              ->  XN Seq Scan on volt_tt_618fee4e7b8f1  (cost=0.00..298.87 rows=29887 width=4)
                                                        ->  XN Hash  (cost=65413036.91..65413036.91 rows=2 width=12)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=65406286.89..65413036.91 rows=2 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=8)
                                                                    ->  XN Hash  (cost=65406286.89..65406286.89 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..65406286.89 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..61805186.12 rows=396 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2624824198 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=30 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 5))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=75929317.37..75929317.39 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=75929317.37..75929317.38 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=36009304.93..75929317.37 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=373.59..373.59 rows=993 width=4)
                                                              ->  XN Seq Scan on volt_tt_618fee4e7b8f1  (cost=0.00..298.87 rows=29887 width=4)
                                                        ->  XN Hash  (cost=36008931.34..36008931.34 rows=1 width=12)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=36002181.32..36008931.34 rows=1 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=8)
                                                                    ->  XN Hash  (cost=36002181.32..36002181.32 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..36002181.32 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..32401082.70 rows=224 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1424502104 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=30 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 5))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=60323243.09..60323243.10 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=60323243.09..60323243.09 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=20203230.64..60323243.09 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=373.59..373.59 rows=993 width=4)
                                                              ->  XN Seq Scan on volt_tt_618fee4e7b8f1  (cost=0.00..298.87 rows=29887 width=4)
                                                        ->  XN Hash  (cost=20202857.05..20202857.05 rows=2 width=12)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=19996107.03..20202857.05 rows=2 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=8)
                                                                    ->  XN Hash  (cost=19996107.03..19996107.03 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..19996107.03 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..16395009.78 rows=114 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=20)
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=30 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 5))
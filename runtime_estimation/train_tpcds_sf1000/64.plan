XN HashAggregate  (cost=4171706540.20..4171710923.17 rows=1000 width=36)
  Filter: ((sum((cr_store_credit + (cr_refunded_cash + cr_reversed_charge))) * 2::double precision) < sum(cs_ext_list_price))
  ->  XN Hash Join DS_DIST_NONE  (cost=2159951.28..4170903301.02 rows=107098557 width=36)
        Hash Cond: (("outer".cs_order_number = "inner".cr_order_number) AND ("outer".cs_item_sk = "inner".cr_item_sk))
        ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1439980416 width=16)
        ->  XN Hash  (cost=1439967.52..1439967.52 rows=143996752 width=32)
              ->  XN Seq Scan on catalog_returns  (cost=0.00..1439967.52 rows=143996752 width=32)

XN Merge  (cost=1920685729136.57..1920685729136.61 rows=19 width=855)
  Merge Key: cs1.product_name, cs1.store_name, cs2.cnt, cs1.s1, cs2.s1
  ->  XN Network  (cost=1920685729136.57..1920685729136.61 rows=19 width=855)
        Send to leader
        ->  XN Sort  (cost=1920685729136.57..1920685729136.61 rows=19 width=855)
              Sort Key: cs1.product_name, cs1.store_name, cs2.cnt, cs1.s1, cs2.s1
              ->  XN Hash Join DS_BCAST_INNER  (cost=920143648841.24..920685729136.16 rows=19 width=855)
                    Hash Cond: (("outer".item_sk = "inner".item_sk) AND (("outer".store_name)::text = ("inner".store_name)::text) AND (("outer".store_zip)::text = ("inner".store_zip)::text))
                    Join Filter: ("outer".cnt >= "inner".cnt)
                    ->  XN Subquery Scan cs1  (cost=460071824416.39..460071824422.55 rows=308 width=823)
                          ->  XN HashAggregate  (cost=460071824416.39..460071824419.47 rows=308 width=160)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=459352169388.30..460071824401.76 rows=308 width=160)
                                      Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=459352169375.77..459791264378.98 rows=319 width=148)
                                            Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                            ->  XN Seq Scan on customer_address ad1  (cost=0.00..60000.00 rows=6000000 width=43)
                                            ->  XN Hash  (cost=459352169374.89..459352169374.89 rows=354 width=113)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=458898082621.35..459352169374.89 rows=354 width=113)
                                                        Hash Cond: ("outer".cs_item_sk = "inner".ss_item_sk)
                                                        ->  XN Seq Scan on volt_tt_618ff09990cae  (cost=0.00..3000.00 rows=300000 width=4)
                                                        ->  XN Hash  (cost=458898082620.49..458898082620.49 rows=344 width=121)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=458419682447.30..458898082620.49 rows=344 width=121)
                                                                    Hash Cond: ("outer".hd_income_band_sk = "inner".ib_income_band_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=458419682447.05..458895682612.50 rows=344 width=125)
                                                                          Hash Cond: ("outer".hd_demo_sk = "inner".ss_hdemo_sk)
                                                                          ->  XN Seq Scan on household_demographics hd1  (cost=0.00..72.00 rows=7200 width=8)
                                                                          ->  XN Hash  (cost=458419682446.17..458419682446.17 rows=350 width=125)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=457741399222.71..458419682446.17 rows=350 width=125)
                                                                                      Hash Cond: ("outer".cd_demo_sk = "inner".ss_cdemo_sk)
                                                                                      Join Filter: (("outer".cd_marital_status)::text <> ("inner".cd_marital_status)::text)
                                                                                      ->  XN Seq Scan on customer_demographics cd1  (cost=0.00..19208.00 rows=1920800 width=9)
                                                                                      ->  XN Hash  (cost=457741399221.53..457741399221.53 rows=471 width=134)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=326849101720.47..457741399221.53 rows=471 width=134)
                                                                                                  Hash Cond: ("outer".ss_promo_sk = "inner".p_promo_sk)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=326849101701.72..457561399191.85 rows=498 width=138)
                                                                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=326849100787.74..457506196892.26 rows=110451 width=138)
                                                                                                              Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                                              ->  XN Seq Scan on customer_address ad2  (cost=0.00..60000.00 rows=6000000 width=43)
                                                                                                              ->  XN Hash  (cost=326849100496.10..326849100496.10 rows=116658 width=103)
                                                                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=187376576111.52..326849100496.10 rows=116658 width=103)
                                                                                                                          Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                                                          ->  XN Seq Scan on customer_demographics cd2  (cost=0.00..19208.00 rows=1920800 width=9)
                                                                                                                          ->  XN Hash  (cost=187376575800.20..187376575800.20 rows=124529 width=102)
                                                                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=92634408.71..187376575800.20 rows=124529 width=102)
                                                                                                                                      Hash Cond: ("outer".c_current_hdemo_sk = "inner".hd_demo_sk)
                                                                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=90234156.46..186510171489.22 rows=125041 width=106)
                                                                                                                                            Hash Cond: ("outer".c_first_shipto_date_sk = "inner".d_date_sk)
                                                                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=90233243.34..174822327704.33 rows=129709 width=106)
                                                                                                                                                  Hash Cond: ("outer".c_first_sales_date_sk = "inner".d_date_sk)
                                                                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=90232330.23..163134483812.10 rows=134562 width=106)
                                                                                                                                                        Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                                                                                        ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=10410900 width=24)
                                                                                                                                                              Filter: ((c_first_sales_date_sk IS NOT NULL) AND (c_first_shipto_date_sk IS NOT NULL) AND (c_current_cdemo_sk IS NOT NULL) AND (c_current_hdemo_sk IS NOT NULL))
                                                                                                                                                        ->  XN Hash  (cost=90231922.62..90231922.62 rows=163044 width=90)
                                                                                                                                                              ->  XN Hash Join DS_DIST_NONE  (cost=9374026.82..90231922.62 rows=163044 width=90)
                                                                                                                                                                    Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_item_sk = "inner".i_item_sk))
                                                                                                                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2082320642 width=60)
                                                                                                                                                                          Filter: ((ss_promo_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                                                                                                    ->  XN Hash  (cost=9372848.99..9372848.99 rows=235567 width=38)
                                                                                                                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=10500.60..9372848.99 rows=235567 width=38)
                                                                                                                                                                                Hash Cond: ("outer".sr_item_sk = "inner".i_item_sk)
                                                                                                                                                                                ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=287999776 width=8)
                                                                                                                                                                                ->  XN Hash  (cost=10500.00..10500.00 rows=239 width=30)
                                                                                                                                                                                      ->  XN Seq Scan on item  (cost=0.00..10500.00 rows=239 width=30)
                                                                                                                                                                                            Filter: ((i_current_price <= 74::double precision) AND (i_current_price <= 79::double precision) AND (i_current_price >= 65::double precision) AND (i_current_price >= 64::double precision) AND (((i_color)::text = 'purple'::text) OR ((i_color)::text = 'spring'::text) OR ((i_color)::text = 'burlywood'::text) OR ((i_color)::text = 'floral'::text) OR ((i_color)::text = 'indian'::text) OR ((i_color)::text = 'medium'::text)))
                                                                                                                                                  ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                                                                        ->  XN Seq Scan on date_dim d2  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                                                            ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                                                                  ->  XN Seq Scan on date_dim d3  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                                                      ->  XN Hash  (cost=2400234.25..2400234.25 rows=7200 width=4)
                                                                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=0.25..2400234.25 rows=7200 width=4)
                                                                                                                                                  Hash Cond: ("outer".hd_income_band_sk = "inner".ib_income_band_sk)
                                                                                                                                                  ->  XN Seq Scan on household_demographics hd2  (cost=0.00..72.00 rows=7200 width=8)
                                                                                                                                                  ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                                                                                                        ->  XN Seq Scan on income_band ib2  (cost=0.00..0.20 rows=20 width=4)
                                                                                                        ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                              ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=345 width=8)
                                                                                                                    Filter: (d_year = 1999)
                                                                                                  ->  XN Hash  (cost=15.00..15.00 rows=1500 width=4)
                                                                                                        ->  XN Seq Scan on promotion  (cost=0.00..15.00 rows=1500 width=4)
                                                                    ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                          ->  XN Seq Scan on income_band ib1  (cost=0.00..0.20 rows=20 width=4)
                                      ->  XN Hash  (cost=10.02..10.02 rows=1002 width=20)
                                            ->  XN Seq Scan on store  (cost=0.00..10.02 rows=1002 width=20)
                    ->  XN Hash  (cost=460071824422.55..460071824422.55 rows=308 width=166)
                          ->  XN Subquery Scan cs2  (cost=460071824416.39..460071824422.55 rows=308 width=166)
                                ->  XN HashAggregate  (cost=460071824416.39..460071824419.47 rows=308 width=160)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=459352169388.30..460071824401.76 rows=308 width=160)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=459352169375.77..459791264378.98 rows=319 width=148)
                                                  Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                  ->  XN Seq Scan on customer_address ad1  (cost=0.00..60000.00 rows=6000000 width=43)
                                                  ->  XN Hash  (cost=459352169374.89..459352169374.89 rows=354 width=113)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=458898082621.35..459352169374.89 rows=354 width=113)
                                                              Hash Cond: ("outer".cs_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on volt_tt_618ff09990cae  (cost=0.00..3000.00 rows=300000 width=4)
                                                              ->  XN Hash  (cost=458898082620.49..458898082620.49 rows=344 width=121)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=458419682447.30..458898082620.49 rows=344 width=121)
                                                                          Hash Cond: ("outer".hd_income_band_sk = "inner".ib_income_band_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=458419682447.05..458895682612.50 rows=344 width=125)
                                                                                Hash Cond: ("outer".hd_demo_sk = "inner".ss_hdemo_sk)
                                                                                ->  XN Seq Scan on household_demographics hd1  (cost=0.00..72.00 rows=7200 width=8)
                                                                                ->  XN Hash  (cost=458419682446.17..458419682446.17 rows=350 width=125)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=457741399222.71..458419682446.17 rows=350 width=125)
                                                                                            Hash Cond: ("outer".cd_demo_sk = "inner".ss_cdemo_sk)
                                                                                            Join Filter: (("outer".cd_marital_status)::text <> ("inner".cd_marital_status)::text)
                                                                                            ->  XN Seq Scan on customer_demographics cd1  (cost=0.00..19208.00 rows=1920800 width=9)
                                                                                            ->  XN Hash  (cost=457741399221.53..457741399221.53 rows=471 width=134)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=326849101720.47..457741399221.53 rows=471 width=134)
                                                                                                        Hash Cond: ("outer".ss_promo_sk = "inner".p_promo_sk)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=326849101701.72..457561399191.85 rows=498 width=138)
                                                                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=326849100787.74..457506196892.26 rows=110451 width=138)
                                                                                                                    Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                                                    ->  XN Seq Scan on customer_address ad2  (cost=0.00..60000.00 rows=6000000 width=43)
                                                                                                                    ->  XN Hash  (cost=326849100496.10..326849100496.10 rows=116658 width=103)
                                                                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=187376576111.52..326849100496.10 rows=116658 width=103)
                                                                                                                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                                                                ->  XN Seq Scan on customer_demographics cd2  (cost=0.00..19208.00 rows=1920800 width=9)
                                                                                                                                ->  XN Hash  (cost=187376575800.20..187376575800.20 rows=124529 width=102)
                                                                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=92634408.71..187376575800.20 rows=124529 width=102)
                                                                                                                                            Hash Cond: ("outer".c_current_hdemo_sk = "inner".hd_demo_sk)
                                                                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=90234156.46..186510171489.22 rows=125041 width=106)
                                                                                                                                                  Hash Cond: ("outer".c_first_shipto_date_sk = "inner".d_date_sk)
                                                                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=90233243.34..174822327704.33 rows=129709 width=106)
                                                                                                                                                        Hash Cond: ("outer".c_first_sales_date_sk = "inner".d_date_sk)
                                                                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=90232330.23..163134483812.10 rows=134562 width=106)
                                                                                                                                                              Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                                                                                              ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=10410900 width=24)
                                                                                                                                                                    Filter: ((c_first_sales_date_sk IS NOT NULL) AND (c_first_shipto_date_sk IS NOT NULL) AND (c_current_cdemo_sk IS NOT NULL) AND (c_current_hdemo_sk IS NOT NULL))
                                                                                                                                                              ->  XN Hash  (cost=90231922.62..90231922.62 rows=163044 width=90)
                                                                                                                                                                    ->  XN Hash Join DS_DIST_NONE  (cost=9374026.82..90231922.62 rows=163044 width=90)
                                                                                                                                                                          Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_item_sk = "inner".i_item_sk))
                                                                                                                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2082320642 width=60)
                                                                                                                                                                                Filter: ((ss_promo_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                                                                                                          ->  XN Hash  (cost=9372848.99..9372848.99 rows=235567 width=38)
                                                                                                                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=10500.60..9372848.99 rows=235567 width=38)
                                                                                                                                                                                      Hash Cond: ("outer".sr_item_sk = "inner".i_item_sk)
                                                                                                                                                                                      ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=287999776 width=8)
                                                                                                                                                                                      ->  XN Hash  (cost=10500.00..10500.00 rows=239 width=30)
                                                                                                                                                                                            ->  XN Seq Scan on item  (cost=0.00..10500.00 rows=239 width=30)
                                                                                                                                                                                                  Filter: ((i_current_price <= 74::double precision) AND (i_current_price <= 79::double precision) AND (i_current_price >= 65::double precision) AND (i_current_price >= 64::double precision) AND (((i_color)::text = 'purple'::text) OR ((i_color)::text = 'spring'::text) OR ((i_color)::text = 'burlywood'::text) OR ((i_color)::text = 'floral'::text) OR ((i_color)::text = 'indian'::text) OR ((i_color)::text = 'medium'::text)))
                                                                                                                                                        ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                                                                              ->  XN Seq Scan on date_dim d2  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                                                                  ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                                                                        ->  XN Seq Scan on date_dim d3  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                                                            ->  XN Hash  (cost=2400234.25..2400234.25 rows=7200 width=4)
                                                                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=0.25..2400234.25 rows=7200 width=4)
                                                                                                                                                        Hash Cond: ("outer".hd_income_band_sk = "inner".ib_income_band_sk)
                                                                                                                                                        ->  XN Seq Scan on household_demographics hd2  (cost=0.00..72.00 rows=7200 width=8)
                                                                                                                                                        ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                                                                                                              ->  XN Seq Scan on income_band ib2  (cost=0.00..0.20 rows=20 width=4)
                                                                                                              ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                                    ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=345 width=8)
                                                                                                                          Filter: (d_year = 2000)
                                                                                                        ->  XN Hash  (cost=15.00..15.00 rows=1500 width=4)
                                                                                                              ->  XN Seq Scan on promotion  (cost=0.00..15.00 rows=1500 width=4)
                                                                          ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                                ->  XN Seq Scan on income_band ib1  (cost=0.00..0.20 rows=20 width=4)
                                            ->  XN Hash  (cost=10.02..10.02 rows=1002 width=20)
                                                  ->  XN Seq Scan on store  (cost=0.00..10.02 rows=1002 width=20)
XN Seq Scan on item  (cost=0.00..3750.00 rows=30345 width=20)
  Filter: ((i_category)::text = 'Music'::text)

XN Limit  (cost=1016669266984.76..1016669266984.76 rows=3 width=40)
  ->  XN Merge  (cost=1016669266984.76..1016669266984.76 rows=3 width=40)
        Merge Key: i_item_id, sum(total_sales)
        ->  XN Network  (cost=1016669266984.76..1016669266984.76 rows=3 width=40)
              Send to leader
              ->  XN Sort  (cost=1016669266984.76..1016669266984.76 rows=3 width=40)
                    Sort Key: i_item_id, sum(total_sales)
                    ->  XN HashAggregate  (cost=16669266984.73..16669266984.73 rows=3 width=40)
                          ->  XN Subquery Scan tmp1  (cost=5581413756.69..16669266984.71 rows=3 width=40)
                                ->  XN Append  (cost=5581413756.69..16669266984.68 rows=3 width=28)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=5581413756.69..5581413756.70 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=5581413756.69..5581413756.69 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=65293411.96..5581413756.69 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=375.05..375.05 rows=27577 width=20)
                                                              ->  XN Seq Scan on volt_tt_618ff09097e4a  (cost=0.00..300.04 rows=30004 width=20)
                                                        ->  XN Hash  (cost=65293036.91..65293036.91 rows=2 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=65286286.89..65293036.91 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=24)
                                                                    ->  XN Hash  (cost=65286286.89..65286286.89 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..65286286.89 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..61805186.12 rows=396 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2624824198 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 9))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=5551649651.12..5551649651.14 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=5551649651.12..5551649651.12 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=35889306.39..5551649651.12 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=375.05..375.05 rows=27577 width=20)
                                                              ->  XN Seq Scan on volt_tt_618ff09097e4a  (cost=0.00..300.04 rows=30004 width=20)
                                                        ->  XN Hash  (cost=35888931.34..35888931.34 rows=1 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=35882181.32..35888931.34 rows=1 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=24)
                                                                    ->  XN Hash  (cost=35882181.32..35882181.32 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..35882181.32 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..32401082.70 rows=224 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1424502104 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 9))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=5536203576.83..5536203576.84 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=5536203576.83..5536203576.83 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=20083232.10..5536203576.83 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=375.05..375.05 rows=27577 width=20)
                                                              ->  XN Seq Scan on volt_tt_618ff09097e4a  (cost=0.00..300.04 rows=30004 width=20)
                                                        ->  XN Hash  (cost=20082857.05..20082857.05 rows=2 width=28)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=19876107.03..20082857.05 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=24)
                                                                    ->  XN Hash  (cost=19876107.03..19876107.03 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..19876107.03 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..16395009.78 rows=114 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=20)
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 9))
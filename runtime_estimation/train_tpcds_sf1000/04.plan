XN Limit  (cost=3917997575769442.00..3917997575769442.00 rows=100 width=128)
  ->  XN Merge  (cost=3917997575769442.00..3921175488506319.50 rows=1271165094751001 width=128)
        Merge Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
        ->  XN Network  (cost=3917997575769442.00..3921175488506319.50 rows=1271165094751001 width=128)
              Send to leader
              ->  XN Sort  (cost=3917997575769442.00..3921175488506319.50 rows=1271165094751001 width=128)
                    Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
                    ->  XN Hash Join DS_BCAST_INNER  (cost=21019994548669.10..3598093569676137.50 rows=1271165094751001 width=128)
                          Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                          Join Filter: ((CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END > CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END) AND (CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END > CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END))
                          ->  XN Hash Join DS_BCAST_INNER  (cost=10509476100518.90..890100995823895.62 rows=757431363736811 width=216)
                                Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                                ->  XN Hash Join DS_BCAST_INNER  (cost=7300913556825.34..9137598435716.27 rows=65929020678 width=184)
                                      Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                                      ->  XN Subquery Scan t_s_secyear  (cost=5670223046437.29..5670223411647.62 rows=11237240 width=140)
                                            ->  XN Append  (cost=5670223046437.29..5670223299275.22 rows=11237240 width=160)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=5670223046437.29..5670223299275.14 rows=11237238 width=160)
                                                        ->  XN HashAggregate  (cost=5670223046437.29..5670223186902.76 rows=11237238 width=160)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=116931227.06..5670222793599.43 rows=11237238 width=160)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                    ->  XN Hash  (cost=116901695.26..116901695.26 rows=11812717 width=40)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..116901695.26 rows=11812717 width=40)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2622621955 width=40)
                                                                                      Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                            Filter: (d_year = 2002)
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                      ->  XN Hash  (cost=1630690493459.37..1630690493459.37 rows=3385735 width=44)
                                            ->  XN Subquery Scan t_w_secyear  (cost=0.03..1630690493459.37 rows=3385735 width=44)
                                                  ->  XN Append  (cost=0.03..1630690459602.02 rows=3385735 width=160)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=1630690383422.95..1630690459601.94 rows=3385733 width=160)
                                                              ->  XN HashAggregate  (cost=1630690383422.95..1630690425744.61 rows=3385733 width=160)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=71443386.63..1630690307243.96 rows=3385733 width=160)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                          ->  XN Hash  (cost=71434893.83..71434893.83 rows=3397121 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..71434893.83 rows=3397121 width=40)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=40)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2002)
                                ->  XN Hash  (cost=3208562510544.39..3208562510544.39 rows=6629834 width=44)
                                      ->  XN Subquery Scan t_c_secyear  (cost=0.03..3208562510544.39 rows=6629834 width=44)
                                            ->  XN Append  (cost=0.03..3208562444246.05 rows=6629834 width=160)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=3208562295074.75..3208562444245.97 rows=6629832 width=160)
                                                        ->  XN HashAggregate  (cost=3208562295074.75..3208562377947.65 rows=6629832 width=160)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=87489605.21..3208562145903.53 rows=6629832 width=160)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                    ->  XN Hash  (cost=87472894.41..87472894.41 rows=6684320 width=40)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..87472894.41 rows=6684320 width=40)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1424426646 width=40)
                                                                                      Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                            Filter: (d_year = 2002)
                                                  ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                          ->  XN Hash  (cost=10510518448142.65..10510518448142.65 rows=3022 width=120)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=7300913868599.62..10510518448142.65 rows=3022 width=120)
                                      Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1630690485020.08..4839774021039.17 rows=1740 width=88)
                                            Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                                            ->  XN Subquery Scan t_c_firstyear  (cost=0.03..3208562493989.81 rows=1002 width=44)
                                                  ->  XN Append  (cost=0.03..3208562493979.79 rows=1002 width=160)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=3208562311649.33..3208562493979.71 rows=1000 width=160)
                                                              ->  XN HashAggregate  (cost=3208562311649.33..3208562493969.71 rows=1000 width=160)
                                                                    Filter: (sum(((cs_ext_sales_price + ((cs_ext_list_price - cs_ext_wholesale_cost) - cs_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=87489605.21..3208562145903.53 rows=6629832 width=160)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                          ->  XN Hash  (cost=87472894.41..87472894.41 rows=6684320 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..87472894.41 rows=6684320 width=40)
                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1424426646 width=40)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2001)
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                            ->  XN Hash  (cost=1630690485015.04..1630690485015.04 rows=1002 width=44)
                                                  ->  XN Subquery Scan t_w_firstyear  (cost=0.03..1630690485015.04 rows=1002 width=44)
                                                        ->  XN Append  (cost=0.03..1630690485005.02 rows=1002 width=160)
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                                              ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=1630690391887.28..1630690485004.94 rows=1000 width=160)
                                                                    ->  XN HashAggregate  (cost=1630690391887.28..1630690484994.94 rows=1000 width=160)
                                                                          Filter: (sum(((ws_ext_sales_price + ((ws_ext_list_price - ws_ext_wholesale_cost) - ws_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=71443386.63..1630690307243.96 rows=3385733 width=160)
                                                                                Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                                ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                                ->  XN Hash  (cost=71434893.83..71434893.83 rows=3397121 width=40)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..71434893.83 rows=3397121 width=40)
                                                                                            Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=40)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 2001)
                                      ->  XN Hash  (cost=5670223383574.53..5670223383574.53 rows=1002 width=44)
                                            ->  XN Subquery Scan t_s_firstyear  (cost=5670223074530.38..5670223383574.53 rows=1002 width=44)
                                                  ->  XN Append  (cost=5670223074530.38..5670223383564.51 rows=1002 width=160)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=5670223074530.38..5670223383564.43 rows=1000 width=160)
                                                              ->  XN HashAggregate  (cost=5670223074530.38..5670223383554.43 rows=1000 width=160)
                                                                    Filter: (sum(((ss_ext_sales_price + ((ss_ext_list_price - ss_ext_wholesale_cost) - ss_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=116931227.06..5670222793599.43 rows=11237238 width=160)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                          ->  XN Hash  (cost=116901695.26..116901695.26 rows=11812717 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..116901695.26 rows=11812717 width=40)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2622621955 width=40)
                                                                                            Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2001)
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
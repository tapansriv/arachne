XN Limit  (cost=12739787665750.19..12739787665750.44 rows=100 width=128)
  ->  XN Merge  (cost=12739787665750.19..12740264642682.67 rows=190790772993 width=128)
        Merge Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
        ->  XN Network  (cost=12739787665750.19..12740264642682.67 rows=190790772993 width=128)
              Send to leader
              ->  XN Sort  (cost=12739787665750.19..12740264642682.67 rows=190790772993 width=128)
                    Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
                    ->  XN Hash Join DS_BCAST_INNER  (cost=9735199542713.82..11704039961352.79 rows=190790772993 width=128)
                          Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                          Join Filter: (CASE WHEN ("inner".year_total > 0::double precision) THEN (("outer".year_total * 1::double precision) / "inner".year_total) ELSE 0::double precision END < CASE WHEN ("inner".year_total > 0::double precision) THEN (("outer".year_total * 1::double precision) / "inner".year_total) ELSE 0::double precision END)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=4867339451432.29..6704023719268.74 rows=65928995339 width=176)
                                Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                                ->  XN Subquery Scan t_s_secyear  (cost=3780188326437.29..3780188607368.29 rows=11237239 width=140)
                                      ->  XN Append  (cost=3780188326437.29..3780188494995.90 rows=11237239 width=144)
                                            ->  XN Subquery Scan "*SELECT* 1"  (cost=3780188326437.29..3780188494995.86 rows=11237238 width=144)
                                                  ->  XN HashAggregate  (cost=3780188326437.29..3780188382623.48 rows=11237238 width=144)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=116931227.06..3780188073599.44 rows=11237238 width=144)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                              ->  XN Hash  (cost=116901695.26..116901695.26 rows=11812717 width=24)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..116901695.26 rows=11812717 width=24)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2622621955 width=24)
                                                                                Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL))
                                                                          ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                      Filter: (d_year = 2002)
                                            ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                  ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                        ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                              ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                    Distribute Round Robin
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          One-Time Filter: false
                                ->  XN Hash  (cost=1087151108066.33..1087151108066.33 rows=3385734 width=44)
                                      ->  XN Subquery Scan t_w_secyear  (cost=0.03..1087151108066.33 rows=3385734 width=44)
                                            ->  XN Append  (cost=0.03..1087151074208.99 rows=3385734 width=144)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=1087151023422.95..1087151074208.95 rows=3385733 width=144)
                                                        ->  XN HashAggregate  (cost=1087151023422.95..1087151040351.62 rows=3385733 width=144)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=71443386.63..1087150947243.96 rows=3385733 width=144)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                    ->  XN Hash  (cost=71434893.83..71434893.83 rows=3397121 width=24)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..71434893.83 rows=3397121 width=24)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=24)
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                            Filter: (d_year = 2002)
                          ->  XN Hash  (cost=4867860091277.19..4867860091277.19 rows=1737 width=80)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=3780188495020.94..4867860091277.19 rows=1737 width=80)
                                      Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                                      ->  XN Subquery Scan t_w_firstyear  (cost=0.03..1087151074229.00 rows=1001 width=44)
                                            ->  XN Append  (cost=0.03..1087151074218.99 rows=1001 width=144)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=1087151031887.28..1087151074218.95 rows=1000 width=144)
                                                        ->  XN HashAggregate  (cost=1087151031887.28..1087151074208.95 rows=1000 width=144)
                                                              Filter: (sum((ws_ext_list_price - ws_ext_discount_amt)) > 0::double precision)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=71443386.63..1087150947243.96 rows=3385733 width=144)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                    ->  XN Hash  (cost=71434893.83..71434893.83 rows=3397121 width=24)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..71434893.83 rows=3397121 width=24)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=24)
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                            Filter: (d_year = 2001)
                                      ->  XN Hash  (cost=3780188495015.91..3780188495015.91 rows=1001 width=44)
                                            ->  XN Subquery Scan t_s_firstyear  (cost=3780188354530.38..3780188495015.91 rows=1001 width=44)
                                                  ->  XN Append  (cost=3780188354530.38..3780188495005.90 rows=1001 width=144)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=3780188354530.38..3780188495005.86 rows=1000 width=144)
                                                              ->  XN HashAggregate  (cost=3780188354530.38..3780188494995.86 rows=1000 width=144)
                                                                    Filter: (sum((ss_ext_list_price - ss_ext_discount_amt)) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=116931227.06..3780188073599.44 rows=11237238 width=144)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=128)
                                                                          ->  XN Hash  (cost=116901695.26..116901695.26 rows=11812717 width=24)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..116901695.26 rows=11812717 width=24)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2622621955 width=24)
                                                                                            Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2001)
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
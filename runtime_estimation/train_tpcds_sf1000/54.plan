XN Limit  (cost=1001381939914.94..1001381939915.19 rows=100 width=4)
  ->  XN Merge  (cost=1001381939914.94..1001381939915.44 rows=200 width=4)
        Merge Key: segment, count(*), (segment * 50)
        ->  XN Network  (cost=1001381939914.94..1001381939915.44 rows=200 width=4)
              Send to leader
              ->  XN Sort  (cost=1001381939914.94..1001381939915.44 rows=200 width=4)
                    Sort Key: segment, count(*), (segment * 50)
                    ->  XN HashAggregate  (cost=1381939906.29..1381939907.29 rows=200 width=4)
                          ->  XN Subquery Scan segments  (cost=1381939901.29..1381939905.29 rows=200 width=4)
                                ->  XN HashAggregate  (cost=1381939901.29..1381939903.29 rows=200 width=12)
                                      InitPlan
                                        ->  XN Unique  (cost=0.00..1095.88 rows=1 width=4)
                                              ->  XN Seq Scan on date_dim  (cost=0.00..1095.81 rows=29 width=4)
                                                    Filter: ((d_year = 1998) AND (d_moy = 12))
                                        ->  XN Unique  (cost=0.00..1095.88 rows=1 width=4)
                                              ->  XN Seq Scan on date_dim  (cost=0.00..1095.81 rows=29 width=4)
                                                    Filter: ((d_year = 1998) AND (d_moy = 12))
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1211457842.75..1381937707.10 rows=486 width=12)
                                            Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1096.65..105629068.29 rows=12531752 width=12)
                                                  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                  ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2622621955 width=16)
                                                        Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=1095.73..1095.73 rows=366 width=4)
                                                        ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=366 width=4)
                                                              Filter: ((d_month_seq <= $0) AND (d_month_seq >= $1))
                                            ->  XN Hash  (cost=1211456744.87..1211456744.87 rows=489 width=4)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=506342741.33..1211456744.87 rows=489 width=4)
                                                        Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=14.97..322973649.61 rows=1306792 width=4)
                                                              Hash Cond: ((("outer".ca_county)::text = ("inner".s_county)::text) AND (("outer".ca_state)::text = ("inner".s_state)::text))
                                                              ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=5651763 width=27)
                                                                    Filter: ((ca_state IS NOT NULL) AND (ca_county IS NOT NULL))
                                                              ->  XN Hash  (cost=10.02..10.02 rows=991 width=24)
                                                                    ->  XN Seq Scan on store  (cost=0.00..10.02 rows=991 width=24)
                                                                          Filter: ((s_county IS NOT NULL) AND (s_state IS NOT NULL))
                                                        ->  XN Hash  (cost=506342720.43..506342720.43 rows=2369 width=8)
                                                              ->  XN Subquery Scan my_customers  (cost=192512661.20..506342720.43 rows=2369 width=8)
                                                                    ->  XN Unique  (cost=192512661.20..506342696.74 rows=2369 width=8)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=192512661.20..506342684.89 rows=2369 width=8)
                                                                                Hash Cond: ("outer".c_customer_sk = "inner".customer_sk)
                                                                                ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=8)
                                                                                ->  XN Hash  (cost=192512655.26..192512655.26 rows=2376 width=4)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=5597.83..192512655.26 rows=2376 width=4)
                                                                                            Hash Cond: ("outer".item_sk = "inner".i_item_sk)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..95288848.94 rows=856913 width=8)
                                                                                                  Hash Cond: ("outer".sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Subquery Scan cs_or_ws_sales  (cost=0.00..64799424.00 rows=2159980800 width=12)
                                                                                                        ->  XN Multi Scan  (cost=0.00..43199616.00 rows=2159980800 width=12)
                                                                                                              ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1439980416 width=12)
                                                                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=12)
                                                                                                  ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                                              Filter: ((d_year = 1998) AND (d_moy = 12))
                                                                                            ->  XN Hash  (cost=4500.00..4500.00 rows=810 width=4)
                                                                                                  ->  XN Seq Scan on item  (cost=0.00..4500.00 rows=810 width=4)
                                                                                                        Filter: (((i_class)::text = 'maternity'::text) AND ((i_category)::text = 'Women'::text))
XN Limit  (cost=1056973758828.40..1056973758828.65 rows=100 width=133)
  ->  XN Merge  (cost=1056973758828.40..1056973794827.59 rows=14399676 width=133)
        Merge Key: count(*), item.i_item_desc, warehouse.w_warehouse_name, d1.d_week_seq
        ->  XN Network  (cost=1056973758828.40..1056973794827.59 rows=14399676 width=133)
              Send to leader
              ->  XN Sort  (cost=1056973758828.40..1056973794827.59 rows=14399676 width=133)
                    Sort Key: count(*), item.i_item_desc, warehouse.w_warehouse_name, d1.d_week_seq
                    ->  XN HashAggregate  (cost=56971938742.97..56972046740.54 rows=14399676 width=133)
                          ->  XN Hash Right Join DS_DIST_NONE  (cost=56937883510.79..56971722747.83 rows=14399676 width=133)
                                Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                ->  XN Seq Scan on catalog_returns  (cost=0.00..1439967.52 rows=143996752 width=8)
                                ->  XN Hash  (cost=56937833193.22..56937833193.22 rows=10063515 width=141)
                                      ->  XN Hash Left Join DS_BCAST_INNER  (cost=56707916502.23..56937833193.22 rows=10063515 width=141)
                                            Hash Cond: ("outer".cs_promo_sk = "inner".p_promo_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=56707916483.48..56757608146.26 rows=10063515 width=141)
                                                  Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=56707916483.23..56750981716.94 rows=10063514 width=125)
                                                        Hash Cond: (("outer".inv_item_sk = "inner".cs_item_sk) AND ("outer".inv_date_sk = "inner".d_date_sk))
                                                        Join Filter: ("inner".cs_quantity > "outer".inv_quantity_on_hand)
                                                        ->  XN Seq Scan on inventory  (cost=0.00..7830000.00 rows=783000000 width=16)
                                                        ->  XN Hash  (cost=56707913933.09..56707913933.09 rows=510029 width=133)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=56707899082.73..56707913933.09 rows=510029 width=133)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=109)
                                                                    ->  XN Hash  (cost=56707897840.80..56707897840.80 rows=496771 width=24)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=69033638.14..56707897840.80 rows=496771 width=24)
                                                                                Hash Cond: ("outer".cs_ship_date_sk = "inner".d_date_sk)
                                                                                Join Filter: ("inner".d_date > date_add('day'::text, 5::bigint, ("outer".d_date)::timestamp without time zone))
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=69032725.03..45020012110.89 rows=1498935 width=32)
                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=25023.23..44356176788.52 rows=44759099 width=24)
                                                                                            Hash Cond: ("outer".cs_bill_hdemo_sk = "inner".hd_demo_sk)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=24930.23..44205727022.27 rows=261425878 width=28)
                                                                                                  Hash Cond: ("outer".cs_bill_cdemo_sk = "inner".cd_demo_sk)
                                                                                                  ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1411842328 width=32)
                                                                                                        Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_ship_date_sk IS NOT NULL) AND (cs_bill_hdemo_sk IS NOT NULL) AND (cs_bill_cdemo_sk IS NOT NULL))
                                                                                                  ->  XN Hash  (cost=24010.00..24010.00 rows=368092 width=4)
                                                                                                        ->  XN Seq Scan on customer_demographics  (cost=0.00..24010.00 rows=368092 width=4)
                                                                                                              Filter: ((cd_marital_status)::text = 'D'::text)
                                                                                            ->  XN Hash  (cost=90.00..90.00 rows=1201 width=4)
                                                                                                  ->  XN Seq Scan on household_demographics  (cost=0.00..90.00 rows=1201 width=4)
                                                                                                        Filter: ((hd_buy_potential)::text = '>10000'::text)
                                                                                      ->  XN Hash  (cost=69007695.64..69007695.64 rows=2463 width=16)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..69007695.64 rows=2463 width=16)
                                                                                                  Hash Cond: ("outer".d_week_seq = "inner".d_week_seq)
                                                                                                  ->  XN Seq Scan on date_dim d2  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                  ->  XN Hash  (cost=913.11..913.11 rows=345 width=12)
                                                                                                        ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=345 width=12)
                                                                                                              Filter: (d_year = 1999)
                                                                                ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                      ->  XN Seq Scan on date_dim d3  (cost=0.00..730.49 rows=73049 width=8)
                                                  ->  XN Hash  (cost=0.20..0.20 rows=20 width=24)
                                                        ->  XN Seq Scan on warehouse  (cost=0.00..0.20 rows=20 width=24)
                                            ->  XN Hash  (cost=15.00..15.00 rows=1500 width=4)
                                                  ->  XN Seq Scan on promotion  (cost=0.00..15.00 rows=1500 width=4)
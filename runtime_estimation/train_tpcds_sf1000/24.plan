XN Merge  (cost=1141525276354.92..1141525276383.02 rows=1000 width=34)
  Merge Key: customer.c_last_name, customer.c_first_name, store.s_store_name
  InitPlan
    ->  XN Aggregate  (cost=79497914144.92..79497914144.92 rows=1 width=8)
          ->  XN Subquery Scan ssales_1  (cost=79497906891.34..79497912935.99 rows=483572 width=8)
                ->  XN HashAggregate  (cost=79497906891.34..79497908100.27 rows=483572 width=83)
                      ->  XN Hash Join DS_DIST_NONE  (cost=79454529287.09..79497893593.11 rows=483572 width=83)
                            Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".i_item_sk = "inner".ss_item_sk))
                            ->  XN Hash Join DS_DIST_NONE  (cost=3750.00..12320639.51 rows=295689679 width=49)
                                  Hash Cond: ("outer".sr_item_sk = "inner".i_item_sk)
                                  ->  XN Seq Scan on store_returns store_returns_1  (cost=0.00..2879997.76 rows=287999776 width=8)
                                  ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=41)
                                        ->  XN Seq Scan on item item_1  (cost=0.00..3000.00 rows=300000 width=41)
                            ->  XN Hash  (cost=79454500936.22..79454500936.22 rows=4920175 width=54)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=26212707468.85..79454500936.22 rows=4920175 width=54)
                                        Hash Cond: (("outer".ss_customer_sk = "inner".c_customer_sk) AND ("outer".ss_store_sk = "inner".s_store_sk))
                                        ->  XN Seq Scan on store_sales store_sales_1  (cost=0.00..28799879.68 rows=2625335929 width=24)
                                              Filter: ((ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                        ->  XN Hash  (cost=26212706994.32..26212706994.32 rows=94906 width=46)
                                              ->  XN Hash Join DS_BCAST_INNER  (cost=30955564.22..26212706994.32 rows=94906 width=46)
                                                    Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                    Join Filter: (("outer".c_birth_country)::text <> upper(("inner".ca_country)::text))
                                                    ->  XN Seq Scan on customer customer_1  (cost=0.00..120000.00 rows=12000000 width=39)
                                                    ->  XN Hash  (cost=30955438.35..30955438.35 rows=50349 width=44)
                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=12.74..30955438.35 rows=50349 width=44)
                                                                Hash Cond: (("outer".ca_zip)::text = ("inner".s_zip)::text)
                                                                ->  XN Seq Scan on customer_address customer_address_1  (cost=0.00..60000.00 rows=5821530 width=36)
                                                                      Filter: (ca_zip IS NOT NULL)
                                                                ->  XN Hash  (cost=12.53..12.53 rows=84 width=26)
                                                                      ->  XN Seq Scan on store store_1  (cost=0.00..12.53 rows=84 width=26)
                                                                            Filter: ((s_market_id = 8) AND (s_zip IS NOT NULL))
  ->  XN Network  (cost=1062027362209.99..1062027362238.10 rows=11242 width=34)
        Send to leader
        ->  XN Sort  (cost=1062027362209.99..1062027362238.10 rows=11242 width=34)
              Sort Key: customer.c_last_name, customer.c_first_name, store.s_store_name
              ->  XN HashAggregate  (cost=62027361369.28..62027361453.60 rows=11242 width=34)
                    Filter: ($0 < sum(ss_net_paid))
                    ->  XN Hash Join DS_DIST_NONE  (cost=20173574336.01..62027361228.76 rows=11242 width=34)
                          Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_item_sk = "inner".i_item_sk))
                          ->  XN Hash Join DS_BCAST_INNER  (cost=20164107468.85..62017180936.22 rows=4920175 width=42)
                                Hash Cond: (("outer".ss_customer_sk = "inner".c_customer_sk) AND ("outer".ss_store_sk = "inner".s_store_sk))
                                ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2625335929 width=24)
                                      Filter: ((ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                ->  XN Hash  (cost=20164106994.32..20164106994.32 rows=94906 width=34)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=24235564.22..20164106994.32 rows=94906 width=34)
                                            Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                            Join Filter: (("outer".c_birth_country)::text <> upper(("inner".ca_country)::text))
                                            ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=39)
                                            ->  XN Hash  (cost=24235438.35..24235438.35 rows=50349 width=32)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=12.74..24235438.35 rows=50349 width=32)
                                                        Hash Cond: (("outer".ca_zip)::text = ("inner".s_zip)::text)
                                                        ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=5821530 width=30)
                                                              Filter: (ca_zip IS NOT NULL)
                                                        ->  XN Hash  (cost=12.53..12.53 rows=84 width=20)
                                                              ->  XN Seq Scan on store  (cost=0.00..12.53 rows=84 width=20)
                                                                    Filter: ((s_market_id = 8) AND (s_zip IS NOT NULL))
                          ->  XN Hash  (cost=9432498.16..9432498.16 rows=6873800 width=12)
                                ->  XN Hash Join DS_DIST_NONE  (cost=3767.43..9432498.16 rows=6873800 width=12)
                                      Hash Cond: ("outer".sr_item_sk = "inner".i_item_sk)
                                      ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=287999776 width=8)
                                      ->  XN Hash  (cost=3750.00..3750.00 rows=6974 width=4)
                                            ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=6974 width=4)
                                                  Filter: ((i_color)::text = 'peach'::text)
XN Limit  (cost=1859504175875.80..1859504175876.05 rows=100 width=49)
  ->  XN Merge  (cost=1859504175875.80..1859504175966.80 rows=36402 width=49)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
        ->  XN Network  (cost=1859504175875.80..1859504175966.80 rows=36402 width=49)
              Send to leader
              ->  XN Sort  (cost=1859504175875.80..1859504175966.80 rows=36402 width=49)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                    ->  XN HashAggregate  (cost=859504172572.00..859504173118.03 rows=36402 width=49)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=624034439800.24..859504171297.93 rows=36402 width=49)
                                Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                ->  XN HashAggregate  (cost=76888649.83..76888649.83 rows=4090694 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..76878423.10 rows=4090694 width=4)
                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2748508627 width=8)
                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                            ->  XN Hash  (cost=1278.36..1278.36 rows=114 width=4)
                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=114 width=4)
                                                        Filter: ((d_year = 2002) AND (d_moy <= 4) AND (d_moy >= 1))
                                ->  XN Hash  (cost=623957550869.77..623957550869.77 rows=112253 width=53)
                                      ->  XN Hash Right Join DS_DIST_OUTER  (cost=444323308672.07..623957550869.77 rows=112253 width=53)
                                            Outer Dist Key: derived_table2.rhs_col_1
                                            Hash Cond: ("outer".rhs_col_1 = "inner".c_customer_sk)
                                            Filter: (("inner".witness IS NOT NULL) OR ("outer".witness_1 IS NOT NULL))
                                            ->  XN Subquery Scan derived_table2  (cost=1278.64..29909350.46 rows=1122527 width=8)
                                                  ->  XN Unique  (cost=1278.64..29898125.19 rows=1122527 width=4)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..29892512.55 rows=1122527 width=4)
                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=8)
                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=114 width=4)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=114 width=4)
                                                                          Filter: ((d_year = 2002) AND (d_moy <= 4) AND (d_moy >= 1))
                                            ->  XN Hash  (cost=444323307140.65..444323307140.65 rows=101109 width=57)
                                                  ->  XN Hash Right Join DS_DIST_BOTH  (cost=24354367070.64..444323307140.65 rows=101109 width=57)
                                                        Outer Dist Key: derived_table1.rhs_col
                                                        Inner Dist Key: c.c_customer_sk
                                                        Hash Cond: ("outer".rhs_col = "inner".c_customer_sk)
                                                        ->  XN Subquery Scan derived_table1  (cost=1278.64..46033411.14 rows=2220082 width=8)
                                                              ->  XN Unique  (cost=1278.64..46011210.32 rows=2220082 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..46000109.91 rows=2220082 width=4)
                                                                          Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1431746103 width=8)
                                                                                Filter: (cs_sold_date_sk IS NOT NULL)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=114 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=114 width=4)
                                                                                      Filter: ((d_year = 2002) AND (d_moy <= 4) AND (d_moy >= 1))
                                                        ->  XN Hash  (cost=24354365539.22..24354365539.22 rows=101109 width=53)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=7085201310.12..24354365539.22 rows=101109 width=53)
                                                                    Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                    ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=53)
                                                                    ->  XN Hash  (cost=7085201040.30..7085201040.30 rows=107932 width=8)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=135147.60..7085201040.30 rows=107932 width=8)
                                                                                Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                                ->  XN Seq Scan on customer c  (cost=0.00..120000.00 rows=11585070 width=12)
                                                                                      Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                                ->  XN Hash  (cost=135000.00..135000.00 rows=59040 width=4)
                                                                                      ->  XN Seq Scan on customer_address ca  (cost=0.00..135000.00 rows=59040 width=4)
                                                                                            Filter: (((ca_county)::text = 'Jefferson County'::text) OR ((ca_county)::text = 'Dona Ana County'::text) OR ((ca_county)::text = 'La Porte County'::text) OR ((ca_county)::text = 'Rush County'::text) OR ((ca_county)::text = 'Toole County'::text))
XN Limit  (cost=1000246923669.31..1000246923669.56 rows=100 width=164)
  ->  XN Merge  (cost=1000246923669.31..1000246923681.44 rows=4853 width=164)
        Merge Key: item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name
        ->  XN Network  (cost=1000246923669.31..1000246923681.44 rows=4853 width=164)
              Send to leader
              ->  XN Sort  (cost=1000246923669.31..1000246923681.44 rows=4853 width=164)
                    Sort Key: item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name
                    ->  XN HashAggregate  (cost=246923335.80..246923372.19 rows=4853 width=164)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=246316500.85..246923250.87 rows=4853 width=164)
                                Hash Cond: ("outer".i_item_sk = "inner".sr_item_sk)
                                ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=129)
                                ->  XN Hash  (cost=246316500.84..246316500.84 rows=1 width=51)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=245956478.29..246316500.84 rows=1 width=51)
                                            Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                            ->  XN Seq Scan on store  (cost=0.00..10.02 rows=1002 width=31)
                                            ->  XN Hash  (cost=245956478.29..245956478.29 rows=1 width=28)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=181141155.53..245956478.29 rows=1 width=28)
                                                        Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_customer_sk = "inner".cs_bill_customer_sk) AND ("outer".ss_item_sk = "inner".cs_item_sk) AND ("outer".d_year = "inner".d_year))
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..64768988.40 rows=948603 width=24)
                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2505482151 width=24)
                                                                    Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=8)
                                                                    ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=29 width=8)
                                                                          Filter: ((d_year = 1999) AND (d_moy = 9))
                                                        ->  XN Hash  (cost=181139538.32..181139538.32 rows=52140 width=32)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=24635938.12..181139538.32 rows=52140 width=32)
                                                                    Hash Cond: (("outer".cs_bill_customer_sk = "inner".sr_customer_sk) AND ("outer".cs_item_sk = "inner".sr_item_sk))
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1280.93..156005979.01 rows=19956084 width=12)
                                                                          Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1424426646 width=16)
                                                                                Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=1030 width=4)
                                                                                ->  XN Seq Scan on date_dim d3  (cost=0.00..1278.36 rows=1030 width=4)
                                                                                      Filter: ((d_year = 2000) OR (d_year = 2001) OR (d_year = 1999))
                                                                    ->  XN Hash  (cost=24632628.60..24632628.60 rows=405717 width=20)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..24632628.60 rows=405717 width=20)
                                                                                Hash Cond: ("outer".sr_returned_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=267783602 width=20)
                                                                                      Filter: ((sr_returned_date_sk IS NOT NULL) AND (sr_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=8)
                                                                                      ->  XN Seq Scan on date_dim d2  (cost=0.00..1278.36 rows=115 width=8)
                                                                                            Filter: ((d_year = 1999) AND (d_moy >= 9) AND (d_moy <= 12))
XN HashAggregate  (cost=9669017441.42..9669017887.40 rows=29732 width=52)
  ->  XN Hash Join DS_BCAST_INNER  (cost=1470.77..9669013507.19 rows=314738 width=52)
        Hash Cond: ("outer".cs_catalog_page_sk = "inner".cp_catalog_page_sk)
        ->  XN Hash Join DS_BCAST_INNER  (cost=1095.77..69003159.07 rows=303366 width=36)
              Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
              ->  XN Subquery Scan salesreturns  (cost=0.00..47519315.04 rows=1583977168 width=40)
                    ->  XN Multi Scan  (cost=0.00..31679543.36 rows=1583977168 width=24)
                          ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1439980416 width=24)
                          ->  XN Seq Scan on catalog_returns  (cost=0.00..1439967.52 rows=143996752 width=24)
              ->  XN Hash  (cost=1095.73..1095.73 rows=14 width=4)
                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=14 width=4)
                          Filter: ((d_date >= '2000-08-23'::date) AND (d_date <= '2000-09-06'::date))
        ->  XN Hash  (cost=300.00..300.00 rows=30000 width=24)
              ->  XN Seq Scan on catalog_page  (cost=0.00..300.00 rows=30000 width=24)

XN HashAggregate  (cost=456994040.20..456994047.65 rows=497 width=52)
  ->  XN Hash Join DS_BCAST_INNER  (cost=1108.30..456986410.30 rows=610392 width=52)
        Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
        ->  XN Hash Join DS_BCAST_INNER  (cost=1095.77..136326642.26 rows=606737 width=36)
              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
              ->  XN Subquery Scan salesreturns  (cost=0.00..95039632.32 rows=3167987744 width=40)
                    ->  XN Multi Scan  (cost=0.00..63359754.88 rows=3167987744 width=24)
                          ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2879987968 width=24)
                          ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=287999776 width=24)
              ->  XN Hash  (cost=1095.73..1095.73 rows=14 width=4)
                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=14 width=4)
                          Filter: ((d_date >= '2000-08-23'::date) AND (d_date <= '2000-09-06'::date))
        ->  XN Hash  (cost=10.02..10.02 rows=1002 width=24)
              ->  XN Seq Scan on store  (cost=0.00..10.02 rows=1002 width=24)

XN Subquery Scan foo  (cost=512760853763117.56..512760853763118.81 rows=100 width=88)
  ->  XN Limit  (cost=512760853763117.56..512760853763117.81 rows=100 width=88)
        ->  XN Merge  (cost=512760853763117.56..512760853763118.06 rows=201 width=88)
              Merge Key: channel, id
              ->  XN Network  (cost=512760853763117.56..512760853763118.06 rows=201 width=88)
                    Send to leader
                    ->  XN Sort  (cost=512760853763117.56..512760853763118.06 rows=201 width=88)
                          Sort Key: channel, id
                          ->  XN Unique  (cost=170920284587726.81..511760853763109.88 rows=201 width=88)
                                ->  XN Append  (cost=170920284587726.81..511760853763107.38 rows=201 width=88)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=170920284587726.81..170920284587728.06 rows=100 width=88)
                                            ->  XN Limit  (cost=170920284587726.81..170920284587727.06 rows=100 width=88)
                                                  ->  XN Sort  (cost=170920284587726.81..170920284587727.88 rows=430 width=88)
                                                        Sort Key: channel, id
                                                        ->  XN Unique  (cost=169920284587699.41..169920284587708.00 rows=430 width=88)
                                                              ->  XN HashAggregate  (cost=169920284587699.41..169920284587702.62 rows=430 width=88)
                                                                    ->  XN Subquery Scan x  (cost=0.00..169920284587645.66 rows=4300 width=88)
                                                                          ->  XN Append  (cost=0.00..169920284587602.66 rows=4300 width=75)
                                                                                ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..10.02 rows=501 width=66)
                                                                                      ->  XN Seq Scan on volt_tt_618fe18465761  (cost=0.00..5.01 rows=501 width=66)
                                                                                ->  XN Subquery Scan "*SELECT* 2"  (cost=0.00..75.44 rows=3772 width=75)
                                                                                      ->  XN Seq Scan on volt_tt_618fe18461213  (cost=0.00..37.72 rows=3772 width=75)
                                                                                ->  XN Subquery Scan "*SELECT* 3"  (cost=169920284587516.50..169920284587517.19 rows=27 width=52)
                                                                                      ->  XN HashAggregate  (cost=169920284587516.50..169920284587516.91 rows=27 width=52)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1096.44..169920284587004.56 rows=40955 width=52)
                                                                                                  Hash Cond: ("outer".wsr_web_site_sk = "inner".web_site_sk)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1095.77..169920267303181.44 rows=151685 width=36)
                                                                                                        Hash Cond: ("outer".date_sk = "inner".d_date_sk)
                                                                                                        ->  XN Subquery Scan salesreturns  (cost=0.00..169920255720563.53 rows=792000423 width=40)
                                                                                                              ->  XN Append  (cost=0.00..169920247800559.31 rows=792000423 width=24)
                                                                                                                    ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..14400007.68 rows=720000384 width=24)
                                                                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=24)
                                                                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=1079962.80..169920233400551.62 rows=72000039 width=24)
                                                                                                                          ->  XN Hash Right Join DS_DIST_BOTH  (cost=1079962.80..169920232680551.25 rows=72000039 width=24)
                                                                                                                                Outer Dist Key: web_sales.ws_order_number
                                                                                                                                Inner Dist Key: web_returns.wr_order_number
                                                                                                                                Hash Cond: (("outer".ws_order_number = "inner".wr_order_number) AND ("outer".ws_item_sk = "inner".wr_item_sk))
                                                                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=12)
                                                                                                                                ->  XN Hash  (cost=719975.20..719975.20 rows=71997520 width=28)
                                                                                                                                      ->  XN Seq Scan on web_returns  (cost=0.00..719975.20 rows=71997520 width=28)
                                                                                                        ->  XN Hash  (cost=1095.73..1095.73 rows=14 width=4)
                                                                                                              ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=14 width=4)
                                                                                                                    Filter: ((d_date >= '2000-08-23'::date) AND (d_date <= '2000-09-06'::date))
                                                                                                  ->  XN Hash  (cost=0.54..0.54 rows=54 width=24)
                                                                                                        ->  XN Seq Scan on web_site  (cost=0.00..0.54 rows=54 width=24)
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=170920284587700.25..170920284587701.50 rows=100 width=56)
                                            ->  XN Limit  (cost=170920284587700.25..170920284587700.50 rows=100 width=56)
                                                  ->  XN Sort  (cost=170920284587700.25..170920284587700.75 rows=200 width=56)
                                                        Sort Key: channel, NULL::character varying
                                                        ->  XN Unique  (cost=169920284587688.59..169920284587692.59 rows=200 width=56)
                                                              ->  XN HashAggregate  (cost=169920284587688.59..169920284587690.09 rows=200 width=56)
                                                                    ->  XN Subquery Scan x  (cost=0.00..169920284587645.59 rows=4300 width=56)
                                                                          ->  XN Append  (cost=0.00..169920284587602.59 rows=4300 width=52)
                                                                                ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..10.02 rows=501 width=41)
                                                                                      ->  XN Seq Scan on volt_tt_618fe18465761  (cost=0.00..5.01 rows=501 width=41)
                                                                                ->  XN Subquery Scan "*SELECT* 2"  (cost=0.00..75.44 rows=3772 width=43)
                                                                                      ->  XN Seq Scan on volt_tt_618fe18461213  (cost=0.00..37.72 rows=3772 width=43)
                                                                                ->  XN Subquery Scan "*SELECT* 3"  (cost=169920284587516.50..169920284587517.12 rows=27 width=52)
                                                                                      ->  XN HashAggregate  (cost=169920284587516.50..169920284587516.84 rows=27 width=52)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1096.44..169920284587004.56 rows=40955 width=52)
                                                                                                  Hash Cond: ("outer".wsr_web_site_sk = "inner".web_site_sk)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1095.77..169920267303181.44 rows=151685 width=36)
                                                                                                        Hash Cond: ("outer".date_sk = "inner".d_date_sk)
                                                                                                        ->  XN Subquery Scan salesreturns  (cost=0.00..169920255720563.53 rows=792000423 width=40)
                                                                                                              ->  XN Append  (cost=0.00..169920247800559.31 rows=792000423 width=24)
                                                                                                                    ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..14400007.68 rows=720000384 width=24)
                                                                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=24)
                                                                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=1079962.80..169920233400551.62 rows=72000039 width=24)
                                                                                                                          ->  XN Hash Right Join DS_DIST_BOTH  (cost=1079962.80..169920232680551.25 rows=72000039 width=24)
                                                                                                                                Outer Dist Key: web_sales.ws_order_number
                                                                                                                                Inner Dist Key: web_returns.wr_order_number
                                                                                                                                Hash Cond: (("outer".ws_order_number = "inner".wr_order_number) AND ("outer".ws_item_sk = "inner".wr_item_sk))
                                                                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=12)
                                                                                                                                ->  XN Hash  (cost=719975.20..719975.20 rows=71997520 width=28)
                                                                                                                                      ->  XN Seq Scan on web_returns  (cost=0.00..719975.20 rows=71997520 width=28)
                                                                                                        ->  XN Hash  (cost=1095.73..1095.73 rows=14 width=4)
                                                                                                              ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=14 width=4)
                                                                                                                    Filter: ((d_date >= '2000-08-23'::date) AND (d_date <= '2000-09-06'::date))
                                                                                                  ->  XN Hash  (cost=0.54..0.54 rows=54 width=24)
                                                                                                        ->  XN Seq Scan on web_site  (cost=0.00..0.54 rows=54 width=24)
                                      ->  XN Network  (cost=169920284587677.84..169920284587677.84 rows=1 width=24)
                                            Distribute Round Robin
                                            ->  XN Subquery Scan "*SELECT* 3"  (cost=169920284587677.84..169920284587677.84 rows=1 width=24)
                                                  ->  XN Aggregate  (cost=169920284587677.84..169920284587677.84 rows=1 width=24)
                                                        ->  XN Subquery Scan x  (cost=0.00..169920284587645.59 rows=4300 width=24)
                                                              ->  XN Append  (cost=0.00..169920284587602.59 rows=4300 width=52)
                                                                    ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..10.02 rows=501 width=24)
                                                                          ->  XN Seq Scan on volt_tt_618fe18465761  (cost=0.00..5.01 rows=501 width=24)
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=0.00..75.44 rows=3772 width=24)
                                                                          ->  XN Seq Scan on volt_tt_618fe18461213  (cost=0.00..37.72 rows=3772 width=24)
                                                                    ->  XN Subquery Scan "*SELECT* 3"  (cost=169920284587516.50..169920284587517.12 rows=27 width=52)
                                                                          ->  XN HashAggregate  (cost=169920284587516.50..169920284587516.84 rows=27 width=52)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.44..169920284587004.56 rows=40955 width=52)
                                                                                      Hash Cond: ("outer".wsr_web_site_sk = "inner".web_site_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1095.77..169920267303181.44 rows=151685 width=36)
                                                                                            Hash Cond: ("outer".date_sk = "inner".d_date_sk)
                                                                                            ->  XN Subquery Scan salesreturns  (cost=0.00..169920255720563.53 rows=792000423 width=40)
                                                                                                  ->  XN Append  (cost=0.00..169920247800559.31 rows=792000423 width=24)
                                                                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..14400007.68 rows=720000384 width=24)
                                                                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=24)
                                                                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=1079962.80..169920233400551.62 rows=72000039 width=24)
                                                                                                              ->  XN Hash Right Join DS_DIST_BOTH  (cost=1079962.80..169920232680551.25 rows=72000039 width=24)
                                                                                                                    Outer Dist Key: web_sales.ws_order_number
                                                                                                                    Inner Dist Key: web_returns.wr_order_number
                                                                                                                    Hash Cond: (("outer".ws_order_number = "inner".wr_order_number) AND ("outer".ws_item_sk = "inner".wr_item_sk))
                                                                                                                    ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=12)
                                                                                                                    ->  XN Hash  (cost=719975.20..719975.20 rows=71997520 width=28)
                                                                                                                          ->  XN Seq Scan on web_returns  (cost=0.00..719975.20 rows=71997520 width=28)
                                                                                            ->  XN Hash  (cost=1095.73..1095.73 rows=14 width=4)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=14 width=4)
                                                                                                        Filter: ((d_date >= '2000-08-23'::date) AND (d_date <= '2000-09-06'::date))
                                                                                      ->  XN Hash  (cost=0.54..0.54 rows=54 width=24)
                                                                                            ->  XN Seq Scan on web_site  (cost=0.00..0.54 rows=54 width=24)
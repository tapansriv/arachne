XN HashAggregate  (cost=71001245074.36..71001245743.39 rows=267612 width=18)
  ->  XN Hash Join DS_BCAST_INNER  (cost=42945391.14..71001243067.27 rows=267612 width=18)
        Hash Cond: ("outer".ca_address_sk = "inner".wr_returning_addr_sk)
        ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=10)
        ->  XN Hash  (cost=42944651.99..42944651.99 rows=295659 width=16)
              ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..42944651.99 rows=295659 width=16)
                    Hash Cond: ("outer".wr_returned_date_sk = "inner".d_date_sk)
                    ->  XN Seq Scan on web_returns  (cost=0.00..719975.20 rows=65664498 width=20)
                          Filter: ((wr_returned_date_sk IS NOT NULL) AND (wr_returning_addr_sk IS NOT NULL))
                    ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                          ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                Filter: (2002 = d_year)

XN Limit  (cost=1924964822282.92..1924964822283.17 rows=100 width=155)
  ->  XN Merge  (cost=1924964822282.92..1924964822788.78 rows=202343 width=155)
        Merge Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date_sk, volt_tt_618fee33b97b4.col2
        ->  XN Network  (cost=1924964822282.92..1924964822788.78 rows=202343 width=155)
              Send to leader
              ->  XN Sort  (cost=1924964822282.92..1924964822788.78 rows=202343 width=155)
                    Sort Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date_sk, volt_tt_618fee33b97b4.col2
                    ->  XN Hash Join DS_BCAST_INNER  (cost=47450496217.74..924964804449.98 rows=202343 width=155)
                          Hash Cond: ("outer".c_customer_sk = "inner".wr_returning_customer_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=75764.88..36714351558.29 rows=579341 width=151)
                                Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=155)
                                ->  XN Hash  (cost=75000.00..75000.00 rows=305950 width=4)
                                      ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=305950 width=4)
                                            Filter: ((ca_state)::text = 'GA'::text)
                          ->  XN Hash  (cost=47450409942.87..47450409942.87 rows=4204000 width=12)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=47391484614.68..47450409942.87 rows=4204000 width=12)
                                      Hash Cond: (("outer".ca_state)::text = ("inner".ca_state)::text)
                                      Join Filter: ("inner".col0 < "outer".col2)
                                      ->  XN Seq Scan on volt_tt_618fee33b97b4  (cost=0.00..130243.68 rows=13024368 width=18)
                                      ->  XN Hash  (cost=47391484614.18..47391484614.18 rows=200 width=18)
                                            ->  XN Subquery Scan volt_dt_0  (cost=47391484611.18..47391484614.18 rows=200 width=18)
                                                  ->  XN HashAggregate  (cost=47391484611.18..47391484612.18 rows=200 width=18)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=47348527753.00..47391421551.19 rows=12611999 width=18)
                                                              Hash Cond: (("outer".ca_state)::text = ("inner".ca_state)::text)
                                                              ->  XN Seq Scan on volt_tt_618fee33b97b4  (cost=0.00..130243.68 rows=13024368 width=14)
                                                              ->  XN Hash  (cost=47348527752.50..47348527752.50 rows=200 width=10)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=47348524405.33..47348527752.50 rows=200 width=10)
                                                                          ->  XN Unique  (cost=47348524405.33..47348527750.50 rows=200 width=10)
                                                                                ->  XN Subquery Scan ctr1  (cost=47348524405.33..47348527081.46 rows=267613 width=10)
                                                                                      ->  XN HashAggregate  (cost=47348524405.33..47348524405.33 rows=267613 width=10)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=42945391.14..47348523067.27 rows=267613 width=10)
                                                                                                  Hash Cond: ("outer".ca_address_sk = "inner".wr_returning_addr_sk)
                                                                                                  ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=10)
                                                                                                  ->  XN Hash  (cost=42944651.99..42944651.99 rows=295659 width=8)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..42944651.99 rows=295659 width=8)
                                                                                                              Hash Cond: ("outer".wr_returned_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on web_returns  (cost=0.00..719975.20 rows=65664498 width=12)
                                                                                                                    Filter: ((wr_returned_date_sk IS NOT NULL) AND (wr_returning_addr_sk IS NOT NULL))
                                                                                                              ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                                          Filter: (d_year = 2002)
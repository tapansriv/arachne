XN Hash Left Join DS_BCAST_INNER  (cost=439890468856.61..440440938898.30 rows=12000000 width=12)
  Hash Cond: ("outer".oid = "inner".oid)
  Filter: ("inner".oid IS NULL)
  ->  XN Seq Scan on customer c  (cost=0.00..120000.00 rows=12000000 width=16)
  ->  XN Hash  (cost=439890468846.19..439890468846.19 rows=4169 width=4)
        ->  XN Subquery Scan volt_dt_0  (cost=439178425534.38..439890468846.19 rows=4169 width=4)
              ->  XN Unique  (cost=439178425534.38..439890468804.50 rows=4169 width=4)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=439178425534.38..439890468794.07 rows=4169 width=4)
                          Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                          ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                          ->  XN Hash  (cost=439178425523.26..439178425523.26 rows=4450 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=429110313476.70..439178425523.26 rows=4450 width=8)
                                      Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                      ->  XN Seq Scan on customer_address ca  (cost=0.00..105000.00 rows=560165 width=4)
                                            Filter: (((ca_state)::text = 'GA'::text) OR ((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'NM'::text))
                                      ->  XN Hash  (cost=429110313350.85..429110313350.85 rows=50340 width=12)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=420643162847.45..429110313350.85 rows=50340 width=12)
                                                  Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                  ->  XN Seq Scan on customer c  (cost=0.00..120000.00 rows=12000000 width=16)
                                                  ->  XN Hash  (cost=420643162715.15..420643162715.15 rows=52918 width=8)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=265859933021.05..420643162715.15 rows=52918 width=8)
                                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                              ->  XN HashAggregate  (cost=75161427.65..75161427.65 rows=3233584 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..75153343.69 rows=3233584 width=4)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2879987968 width=8)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
                                                                                      Filter: ((2001 = d_year) AND (d_moy <= 6) AND (d_moy >= 4))
                                                              ->  XN Hash  (cost=265784771077.31..265784771077.31 rows=206436 width=4)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=265784769012.95..265784771077.31 rows=206436 width=4)
                                                                          ->  XN HashAggregate  (cost=265784769012.95..265784769012.95 rows=206436 width=4)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=231063376432.50..265784768496.86 rows=206436 width=4)
                                                                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                      ->  XN Seq Scan on customer c  (cost=0.00..120000.00 rows=12000000 width=4)
                                                                                      ->  XN Hash  (cost=231063375889.98..231063375889.98 rows=217007 width=8)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=101693300.10..231063375889.98 rows=217007 width=8)
                                                                                                  Hash Cond: ("outer".ss_customer_sk = "inner".ws_bill_customer_sk)
                                                                                                  ->  XN HashAggregate  (cost=75161427.65..75161427.65 rows=3233584 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..75153343.69 rows=3233584 width=4)
                                                                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2879987968 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
                                                                                                                          Filter: ((2001 = d_year) AND (d_moy <= 6) AND (d_moy >= 4))
                                                                                                  ->  XN Hash  (cost=26529755.40..26529755.40 rows=846819 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..26529755.40 rows=846819 width=4)
                                                                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
                                                                                                                          Filter: ((2001 = d_year) AND (d_moy <= 6) AND (d_moy >= 4))

XN Hash Join DS_BCAST_INNER  (cost=1278.57..73508375.71 rows=3085962 width=4)
  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
  ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2748508627 width=8)
        Filter: (ss_sold_date_sk IS NOT NULL)
  ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
              Filter: ((2001 = d_year) AND (d_moy <= 6) AND (d_moy >= 4))

XN Limit  (cost=2442600453044.56..2442600453044.81 rows=100 width=37)
  ->  XN Merge  (cost=2442600453044.56..2442600453058.56 rows=5600 width=37)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
        ->  XN Network  (cost=2442600453044.56..2442600453058.56 rows=5600 width=37)
              Send to leader
              ->  XN Sort  (cost=2442600453044.56..2442600453058.56 rows=5600 width=37)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                    ->  XN HashAggregate  (cost=1442600452653.92..1442600452695.92 rows=5600 width=37)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1386748916388.43..1442600443955.60 rows=434916 width=37)
                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=41)
                                ->  XN Hash  (cost=1386748915224.86..1386748915224.86 rows=465429 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1001716188926.05..1386748915224.86 rows=465429 width=4)
                                            Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                            ->  XN HashAggregate  (cost=989663.30..989663.30 rows=5406423 width=4)
                                                  ->  XN Seq Scan on volt_tt_618ff24c76022  (cost=0.00..791730.64 rows=79173064 width=4)
                                            ->  XN Hash  (cost=1001715196625.63..1001715196625.63 rows=1054848 width=8)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=927171213543.41..1001715196625.63 rows=1054848 width=8)
                                                        Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                        ->  XN Hash Left Join DS_BCAST_INNER  (cost=927171107142.99..934495130506.70 rows=11933603 width=12)
                                                              Hash Cond: ("outer".oid = "inner".oid)
                                                              Filter: ("inner".oid IS NULL)
                                                              ->  XN Seq Scan on volt_tt_618ff24c62ea1  (cost=0.00..119336.03 rows=11933603 width=16)
                                                              ->  XN Hash  (cost=927171107004.22..927171107004.22 rows=55511 width=4)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=917666102537.21..927171107004.22 rows=55511 width=4)
                                                                          ->  XN Unique  (cost=917666102537.21..927171106449.11 rows=55511 width=4)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=917666102537.21..927171106310.33 rows=55511 width=4)
                                                                                      Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                      ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                                                                                      ->  XN Hash  (cost=917666102388.70..917666102388.70 rows=59406 width=8)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=686450632732.50..917666102388.70 rows=59406 width=8)
                                                                                                  Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                                                                  ->  XN HashAggregate  (cost=989663.30..989663.30 rows=5406423 width=4)
                                                                                                        ->  XN Seq Scan on volt_tt_618ff24c76022  (cost=0.00..791730.64 rows=79173064 width=4)
                                                                                                  ->  XN Hash  (cost=686449642916.81..686449642916.81 rows=60954 width=16)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=532514827059.76..686449642916.81 rows=60954 width=16)
                                                                                                              Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=106400.41..67220179546.37 rows=1015825 width=12)
                                                                                                                    Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                                                                    ->  XN Seq Scan on volt_tt_618ff24c62ea1  (cost=0.00..119336.03 rows=11492134 width=16)
                                                                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                                                                    ->  XN Hash  (cost=105000.00..105000.00 rows=560165 width=4)
                                                                                                                          ->  XN Seq Scan on customer_address ca  (cost=0.00..105000.00 rows=560165 width=4)
                                                                                                                                Filter: (((ca_state)::text = 'GA'::text) OR ((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'NM'::text))
                                                                                                              ->  XN Hash  (cost=532514718867.95..532514718867.95 rows=716557 width=4)
                                                                                                                    ->  XN Subquery Scan volt_dt_2  (cost=532514711702.38..532514718867.95 rows=716557 width=4)
                                                                                                                          ->  XN HashAggregate  (cost=532514711702.38..532514711702.38 rows=716557 width=4)
                                                                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=416323074239.35..532514709910.99 rows=716557 width=4)
                                                                                                                                      Hash Cond: ("outer".c_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                      ->  XN Seq Scan on volt_tt_618ff24c62ea1  (cost=0.00..119336.03 rows=11933603 width=4)
                                                                                                                                      ->  XN Hash  (cost=416323072423.86..416323072423.86 rows=726196 width=8)
                                                                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=43543517.38..416323072423.86 rows=726196 width=8)
                                                                                                                                                  Hash Cond: ("outer".ss_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                                  ->  XN HashAggregate  (cost=989663.30..989663.30 rows=5406423 width=4)
                                                                                                                                                        ->  XN Seq Scan on volt_tt_618ff24c76022  (cost=0.00..791730.64 rows=79173064 width=4)
                                                                                                                                                  ->  XN Hash  (cost=42549686.95..42549686.95 rows=1666854 width=4)
                                                                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..42549686.95 rows=1666854 width=4)
                                                                                                                                                              Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                                                                              ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1424954854 width=8)
                                                                                                                                                                    Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_ship_customer_sk IS NOT NULL))
                                                                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
                                                                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
                                                                                                                                                                          Filter: ((d_year = 2001) AND (d_moy <= 6) AND (d_moy >= 4))
                                                        ->  XN Hash  (cost=105000.00..105000.00 rows=560165 width=4)
                                                              ->  XN Seq Scan on customer_address ca  (cost=0.00..105000.00 rows=560165 width=4)
                                                                    Filter: (((ca_state)::text = 'GA'::text) OR ((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'NM'::text))
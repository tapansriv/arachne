XN Limit  (cost=2204161737621.37..2204161737621.62 rows=100 width=80)
  ->  XN Merge  (cost=2204161737621.37..2204161737623.89 rows=1011 width=80)
        Merge Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
        ->  XN Network  (cost=2204161737621.37..2204161737623.89 rows=1011 width=80)
              Send to leader
              ->  XN Sort  (cost=2204161737621.37..2204161737623.89 rows=1011 width=80)
                    Sort Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
                    ->  XN Window  (cost=1204161737545.63..1204161737570.91 rows=1011 width=80)
                          Partition: lochierarchy, CASE WHEN (g_class = 0) THEN i_category ELSE NULL::character varying END
                          Order: total_sum
                          ->  XN Sort  (cost=1204161737545.63..1204161737548.16 rows=1011 width=80)
                                Sort Key: lochierarchy, CASE WHEN (g_class = 0) THEN i_category ELSE NULL::character varying END, total_sum
                                ->  XN Network  (cost=96053920396.55..204161737495.18 rows=1011 width=80)
                                      Distribute
                                      ->  XN Subquery Scan results_rollup  (cost=96053920396.55..204161737495.18 rows=1011 width=80)
                                            ->  XN Unique  (cost=96053920396.55..204161737485.07 rows=1011 width=28)
                                                  ->  XN Append  (cost=96053920396.55..204161737469.90 rows=1011 width=28)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=96053920396.55..96053920409.05 rows=1000 width=28)
                                                              ->  XN HashAggregate  (cost=96053920396.55..96053920399.05 rows=1000 width=28)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=4846.52..96053896664.16 rows=3164319 width=28)
                                                                          Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..53791925.41 rows=3082025 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=16)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                      ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=313 width=4)
                                                                                            Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                          ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=24)
                                                                                ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=24)
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=72053912485.76..72053912485.88 rows=10 width=17)
                                                              ->  XN HashAggregate  (cost=72053912485.76..72053912485.78 rows=10 width=17)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=4846.52..72053896664.16 rows=3164319 width=17)
                                                                          Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..53791925.41 rows=3082025 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=16)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                      ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=313 width=4)
                                                                                            Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                          ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=13)
                                                                                ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=13)
                                                        ->  XN Network  (cost=36053904574.96..36053904574.97 rows=1 width=8)
                                                              Distribute Round Robin
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=36053904574.96..36053904574.97 rows=1 width=8)
                                                                    ->  XN Aggregate  (cost=36053904574.96..36053904574.96 rows=1 width=8)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=4846.52..36053896664.16 rows=3164319 width=8)
                                                                                Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..53791925.41 rows=3082025 width=12)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=16)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=313 width=4)
                                                                                                  Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                                ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=4)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=4)
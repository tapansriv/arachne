XN Limit  (cost=1000027943157.01..1000027943157.01 rows=3 width=48)
  ->  XN Merge  (cost=1000027943157.01..1000027943157.01 rows=3 width=48)
        Merge Key: warehouse.w_warehouse_name, item.i_item_id
        ->  XN Network  (cost=1000027943157.01..1000027943157.01 rows=3 width=48)
              Send to leader
              ->  XN Sort  (cost=1000027943157.01..1000027943157.01 rows=3 width=48)
                    Sort Key: warehouse.w_warehouse_name, item.i_item_id
                    ->  XN HashAggregate  (cost=27943156.77..27943156.98 rows=3 width=48)
                          Filter: ((CASE WHEN (sum(CASE WHEN (d_date < '2000-03-11'::date) THEN inv_quantity_on_hand ELSE 0 END) > 0) THEN (((sum(CASE WHEN (d_date >= '2000-03-11'::date) THEN inv_quantity_on_hand ELSE 0 END))::numeric * 1.000) / (sum(CASE WHEN (d_date < '2000-03-11'::date) THEN inv_quantity_on_hand ELSE 0 END))::numeric) ELSE NULL::numeric END <= 1.50000000000000000) AND (CASE WHEN (sum(CASE WHEN (d_date < '2000-03-11'::date) THEN inv_quantity_on_hand ELSE 0 END) > 0) THEN (((sum(CASE WHEN (d_date >= '2000-03-11'::date) THEN inv_quantity_on_hand ELSE 0 END))::numeric * 1.000) / (sum(CASE WHEN (d_date < '2000-03-11'::date) THEN inv_quantity_on_hand ELSE 0 END))::numeric) ELSE NULL::numeric END >= 0.66666666666666670))
                          ->  XN Hash Join DS_BCAST_INNER  (cost=26743156.22..27943156.70 rows=3 width=48)
                                Hash Cond: ("outer".w_warehouse_sk = "inner".inv_warehouse_sk)
                                ->  XN Seq Scan on warehouse  (cost=0.00..0.20 rows=20 width=24)
                                ->  XN Hash  (cost=26743156.21..26743156.21 rows=3 width=32)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=5595.88..26743156.21 rows=3 width=32)
                                            Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                            ->  XN Hash Join DS_DIST_NONE  (cost=4500.00..17622026.80 rows=2680 width=32)
                                                  Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                  ->  XN Seq Scan on inventory  (cost=0.00..7830000.00 rows=783000000 width=16)
                                                  ->  XN Hash  (cost=4500.00..4500.00 rows=1 width=24)
                                                        ->  XN Seq Scan on item  (cost=0.00..4500.00 rows=1 width=24)
                                                              Filter: ((i_current_price <= 1.49::double precision) AND (i_current_price >= 0.98999999999999999::double precision))
                                            ->  XN Hash  (cost=1095.73..1095.73 rows=57 width=8)
                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=57 width=8)
                                                        Filter: ((d_date >= '2000-02-10'::date) AND (d_date <= '2000-04-10'::date))
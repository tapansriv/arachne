XN Nested Loop DS_BCAST_INNER  (cost=4232714540.45..4233834540.60 rows=1 width=64)
  ->  XN Nested Loop DS_BCAST_INNER  (cost=3710886558.13..3711846558.26 rows=1 width=56)
        ->  XN Nested Loop DS_BCAST_INNER  (cost=3189058575.81..3189858575.92 rows=1 width=48)
              ->  XN Nested Loop DS_BCAST_INNER  (cost=2652707923.02..2653347923.11 rows=1 width=40)
                    ->  XN Nested Loop DS_BCAST_INNER  (cost=2116357270.22..2116837270.29 rows=1 width=32)
                          ->  XN Nested Loop DS_BCAST_INNER  (cost=1594529287.90..1594849287.95 rows=1 width=24)
                                ->  XN Nested Loop DS_BCAST_INNER  (cost=1072701305.58..1072861305.61 rows=1 width=16)
                                      ->  XN Subquery Scan s4  (cost=536350652.79..536350652.80 rows=1 width=8)
                                            ->  XN Aggregate  (cost=536350652.79..536350652.79 rows=1 width=0)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1497.88..536346898.95 rows=1501534 width=0)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1313.49..325351166.13 rows=6245915 width=4)
                                                              Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1300.65..309005876.26 rows=51680795 width=8)
                                                                    Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2510572799 width=12)
                                                                          Filter: ((ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                                          ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                                                Filter: ((t_hour = 10) AND (t_minute < 30))
                                                              ->  XN Hash  (cost=12.53..12.53 rows=126 width=4)
                                                                    ->  XN Seq Scan on store  (cost=0.00..12.53 rows=126 width=4)
                                                                          Filter: ((s_store_name)::text = 'ese'::text)
                                                        ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                                    Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
                                      ->  XN Subquery Scan s8  (cost=536350652.79..536350652.80 rows=1 width=8)
                                            ->  XN Aggregate  (cost=536350652.79..536350652.79 rows=1 width=0)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1497.88..536346898.95 rows=1501534 width=0)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1313.49..325351166.13 rows=6245915 width=4)
                                                              Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1300.65..309005876.26 rows=51680795 width=8)
                                                                    Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2510572799 width=12)
                                                                          Filter: ((ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                                          ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                                                Filter: ((t_hour = 12) AND (t_minute < 30))
                                                              ->  XN Hash  (cost=12.53..12.53 rows=126 width=4)
                                                                    ->  XN Seq Scan on store  (cost=0.00..12.53 rows=126 width=4)
                                                                          Filter: ((s_store_name)::text = 'ese'::text)
                                                        ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                                    Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
                                ->  XN Subquery Scan s3  (cost=521827982.32..521827982.33 rows=1 width=8)
                                      ->  XN Aggregate  (cost=521827982.32..521827982.32 rows=1 width=0)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1497.58..521824470.66 rows=1404661 width=0)
                                                  Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1313.19..310838773.24 rows=5842952 width=4)
                                                        Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1300.35..294572533.51 rows=48346550 width=8)
                                                              Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2510572799 width=12)
                                                                    Filter: ((ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                                                          Filter: ((t_hour = 9) AND (t_minute >= 30))
                                                        ->  XN Hash  (cost=12.53..12.53 rows=126 width=4)
                                                              ->  XN Seq Scan on store  (cost=0.00..12.53 rows=126 width=4)
                                                                    Filter: ((s_store_name)::text = 'ese'::text)
                                                  ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                                        ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                              Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
                          ->  XN Subquery Scan s7  (cost=521827982.32..521827982.33 rows=1 width=8)
                                ->  XN Aggregate  (cost=521827982.32..521827982.32 rows=1 width=0)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1497.58..521824470.66 rows=1404661 width=0)
                                            Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1313.19..310838773.24 rows=5842952 width=4)
                                                  Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1300.35..294572533.51 rows=48346550 width=8)
                                                        Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2510572799 width=12)
                                                              Filter: ((ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                                              ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                                                    Filter: ((t_hour = 11) AND (t_minute >= 30))
                                                  ->  XN Hash  (cost=12.53..12.53 rows=126 width=4)
                                                        ->  XN Seq Scan on store  (cost=0.00..12.53 rows=126 width=4)
                                                              Filter: ((s_store_name)::text = 'ese'::text)
                                            ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                                  ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                        Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
                    ->  XN Subquery Scan s2  (cost=536350652.79..536350652.80 rows=1 width=8)
                          ->  XN Aggregate  (cost=536350652.79..536350652.79 rows=1 width=0)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1497.88..536346898.95 rows=1501534 width=0)
                                      Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1313.49..325351166.13 rows=6245915 width=4)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1300.65..309005876.26 rows=51680795 width=8)
                                                  Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                  ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2510572799 width=12)
                                                        Filter: ((ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                        ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                              Filter: ((t_hour = 9) AND (t_minute < 30))
                                            ->  XN Hash  (cost=12.53..12.53 rows=126 width=4)
                                                  ->  XN Seq Scan on store  (cost=0.00..12.53 rows=126 width=4)
                                                        Filter: ((s_store_name)::text = 'ese'::text)
                                      ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                            ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                  Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
              ->  XN Subquery Scan s6  (cost=536350652.79..536350652.80 rows=1 width=8)
                    ->  XN Aggregate  (cost=536350652.79..536350652.79 rows=1 width=0)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1497.88..536346898.95 rows=1501534 width=0)
                                Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1313.49..325351166.13 rows=6245915 width=4)
                                      Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1300.65..309005876.26 rows=51680795 width=8)
                                            Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2510572799 width=12)
                                                  Filter: ((ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                            ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                  ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                        Filter: ((t_hour = 11) AND (t_minute < 30))
                                      ->  XN Hash  (cost=12.53..12.53 rows=126 width=4)
                                            ->  XN Seq Scan on store  (cost=0.00..12.53 rows=126 width=4)
                                                  Filter: ((s_store_name)::text = 'ese'::text)
                                ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                      ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                            Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
        ->  XN Subquery Scan s1  (cost=521827982.32..521827982.33 rows=1 width=8)
              ->  XN Aggregate  (cost=521827982.32..521827982.32 rows=1 width=0)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1497.58..521824470.66 rows=1404661 width=0)
                          Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1313.19..310838773.24 rows=5842952 width=4)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1300.35..294572533.51 rows=48346550 width=8)
                                      Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2510572799 width=12)
                                            Filter: ((ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                            ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                                  Filter: ((t_hour = 8) AND (t_minute >= 30))
                                ->  XN Hash  (cost=12.53..12.53 rows=126 width=4)
                                      ->  XN Seq Scan on store  (cost=0.00..12.53 rows=126 width=4)
                                            Filter: ((s_store_name)::text = 'ese'::text)
                          ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                      Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
  ->  XN Subquery Scan s5  (cost=521827982.32..521827982.33 rows=1 width=8)
        ->  XN Aggregate  (cost=521827982.32..521827982.32 rows=1 width=0)
              ->  XN Hash Join DS_BCAST_INNER  (cost=1497.58..521824470.66 rows=1404661 width=0)
                    Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1313.19..310838773.24 rows=5842952 width=4)
                          Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1300.35..294572533.51 rows=48346550 width=8)
                                Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2510572799 width=12)
                                      Filter: ((ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                      ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                            Filter: ((t_hour = 10) AND (t_minute >= 30))
                          ->  XN Hash  (cost=12.53..12.53 rows=126 width=4)
                                ->  XN Seq Scan on store  (cost=0.00..12.53 rows=126 width=4)
                                      Filter: ((s_store_name)::text = 'ese'::text)
                    ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                          ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
XN Nested Loop DS_BCAST_INNER  (cost=121095868.70..121255868.75 rows=1 width=16)
  ->  XN Subquery Scan all_sales  (cost=61148640.70..61148640.71 rows=1 width=8)
        ->  XN Aggregate  (cost=61148640.70..61148640.70 rows=1 width=8)
              ->  XN Hash Join DS_BCAST_INNER  (cost=60947544.57..61148640.69 rows=1 width=8)
                    Hash Cond: ("outer".d_date_sk = "inner".ss_sold_date_sk)
                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                          Filter: ((d_year = 1998) AND (d_moy = 11))
                    ->  XN Hash  (cost=60947544.57..60947544.57 rows=1 width=12)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=60823424.04..60947544.57 rows=1 width=12)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_DIST_NONE  (cost=60823411.52..60827531.55 rows=39 width=16)
                                      Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                      ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=29571 width=4)
                                            Filter: ((i_category)::text = 'Jewelry'::text)
                                      ->  XN Hash  (cost=60823410.57..60823410.57 rows=377 width=20)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=465000.03..60823410.57 rows=377 width=20)
                                                  Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                  ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2505482151 width=24)
                                                        Filter: ((ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=465000.02..465000.02 rows=2 width=4)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..465000.02 rows=2 width=4)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=8)
                                                              ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                          Filter: (ca_gmt_offset = -5::double precision)
                                ->  XN Hash  (cost=12.53..12.53 rows=1 width=4)
                                      ->  XN Seq Scan on store  (cost=0.00..12.53 rows=1 width=4)
                                            Filter: (s_gmt_offset = -5::double precision)
  ->  XN Subquery Scan promotional_sales  (cost=59947228.00..59947228.01 rows=1 width=8)
        ->  XN Aggregate  (cost=59947228.00..59947228.00 rows=1 width=8)
              ->  XN Hash Join DS_BCAST_INNER  (cost=59746131.88..59947228.00 rows=1 width=8)
                    Hash Cond: ("outer".d_date_sk = "inner".ss_sold_date_sk)
                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                          Filter: ((d_year = 1998) AND (d_moy = 11))
                    ->  XN Hash  (cost=59746131.88..59746131.88 rows=1 width=12)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=59506096.00..59746131.88 rows=1 width=12)
                                Hash Cond: ("outer".p_promo_sk = "inner".ss_promo_sk)
                                ->  XN Seq Scan on promotion  (cost=0.00..26.25 rows=769 width=4)
                                      Filter: (((p_channel_dmail)::text = 'Y'::text) OR ((p_channel_email)::text = 'Y'::text) OR ((p_channel_tv)::text = 'Y'::text))
                                ->  XN Hash  (cost=59506096.00..59506096.00 rows=1 width=16)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=59381975.52..59506096.00 rows=1 width=16)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Hash Join DS_DIST_NONE  (cost=59381963.00..59386083.00 rows=37 width=20)
                                                  Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                  ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=29571 width=4)
                                                        Filter: ((i_category)::text = 'Jewelry'::text)
                                                  ->  XN Hash  (cost=59381962.10..59381962.10 rows=359 width=24)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=465000.03..59381962.10 rows=359 width=24)
                                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2390166288 width=28)
                                                                    Filter: ((ss_promo_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=465000.02..465000.02 rows=2 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..465000.02 rows=2 width=4)
                                                                          Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=8)
                                                                          ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                      Filter: (ca_gmt_offset = -5::double precision)
                                            ->  XN Hash  (cost=12.53..12.53 rows=1 width=4)
                                                  ->  XN Seq Scan on store  (cost=0.00..12.53 rows=1 width=4)
                                                        Filter: (s_gmt_offset = -5::double precision)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
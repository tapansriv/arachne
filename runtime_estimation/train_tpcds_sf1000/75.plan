XN Limit  (cost=43991429504535.57..43991429504535.82 rows=100 width=56)
  ->  XN Merge  (cost=43991429504535.57..43991433910303.99 rows=1762307369 width=56)
        Merge Key: (curr_yr.sales_cnt - prev_yr.sales_cnt), (curr_yr.sales_amt - prev_yr.sales_amt)
        ->  XN Network  (cost=43991429504535.57..43991433910303.99 rows=1762307369 width=56)
              Send to leader
              ->  XN Sort  (cost=43991429504535.57..43991433910303.99 rows=1762307369 width=56)
                    Sort Key: (curr_yr.sales_cnt - prev_yr.sales_cnt), (curr_yr.sales_amt - prev_yr.sales_amt)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=40671971679277.27..42991158859781.34 rows=1762307369 width=56)
                          Hash Cond: (("outer".i_brand_id = "inner".i_brand_id) AND ("outer".i_category_id = "inner".i_category_id) AND ("outer".i_class_id = "inner".i_class_id) AND ("outer".i_manufact_id = "inner".i_manufact_id))
                          Join Filter: (((("outer".sales_cnt)::numeric)::numeric(17,2) / (("inner".sales_cnt)::numeric)::numeric(17,2)) < 0.900000000000000000)
                          ->  XN Subquery Scan curr_yr  (cost=20335985776639.38..20335985852238.49 rows=5039941 width=36)
                                ->  XN HashAggregate  (cost=20335985776639.38..20335985801839.08 rows=5039941 width=32)
                                      ->  XN Subquery Scan sales_detail  (cost=87730106.20..20335984894649.75 rows=50399407 width=32)
                                            ->  XN Unique  (cost=87730106.20..20335984390655.68 rows=50399407 width=44)
                                                  ->  XN Append  (cost=87730106.20..20335983508666.06 rows=50399407 width=44)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=87730106.20..95865922.73 rows=14399676 width=44)
                                                              ->  XN Hash Right Join DS_DIST_NONE  (cost=87730106.20..95721925.97 rows=14399676 width=44)
                                                                    Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                                                    ->  XN Seq Scan on catalog_returns  (cost=0.00..1439967.52 rows=143996752 width=20)
                                                                    ->  XN Hash  (cost=87726646.25..87726646.25 rows=691991 width=40)
                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=4739.21..87726646.25 rows=691991 width=40)
                                                                                Hash Cond: ("outer".cs_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..87564731.09 rows=6718667 width=24)
                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1431746103 width=24)
                                                                                            Filter: (cs_sold_date_sk IS NOT NULL)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2002)
                                                                                ->  XN Hash  (cost=3750.00..3750.00 rows=30095 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=30095 width=20)
                                                                                            Filter: ((i_category)::text = 'Books'::text)
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=118782443.80..135054431.21 rows=28799978 width=44)
                                                              ->  XN Hash Right Join DS_DIST_NONE  (cost=118782443.80..134766431.43 rows=28799978 width=44)
                                                                    Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                    ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=287999776 width=20)
                                                                    ->  XN Hash  (cost=118776068.53..118776068.53 rows=1275054 width=40)
                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=4739.21..118776068.53 rows=1275054 width=40)
                                                                                Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..118480948.80 rows=12379731 width=24)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2748508627 width=24)
                                                                                            Filter: (ss_sold_date_sk IS NOT NULL)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2002)
                                                                                ->  XN Hash  (cost=3750.00..3750.00 rows=30095 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=30095 width=20)
                                                                                            Filter: ((i_category)::text = 'Books'::text)
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=8498120402.60..20335752588312.12 rows=7199753 width=44)
                                                              ->  XN Hash Right Join DS_DIST_BOTH  (cost=8498120402.60..20335752516314.59 rows=7199753 width=44)
                                                                    Outer Dist Key: web_returns.wr_order_number
                                                                    Inner Dist Key: web_sales.ws_order_number
                                                                    Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                    ->  XN Seq Scan on web_returns  (cost=0.00..719975.20 rows=71997520 width=20)
                                                                    ->  XN Hash  (cost=8498118653.16..8498118653.16 rows=349888 width=40)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=4739.21..8498118653.16 rows=349888 width=40)
                                                                                Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..71434893.83 rows=3397121 width=24)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=24)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2002)
                                                                                ->  XN Hash  (cost=3750.00..3750.00 rows=30095 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=30095 width=20)
                                                                                            Filter: ((i_category)::text = 'Books'::text)
                          ->  XN Hash  (cost=20335985852238.49..20335985852238.49 rows=5039941 width=36)
                                ->  XN Subquery Scan prev_yr  (cost=20335985776639.38..20335985852238.49 rows=5039941 width=36)
                                      ->  XN HashAggregate  (cost=20335985776639.38..20335985801839.08 rows=5039941 width=32)
                                            ->  XN Subquery Scan sales_detail  (cost=87730106.20..20335984894649.75 rows=50399407 width=32)
                                                  ->  XN Unique  (cost=87730106.20..20335984390655.68 rows=50399407 width=44)
                                                        ->  XN Append  (cost=87730106.20..20335983508666.06 rows=50399407 width=44)
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=87730106.20..95865922.73 rows=14399676 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_NONE  (cost=87730106.20..95721925.97 rows=14399676 width=44)
                                                                          Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                                                          ->  XN Seq Scan on catalog_returns  (cost=0.00..1439967.52 rows=143996752 width=20)
                                                                          ->  XN Hash  (cost=87726646.25..87726646.25 rows=691991 width=40)
                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=4739.21..87726646.25 rows=691991 width=40)
                                                                                      Hash Cond: ("outer".cs_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..87564731.09 rows=6718667 width=24)
                                                                                            Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1431746103 width=24)
                                                                                                  Filter: (cs_sold_date_sk IS NOT NULL)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 2001)
                                                                                      ->  XN Hash  (cost=3750.00..3750.00 rows=30095 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=30095 width=20)
                                                                                                  Filter: ((i_category)::text = 'Books'::text)
                                                              ->  XN Subquery Scan "*SELECT* 2"  (cost=118782443.80..135054431.21 rows=28799978 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_NONE  (cost=118782443.80..134766431.43 rows=28799978 width=44)
                                                                          Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                          ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=287999776 width=20)
                                                                          ->  XN Hash  (cost=118776068.53..118776068.53 rows=1275054 width=40)
                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=4739.21..118776068.53 rows=1275054 width=40)
                                                                                      Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..118480948.80 rows=12379731 width=24)
                                                                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2748508627 width=24)
                                                                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 2001)
                                                                                      ->  XN Hash  (cost=3750.00..3750.00 rows=30095 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=30095 width=20)
                                                                                                  Filter: ((i_category)::text = 'Books'::text)
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=8498120402.60..20335752588312.12 rows=7199753 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_BOTH  (cost=8498120402.60..20335752516314.59 rows=7199753 width=44)
                                                                          Outer Dist Key: web_returns.wr_order_number
                                                                          Inner Dist Key: web_sales.ws_order_number
                                                                          Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                          ->  XN Seq Scan on web_returns  (cost=0.00..719975.20 rows=71997520 width=20)
                                                                          ->  XN Hash  (cost=8498118653.16..8498118653.16 rows=349888 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=4739.21..8498118653.16 rows=349888 width=40)
                                                                                      Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..71434893.83 rows=3397121 width=24)
                                                                                            Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=24)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 2001)
                                                                                      ->  XN Hash  (cost=3750.00..3750.00 rows=30095 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..3750.00 rows=30095 width=20)
                                                                                                  Filter: ((i_category)::text = 'Books'::text)
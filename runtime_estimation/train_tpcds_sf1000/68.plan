XN Limit  (cost=1043948125483.52..1043948125483.77 rows=100 width=167)
  ->  XN Merge  (cost=1043948125483.52..1043955825660.40 rows=3080070753 width=167)
        Merge Key: customer.c_last_name, dn.ss_ticket_number
        ->  XN Network  (cost=1043948125483.52..1043955825660.40 rows=3080070753 width=167)
              Send to leader
              ->  XN Sort  (cost=1043948125483.52..1043955825660.40 rows=3080070753 width=167)
                    Sort Key: customer.c_last_name, dn.ss_ticket_number
                    ->  XN Hash Join DS_BCAST_INNER  (cost=23668806321.56..43462701461.01 rows=3080070753 width=167)
                          Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                          Join Filter: (("outer".ca_city)::text <> ("inner".bought_city)::text)
                          ->  XN Seq Scan on customer_address current_addr  (cost=0.00..60000.00 rows=6000000 width=16)
                          ->  XN Hash  (cost=23668806292.10..23668806292.10 rows=11782 width=159)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=6036176174.29..23668806292.10 rows=11782 width=159)
                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                      ->  XN Seq Scan on customer  (cost=0.00..120000.00 rows=12000000 width=27)
                                      ->  XN Hash  (cost=6036176144.74..6036176144.74 rows=11818 width=140)
                                            ->  XN Subquery Scan dn  (cost=6036175937.93..6036176144.74 rows=11818 width=140)
                                                  ->  XN HashAggregate  (cost=6036175937.93..6036176026.56 rows=11818 width=48)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=285240612.93..6036175731.11 rows=11818 width=48)
                                                              Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                              ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=16)
                                                              ->  XN Hash  (cost=285240580.25..285240580.25 rows=13070 width=36)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1771.35..285240580.25 rows=13070 width=36)
                                                                          Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1658.85..69119143.72 rows=53037 width=40)
                                                                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1643.73..65002006.42 rows=1626303 width=44)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2395537598 width=48)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=1643.60..1643.60 rows=52 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1643.60 rows=52 width=4)
                                                                                                  Filter: (((d_year = 2000) OR (d_year = 2001) OR (d_year = 1999)) AND (d_dom <= 2) AND (d_dom >= 1))
                                                                                ->  XN Hash  (cost=15.03..15.03 rows=34 width=4)
                                                                                      ->  XN Seq Scan on store  (cost=0.00..15.03 rows=34 width=4)
                                                                                            Filter: (((s_city)::text = 'Fairview'::text) OR ((s_city)::text = 'Midway'::text))
                                                                          ->  XN Hash  (cost=108.00..108.00 rows=1801 width=4)
                                                                                ->  XN Seq Scan on household_demographics  (cost=0.00..108.00 rows=1801 width=4)
                                                                                      Filter: ((hd_vehicle_count = 3) OR (hd_dep_count = 4))
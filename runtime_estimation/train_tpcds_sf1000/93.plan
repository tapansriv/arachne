XN Limit  (cost=1000572449124.29..1000572449124.54 rows=100 width=20)
  ->  XN Merge  (cost=1000572449124.29..1000572469898.87 rows=8309834 width=20)
        Merge Key: sum(CASE WHEN (store_returns.sr_return_quantity IS NOT NULL) THEN (store_sales.ss_sales_price * ((store_sales.ss_quantity - store_returns.sr_return_quantity))::double precision) ELSE ((store_sales.ss_quantity)::double precision * store_sales.ss_sales_price) END), store_sales.ss_customer_sk
        ->  XN Network  (cost=1000572449124.29..1000572469898.87 rows=8309834 width=20)
              Send to leader
              ->  XN Sort  (cost=1000572449124.29..1000572469898.87 rows=8309834 width=20)
                    Sort Key: sum(CASE WHEN (store_returns.sr_return_quantity IS NOT NULL) THEN (store_sales.ss_sales_price * ((store_sales.ss_quantity - store_returns.sr_return_quantity))::double precision) ELSE ((store_sales.ss_quantity)::double precision * store_sales.ss_sales_price) END), store_sales.ss_customer_sk
                    ->  XN HashAggregate  (cost=571369411.43..571494058.94 rows=8309834 width=20)
                          ->  XN Hash Join DS_DIST_NONE  (cost=9730204.97..571327862.26 rows=8309834 width=20)
                                Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_item_sk = "inner".sr_item_sk))
                                ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2879987968 width=24)
                                ->  XN Hash  (cost=9686801.16..9686801.16 rows=8680762 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.82..9686801.16 rows=8680762 width=12)
                                            Hash Cond: ("outer".sr_reason_sk = "inner".r_reason_sk)
                                            ->  XN Seq Scan on store_returns  (cost=0.00..2879997.76 rows=287999776 width=16)
                                            ->  XN Hash  (cost=0.81..0.81 rows=2 width=4)
                                                  ->  XN Seq Scan on reason  (cost=0.00..0.81 rows=2 width=4)
                                                        Filter: ((r_reason_desc)::text = 'reason 28'::text)
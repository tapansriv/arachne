XN Seq Scan on item  (cost=0.00..5250.00 rows=6597 width=20)
  Filter: (((i_color)::text = 'slate'::text) OR ((i_color)::text = 'blanched'::text) OR ((i_color)::text = 'burnished'::text))

XN Limit  (cost=1004906745425.57..1004906745425.57 rows=3 width=40)
  ->  XN Merge  (cost=1004906745425.57..1004906745425.57 rows=3 width=40)
        Merge Key: sum(total_sales), i_item_id
        ->  XN Network  (cost=1004906745425.57..1004906745425.57 rows=3 width=40)
              Send to leader
              ->  XN Sort  (cost=1004906745425.57..1004906745425.57 rows=3 width=40)
                    Sort Key: sum(total_sales), i_item_id
                    ->  XN HashAggregate  (cost=4906745425.53..4906745425.54 rows=3 width=40)
                          ->  XN Subquery Scan tmp1  (cost=1660573236.96..4906745425.52 rows=3 width=40)
                                ->  XN Append  (cost=1660573236.96..4906745425.49 rows=3 width=28)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=1660573236.96..1660573236.97 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=1660573236.96..1660573236.96 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=65053137.27..1660573236.95 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=100.36..100.36 rows=7974 width=20)
                                                              ->  XN Seq Scan on volt_tt_618fef203a01b  (cost=0.00..80.29 rows=8029 width=20)
                                                        ->  XN Hash  (cost=65053036.90..65053036.90 rows=2 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=65046286.88..65053036.90 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=24)
                                                                    ->  XN Hash  (cost=65046286.88..65046286.88 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..65046286.88 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..61805186.12 rows=396 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2624824198 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=27 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=27 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 2))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=1630809131.39..1630809131.41 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=1630809131.39..1630809131.40 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=35649031.70..1630809131.39 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=100.36..100.36 rows=7974 width=20)
                                                              ->  XN Seq Scan on volt_tt_618fef203a01b  (cost=0.00..80.29 rows=8029 width=20)
                                                        ->  XN Hash  (cost=35648931.34..35648931.34 rows=1 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=35642181.32..35648931.34 rows=1 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=24)
                                                                    ->  XN Hash  (cost=35642181.31..35642181.31 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..35642181.31 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..32401082.70 rows=224 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14399804.16 rows=1424502104 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=27 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=27 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 2))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=1615363057.10..1615363057.11 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=1615363057.10..1615363057.10 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=19842957.41..1615363057.10 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=100.36..100.36 rows=7974 width=20)
                                                              ->  XN Seq Scan on volt_tt_618fef203a01b  (cost=0.00..80.29 rows=8029 width=20)
                                                        ->  XN Hash  (cost=19842857.04..19842857.04 rows=2 width=28)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=19636107.02..19842857.04 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=24)
                                                                    ->  XN Hash  (cost=19636107.02..19636107.02 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=76095.81..19636107.02 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=75000.00..16395009.78 rows=114 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=20)
                                                                                      ->  XN Hash  (cost=75000.00..75000.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..75000.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=27 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=27 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 2))
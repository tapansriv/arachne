XN Merge  (cost=4219957681467.55..4219957681474.25 rows=2680 width=115)
  Merge Key: ss1.ca_county
  ->  XN Network  (cost=4219957681467.55..4219957681474.25 rows=2680 width=115)
        Send to leader
        ->  XN Sort  (cost=4219957681467.55..4219957681474.25 rows=2680 width=115)
              Sort Key: ss1.ca_county
              ->  XN Hash Join DS_BCAST_INNER  (cost=3211929340273.19..3219957681314.96 rows=2680 width=115)
                    Hash Cond: ((("outer".ca_county)::text = ("inner".ca_county)::text) AND ("outer".d_qoy = "inner".d_qoy) AND ("outer".d_year = "inner".d_year))
                    Join Filter: (CASE WHEN ("inner".store_sales > 0::double precision) THEN (("outer".store_sales * 1::double precision) / "inner".store_sales) ELSE NULL::double precision END < CASE WHEN ("outer".web_sales > 0::double precision) THEN (("outer".web_sales * 1::double precision) / "outer".web_sales) ELSE NULL::double precision END)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=2377068842777.45..2383484103409.28 rows=7301 width=379)
                          Hash Cond: (("outer".d_year = "inner".d_year) AND (("outer".ca_county)::text = ("inner".ca_county)::text))
                          ->  XN Hash Join DS_BCAST_INNER  (cost=2137168599718.65..2141970811877.61 rows=2299 width=300)
                                Hash Cond: (("outer".d_year = "inner".d_year) AND (("outer".ca_county)::text = ("inner".ca_county)::text) AND ("outer".d_qoy = "inner".d_qoy))
                                Join Filter: (CASE WHEN ("outer".store_sales > 0::double precision) THEN (("outer".store_sales * 1::double precision) / "outer".store_sales) ELSE NULL::double precision END < CASE WHEN ("inner".web_sales > 0::double precision) THEN (("outer".web_sales * 1::double precision) / "inner".web_sales) ELSE NULL::double precision END)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1900025716965.16..1903233334476.52 rows=6337 width=229)
                                      Hash Cond: ((("outer".ca_county)::text = ("inner".ca_county)::text) AND ("outer".d_year = "inner".d_year))
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1074760740522.46..1076373790677.29 rows=2018 width=150)
                                            Hash Cond: (("outer".d_qoy = "inner".d_qoy) AND ("outer".d_year = "inner".d_year) AND (("outer".ca_county)::text = ("inner".ca_county)::text))
                                            ->  XN Subquery Scan ss3  (cost=834860497459.08..834860497481.99 rows=1833 width=79)
                                                  ->  XN HashAggregate  (cost=834860497459.08..834860497463.66 rows=1833 width=33)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=79048545.12..834860470502.10 rows=2695698 width=33)
                                                              Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                              ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=21)
                                                              ->  XN Hash  (cost=79041091.72..79041091.72 rows=2981361 width=20)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..79041091.72 rows=2981361 width=20)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2624824198 width=16)
                                                                                Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=12)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=12)
                                                                                      Filter: ((d_year = 2000) AND (d_qoy = 3))
                                            ->  XN Hash  (cost=239900243049.63..239900243049.63 rows=1833 width=79)
                                                  ->  XN Subquery Scan ws3  (cost=239900243026.72..239900243049.63 rows=1833 width=79)
                                                        ->  XN HashAggregate  (cost=239900243026.72..239900243031.30 rows=1833 width=33)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=33611812.92..239900234919.82 rows=810690 width=33)
                                                                    Hash Cond: ("outer".ca_address_sk = "inner".ws_bill_addr_sk)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=21)
                                                                    ->  XN Hash  (cost=33609671.25..33609671.25 rows=856666 width=20)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..33609671.25 rows=856666 width=20)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=16)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=12)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=12)
                                                                                            Filter: ((d_year = 2000) AND (d_qoy = 3))
                                      ->  XN Hash  (cost=825264976433.65..825264976433.65 rows=1812 width=79)
                                            ->  XN Subquery Scan ss2  (cost=825264976410.99..825264976433.65 rows=1812 width=79)
                                                  ->  XN HashAggregate  (cost=825264976410.99..825264976415.53 rows=1812 width=33)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=78848116.76..825264949763.88 rows=2664712 width=33)
                                                              Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                              ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=21)
                                                              ->  XN Hash  (cost=78840749.03..78840749.03 rows=2947092 width=20)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..78840749.03 rows=2947092 width=20)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2624824198 width=16)
                                                                                Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=12)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=12)
                                                                                      Filter: ((d_year = 2000) AND (d_qoy = 2))
                                ->  XN Hash  (cost=237142882739.90..237142882739.90 rows=1812 width=79)
                                      ->  XN Subquery Scan ws2  (cost=237142882717.25..237142882739.90 rows=1812 width=79)
                                            ->  XN HashAggregate  (cost=237142882717.25..237142882721.78 rows=1812 width=33)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=33411689.83..237142874703.54 rows=801371 width=33)
                                                        Hash Cond: ("outer".ca_address_sk = "inner".ws_bill_addr_sk)
                                                        ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=21)
                                                        ->  XN Hash  (cost=33409572.78..33409572.78 rows=846819 width=20)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..33409572.78 rows=846819 width=20)
                                                                    Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=16)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=12)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=12)
                                                                                Filter: ((d_year = 2000) AND (d_qoy = 2))
                          ->  XN Hash  (cost=239900243049.63..239900243049.63 rows=1833 width=79)
                                ->  XN Subquery Scan ws1  (cost=239900243026.72..239900243049.63 rows=1833 width=79)
                                      ->  XN HashAggregate  (cost=239900243026.72..239900243031.30 rows=1833 width=33)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=33611812.92..239900234919.82 rows=810690 width=33)
                                                  Hash Cond: ("outer".ca_address_sk = "inner".ws_bill_addr_sk)
                                                  ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=21)
                                                  ->  XN Hash  (cost=33609671.25..33609671.25 rows=856666 width=20)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..33609671.25 rows=856666 width=20)
                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7200003.84 rows=720000384 width=16)
                                                              ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=12)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=12)
                                                                          Filter: ((d_year = 2000) AND (d_qoy = 1))
                    ->  XN Hash  (cost=834860497481.99..834860497481.99 rows=1833 width=79)
                          ->  XN Subquery Scan ss1  (cost=834860497459.08..834860497481.99 rows=1833 width=79)
                                ->  XN HashAggregate  (cost=834860497459.08..834860497463.66 rows=1833 width=33)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=79048545.12..834860470502.10 rows=2695698 width=33)
                                            Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                            ->  XN Seq Scan on customer_address  (cost=0.00..60000.00 rows=6000000 width=21)
                                            ->  XN Hash  (cost=79041091.72..79041091.72 rows=2981361 width=20)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..79041091.72 rows=2981361 width=20)
                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28799879.68 rows=2624824198 width=16)
                                                              Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=12)
                                                              ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=12)
                                                                    Filter: ((d_year = 2000) AND (d_qoy = 1))
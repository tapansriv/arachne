XN Subquery Scan results_rollup  (cost=5000289244408.39..5000289244409.64 rows=100 width=136)
  ->  XN Limit  (cost=5000289244408.39..5000289244408.64 rows=100 width=70)
        ->  XN Merge  (cost=5000289244408.39..5000289244409.39 rows=401 width=70)
              Merge Key: qoh, i_product_name, i_brand, i_class, i_category
              ->  XN Network  (cost=5000289244408.39..5000289244409.39 rows=401 width=70)
                    Send to leader
                    ->  XN Sort  (cost=5000289244408.39..5000289244409.39 rows=401 width=70)
                          Sort Key: qoh, i_product_name, i_brand, i_class, i_category
                          ->  XN Append  (cost=1000057871561.58..4000289244391.05 rows=401 width=70)
                                ->  XN Subquery Scan "*SELECT* 1"  (cost=1000057871561.58..1000057871562.83 rows=100 width=70)
                                      ->  XN Limit  (cost=1000057871561.58..1000057871561.83 rows=100 width=70)
                                            ->  XN Sort  (cost=1000057871561.58..1000057872294.79 rows=293285 width=70)
                                                  Sort Key: avg(inventory.inv_quantity_on_hand), item.i_product_name, item.i_brand, item.i_class, item.i_category
                                                  ->  XN HashAggregate  (cost=57844195.24..57844928.45 rows=293285 width=70)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=4846.77..57801167.48 rows=3442221 width=70)
                                                              Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.77..57687559.52 rows=3352700 width=8)
                                                                    Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..55212123.52 rows=3352700 width=12)
                                                                          Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on inventory  (cost=0.00..7830000.00 rows=783000000 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=313 width=4)
                                                                                      Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                    ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                          ->  XN Seq Scan on warehouse  (cost=0.00..0.20 rows=20 width=4)
                                                              ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=70)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=70)
                                ->  XN Subquery Scan "*SELECT* 2"  (cost=1000057862956.03..1000057862957.28 rows=100 width=61)
                                      ->  XN Limit  (cost=1000057862956.03..1000057862956.28 rows=100 width=61)
                                            ->  XN Sort  (cost=1000057862956.03..1000057863689.24 rows=293285 width=61)
                                                  Sort Key: avg(inventory.inv_quantity_on_hand), item.i_product_name, item.i_brand, item.i_class
                                                  ->  XN HashAggregate  (cost=57835589.69..57836322.90 rows=293285 width=61)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=4846.77..57801167.48 rows=3442221 width=61)
                                                              Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.77..57687559.52 rows=3352700 width=8)
                                                                    Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..55212123.52 rows=3352700 width=12)
                                                                          Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on inventory  (cost=0.00..7830000.00 rows=783000000 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=313 width=4)
                                                                                      Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                    ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                          ->  XN Seq Scan on warehouse  (cost=0.00..0.20 rows=20 width=4)
                                                              ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=61)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=61)
                                ->  XN Subquery Scan "*SELECT* 3"  (cost=1000057854350.48..1000057854351.73 rows=100 width=50)
                                      ->  XN Limit  (cost=1000057854350.48..1000057854350.73 rows=100 width=50)
                                            ->  XN Sort  (cost=1000057854350.48..1000057855083.69 rows=293285 width=50)
                                                  Sort Key: avg(inventory.inv_quantity_on_hand), item.i_product_name, item.i_brand
                                                  ->  XN HashAggregate  (cost=57826984.13..57827717.35 rows=293285 width=50)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=4846.77..57801167.48 rows=3442221 width=50)
                                                              Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.77..57687559.52 rows=3352700 width=8)
                                                                    Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..55212123.52 rows=3352700 width=12)
                                                                          Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on inventory  (cost=0.00..7830000.00 rows=783000000 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=313 width=4)
                                                                                      Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                    ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                          ->  XN Seq Scan on warehouse  (cost=0.00..0.20 rows=20 width=4)
                                                              ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=50)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=50)
                                ->  XN Subquery Scan "*SELECT* 4"  (cost=1000057845744.92..1000057845746.17 rows=100 width=30)
                                      ->  XN Limit  (cost=1000057845744.92..1000057845745.17 rows=100 width=30)
                                            ->  XN Sort  (cost=1000057845744.92..1000057846478.14 rows=293285 width=30)
                                                  Sort Key: avg(inventory.inv_quantity_on_hand), item.i_product_name
                                                  ->  XN HashAggregate  (cost=57818378.58..57819111.80 rows=293285 width=30)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=4846.77..57801167.48 rows=3442221 width=30)
                                                              Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.77..57687559.52 rows=3352700 width=8)
                                                                    Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..55212123.52 rows=3352700 width=12)
                                                                          Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on inventory  (cost=0.00..7830000.00 rows=783000000 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=313 width=4)
                                                                                      Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                    ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                          ->  XN Seq Scan on warehouse  (cost=0.00..0.20 rows=20 width=4)
                                                              ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=30)
                                                                    ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=30)
                                ->  XN Network  (cost=57809773.03..57809773.04 rows=1 width=4)
                                      Distribute Round Robin
                                      ->  XN Subquery Scan "*SELECT* 5"  (cost=57809773.03..57809773.04 rows=1 width=4)
                                            ->  XN Aggregate  (cost=57809773.03..57809773.03 rows=1 width=4)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=4846.77..57801167.48 rows=3442221 width=4)
                                                        Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1096.77..57687559.52 rows=3352700 width=8)
                                                              Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..55212123.52 rows=3352700 width=12)
                                                                    Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on inventory  (cost=0.00..7830000.00 rows=783000000 width=16)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=313 width=4)
                                                                                Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                              ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                    ->  XN Seq Scan on warehouse  (cost=0.00..0.20 rows=20 width=4)
                                                        ->  XN Hash  (cost=3000.00..3000.00 rows=300000 width=4)
                                                              ->  XN Seq Scan on item  (cost=0.00..3000.00 rows=300000 width=4)
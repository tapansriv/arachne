XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10406,10452,10533,10558,10660,10690,10744,10818,10854,10906,11197,11328,11486,11507,11519,11759,11841,11971,12468,12469,12579,12960,13315,13331,13413,13470,13519,13751,13778,14312,15006,15150,15220,15241,15322,15417,15461,15526,15669,16007,16526,16830,17553,18108,18348,18506,18562,18610,18682,18853,19475,19585,19890,19897,20029,20266,20629,20950,21406,22013,22184,22342,22802,22879,22913,23281,23458,24062,24154,24746,24911,24960,25008,25075,25241,25966,26094,26273,26579,26588,26744,26859,27228,27365,27553,27743,28085,28665,28846,28886,29082,29156,29277,29405,29868,30006,30290,31150,31890,32882,33156,33275,33294,33300,33618,34292,34383,34480,34589,34655,34697,34771,35020,35134,35689,35879,36066,36282,36343,36849,37048,37100,37410,38081,38148,38478,38857,38894,39087,39147,39801,40976,41261,41296,41409,41792,42225,42283,42384,42510,43083,43232,43465,43504,43512,43839,43944,44252,44750,45130,45332,45566,45925,46123,46859,47909,48106,48363,48652,48695,48737,48907,49623,49769,49816,49829,49983,50570,50614,50652,50791,51060,51233,51573,51639,51881,52113,52190,52380,52494,53066,53096,53393,54511,55033,55656,55687,55939,56158,56177,56186,56446,56660,56754,56850,57231,57519,57670,58648,58731,59731,59855,59900,60021,60373,61378,61461,61899,62045,62091,62157,62204,62290,62355,62548,62572,62674,62781,63771,64197,64257,64430,64445,65135,65381,65558,65583,65990,66080,66136,66276,66386,66456,66477,66479,66631,66916,67010,67203,67267,67855,67913,68014,68080,68082,68087,68358,68457,69624,69655,69703,70176,70251,70339,70480,70493,70568,70725,70944,71159,71226,71534,71580,71585,71725,72070,72207,72323,72794,73187,73743,73936,74132,74412,74886,75383,76018,76422,76661,76680,76761,76817,77325,77647,77663,77682,77701,77872,77904,78063,78317,78348,78934,78984,79061,79099,79214,79245,79522,79605,79772,80035,80113,80480,80687,80775,81425,82083,82373,82393,82612,82644,82827,82969,83324,83578,83804,83916,83941,84004,84045,84166,84368,84631,84838,85008,85138,85243,85725,86216,86321,86457,86467,86869,86958,87184,87354,87691,87701,88250,88580,89004,89188,89369,89869,89938,89949,90650,90653,90667,90747,90824,90997,91130,91300,91392,91613,91748,91912,92109,92313,92890,93204,93433,93767,93841,93849,93910,94114,94242,94253,94921,95498,95556,95635,95859,95902,96094,96243,96477,97030,97055,97272,97358,97457,97747,97769,97801,97995,98070,98229,98273,98340,98474,98735,99136,99150,99160,99820,99974}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
XN Hash Left Join DS_BCAST_INNER  (cost=390678431.25..390800681.26 rows=100000 width=12)
  Hash Cond: ("outer".oid = "inner".oid)
  Filter: ("inner".oid IS NULL)
  ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=16)
  ->  XN Hash  (cost=390678431.24..390678431.24 rows=1 width=4)
        ->  XN Subquery Scan volt_dt_0  (cost=390475213.22..390678431.24 rows=1 width=4)
              ->  XN Unique  (cost=390475213.22..390678431.23 rows=1 width=4)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=390475213.22..390678431.23 rows=1 width=4)
                          Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                          ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                          ->  XN Hash  (cost=390475213.22..390475213.22 rows=1 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=390274309.33..390475213.22 rows=1 width=8)
                                      Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                      ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=2310 width=4)
                                            Filter: (((ca_state)::text = 'MI'::text) OR ((ca_state)::text = 'CO'::text) OR ((ca_state)::text = 'AR'::text))
                                      ->  XN Hash  (cost=390274309.33..390274309.33 rows=1 width=12)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=390112059.32..390274309.33 rows=1 width=12)
                                                  Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                  ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=16)
                                                  ->  XN Hash  (cost=390112059.32..390112059.32 rows=1 width=8)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=260432019.83..390112059.32 rows=1 width=8)
                                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                              ->  XN HashAggregate  (cost=10146127.13..10146127.13 rows=3158 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..10146119.24 rows=3158 width=4)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2880404 width=8)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=84 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=84 width=4)
                                                                                      Filter: ((1999 = d_year) AND (d_moy <= 4) AND (d_moy >= 2))
                                                              ->  XN Hash  (cost=250285892.63..250285892.63 rows=28 width=4)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=250285892.35..250285892.63 rows=28 width=4)
                                                                          ->  XN HashAggregate  (cost=250285892.35..250285892.35 rows=28 width=4)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=245803642.00..250285892.28 rows=28 width=4)
                                                                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                      ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=4)
                                                                                      ->  XN Hash  (cost=245803641.93..245803641.93 rows=28 width=8)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=20243602.18..245803641.93 rows=28 width=8)
                                                                                                  Hash Cond: ("outer".ss_customer_sk = "inner".ws_bill_customer_sk)
                                                                                                  ->  XN HashAggregate  (cost=10146127.13..10146127.13 rows=3158 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..10146119.24 rows=3158 width=4)
                                                                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2880404 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=84 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=84 width=4)
                                                                                                                          Filter: ((1999 = d_year) AND (d_moy <= 4) AND (d_moy >= 2))
                                                                                                  ->  XN Hash  (cost=10097472.98..10097472.98 rows=827 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..10097472.98 rows=827 width=4)
                                                                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=84 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=84 width=4)
                                                                                                                          Filter: ((1999 = d_year) AND (d_moy <= 4) AND (d_moy >= 2))

XN Hash Join DS_BCAST_INNER  (cost=1278.57..10144458.83 rows=3012 width=4)
  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
  ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
        Filter: (ss_sold_date_sk IS NOT NULL)
  ->  XN Hash  (cost=1278.36..1278.36 rows=84 width=4)
        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=84 width=4)
              Filter: ((1999 = d_year) AND (d_moy <= 4) AND (d_moy >= 2))

XN Limit  (cost=1002108293956.35..1002108293956.60 rows=100 width=37)
  ->  XN Merge  (cost=1002108293956.35..1002108293957.06 rows=282 width=37)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
        ->  XN Network  (cost=1002108293956.35..1002108293957.06 rows=282 width=37)
              Send to leader
              ->  XN Sort  (cost=1002108293956.35..1002108293957.06 rows=282 width=37)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                    ->  XN HashAggregate  (cost=2108293942.76..2108293944.88 rows=282 width=37)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=2072130716.30..2108293937.12 rows=282 width=37)
                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=41)
                                ->  XN Hash  (cost=2072130715.55..2072130715.55 rows=301 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1055250632.71..2072130715.55 rows=301 width=4)
                                            Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                            ->  XN HashAggregate  (cost=958.54..958.54 rows=6386 width=4)
                                                  ->  XN Seq Scan on volt_tt_61938ef3824d1  (cost=0.00..766.83 rows=76683 width=4)
                                            ->  XN Hash  (cost=1055249662.28..1055249662.28 rows=4759 width=8)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=777325115.08..1055249662.28 rows=4759 width=8)
                                                        Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                        ->  XN Hash Left Join DS_BCAST_INNER  (cost=777324234.30..778046484.14 rows=99990 width=12)
                                                              Hash Cond: ("outer".oid = "inner".oid)
                                                              Filter: ("inner".oid IS NULL)
                                                              ->  XN Seq Scan on volt_tt_61938ef370432  (cost=0.00..999.90 rows=99990 width=16)
                                                              ->  XN Hash  (cost=777324234.29..777324234.29 rows=6 width=4)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=776161016.14..777324234.29 rows=6 width=4)
                                                                          ->  XN Unique  (cost=776161016.14..777324234.23 rows=6 width=4)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=776161016.14..777324234.21 rows=6 width=4)
                                                                                      Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                      ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                                                                                      ->  XN Hash  (cost=776161016.12..776161016.12 rows=7 width=8)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=774360112.24..776161016.12 rows=7 width=8)
                                                                                                  Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                                  ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=2310 width=4)
                                                                                                        Filter: (((ca_state)::text = 'MI'::text) OR ((ca_state)::text = 'AR'::text) OR ((ca_state)::text = 'CO'::text))
                                                                                                  ->  XN Hash  (cost=774360112.22..774360112.22 rows=9 width=12)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=753717906.57..774360112.22 rows=9 width=12)
                                                                                                              Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                                                                                              ->  XN Seq Scan on volt_tt_61938ef370432  (cost=0.00..999.90 rows=96358 width=16)
                                                                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                                                              ->  XN Hash  (cost=753717906.25..753717906.25 rows=129 width=8)
                                                                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=482437825.13..753717906.25 rows=129 width=8)
                                                                                                                          Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                                                                                          ->  XN HashAggregate  (cost=958.54..958.54 rows=6386 width=4)
                                                                                                                                ->  XN Seq Scan on volt_tt_61938ef3824d1  (cost=0.00..766.83 rows=76683 width=4)
                                                                                                                          ->  XN Hash  (cost=482436866.27..482436866.27 rows=132 width=4)
                                                                                                                                ->  XN Subquery Scan volt_dt_2  (cost=482436864.95..482436866.27 rows=132 width=4)
                                                                                                                                      ->  XN HashAggregate  (cost=482436864.95..482436864.95 rows=132 width=4)
                                                                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=461634613.52..482436864.62 rows=132 width=4)
                                                                                                                                                  Hash Cond: ("outer".c_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                                  ->  XN Seq Scan on volt_tt_61938ef370432  (cost=0.00..999.90 rows=99990 width=4)
                                                                                                                                                  ->  XN Hash  (cost=461634613.20..461634613.20 rows=130 width=8)
                                                                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=10114532.07..461634613.20 rows=130 width=8)
                                                                                                                                                              Hash Cond: ("outer".ss_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                                              ->  XN HashAggregate  (cost=958.54..958.54 rows=6386 width=4)
                                                                                                                                                                    ->  XN Seq Scan on volt_tt_61938ef3824d1  (cost=0.00..766.83 rows=76683 width=4)
                                                                                                                                                              ->  XN Hash  (cost=10113569.45..10113569.45 rows=1634 width=4)
                                                                                                                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..10113569.45 rows=1634 width=4)
                                                                                                                                                                          Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                                                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1428725 width=8)
                                                                                                                                                                                Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_ship_customer_sk IS NOT NULL))
                                                                                                                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=84 width=4)
                                                                                                                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=84 width=4)
                                                                                                                                                                                      Filter: ((d_year = 1999) AND (d_moy <= 4) AND (d_moy >= 2))
                                                        ->  XN Hash  (cost=875.00..875.00 rows=2310 width=4)
                                                              ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=2310 width=4)
                                                                    Filter: (((ca_state)::text = 'MI'::text) OR ((ca_state)::text = 'AR'::text) OR ((ca_state)::text = 'CO'::text))
XN Merge  (cost=1000092584189.86..1000092584190.14 rows=111 width=43)
  Merge Key: dj.cnt, customer.c_last_name
  ->  XN Network  (cost=1000092584189.86..1000092584190.14 rows=111 width=43)
        Send to leader
        ->  XN Sort  (cost=1000092584189.86..1000092584190.14 rows=111 width=43)
              Sort Key: dj.cnt, customer.c_last_name
              ->  XN Hash Join DS_BCAST_INNER  (cost=66421934.98..92584186.09 rows=111 width=43)
                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                    ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=35)
                    ->  XN Hash  (cost=66421934.71..66421934.71 rows=109 width=16)
                          ->  XN Subquery Scan dj  (cost=66421932.26..66421934.71 rows=109 width=16)
                                ->  XN HashAggregate  (cost=66421932.26..66421933.62 rows=109 width=8)
                                      Filter: ((count(*) <= 5) AND (count(*) >= 1))
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1825.14..66421930.90 rows=109 width=8)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1824.96..64981928.20 rows=114 width=12)
                                                  Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1643.73..6301707.66 rows=1697 width=16)
                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2499433 width=20)
                                                              Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=1643.60..1643.60 rows=52 width=4)
                                                              ->  XN Seq Scan on date_dim  (cost=0.00..1643.60 rows=52 width=4)
                                                                    Filter: (((d_year = 1999) OR (d_year = 2000) OR (d_year = 1998)) AND (d_dom <= 2) AND (d_dom >= 1))
                                                  ->  XN Hash  (cost=180.00..180.00 rows=489 width=4)
                                                        ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=489 width=4)
                                                              Filter: ((((hd_buy_potential)::text = '0-500'::text) OR ((hd_buy_potential)::text = '1001-5000'::text)) AND (CASE WHEN (hd_vehicle_count > 0) THEN (hd_dep_count / hd_vehicle_count) ELSE NULL::integer END > 1) AND (hd_vehicle_count > 0))
                                            ->  XN Hash  (cost=0.15..0.15 rows=12 width=4)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.15 rows=12 width=4)
                                                        Filter: ((s_county)::text = 'Williamson County'::text)
XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 1999) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10037,10286,10522,10624,10738,11117,11261,11324,12098,12905,13031,13859,14045,14129,14182,14606,14620,14703,15213,15244,15249,15845,15880,15932,16822,16850,17390,17450,17609,18040,18239,18378,18598,18776,19273,19478,19928,20220,20286,20342,20562,20639,21233,21322,21911,21932,22085,22634,22814,23349,23369,23734,23844,23995,24011,24600,25020,25360,25849,25977,26105,26553,26569,26849,26888,27341,27412,27553,27626,27774,27930,28221,28610,29023,29082,29225,29536,29615,30354,30397,30533,30747,30821,30886,31140,31214,31225,31368,31766,31829,32027,32086,32148,32451,33167,33477,33487,33539,33660,33731,33805,33970,33998,34309,34457,34584,34832,34936,35032,35132,35203,35244,35417,36378,36647,36824,36845,37056,37554,37790,37884,37989,38189,38200,38794,39101,39441,39529,39996,40181,40369,40393,40588,40901,41397,41436,41761,41888,42188,42435,42813,43051,43413,43786,43848,44404,44488,44552,44593,45092,45164,45429,45807,45904,46198,46277,47107,47433,47492,48562,48596,48731,48759,48801,49095,49197,49217,49540,50266,50421,50738,50957,51298,51358,51596,51703,52540,52761,52942,53032,53926,54104,54488,54501,54590,54803,54824,55389,55430,55531,55732,55768,55915,56159,56208,56599,56747,56790,56994,57170,57188,57217,57258,57479,57838,58469,58732,59633,59771,59955,60404,60423,60737,61219,61220,61288,61384,61404,61414,61733,61759,61863,61981,62656,63779,63821,64062,64358,64550,64578,64782,64789,64942,64973,65688,65948,66033,66765,66895,67398,67518,68299,68325,68722,68740,68804,68890,68958,68978,69125,69249,69701,69784,70521,71153,71609,71681,72678,72753,72878,73127,73267,73277,73280,73436,73465,73609,73880,73906,74450,74886,75033,75042,75147,75358,75438,75636,75984,76655,76804,76961,77194,77436,77439,77548,78007,78100,78179,78311,78417,78489,78526,78613,78625,78777,79358,79568,79965,79974,81022,81024,81095,81342,82003,82126,82478,82616,82674,83005,83023,83239,83246,83369,83508,83628,83889,84237,84483,84520,84666,85066,85075,85343,85656,85692,85915,86086,86141,86162,86611,86770,86820,86997,87104,87184,87350,87359,87657,87942,87992,88104,88146,88255,88594,88836,88848,88857,89180,89181,89368,89393,89426,89838,89885,90297,90566,90869,90897,91196,91485,91573,91825,91842,92301,92342,92713,92785,92947,93268,93375,93422,93951,94420,94619,94766,95013,95124,95158,95212,95361,95904,95944,96140,96174,96640,96692,96737,97317,97585,97597,97885,97926,98018,98045,98673,99264,99594,99625,99686,99800}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
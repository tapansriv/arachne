XN Subquery Scan derived_table1  (cost=10000041645548.53..10000041645549.03 rows=40 width=84)
  ->  XN Limit  (cost=10000041645548.53..10000041645548.62 rows=40 width=52)
        ->  XN Merge  (cost=10000041645548.53..10000041645548.62 rows=40 width=52)
              Merge Key: channel, return_rank, currency_rank, item
              ->  XN Network  (cost=10000041645548.53..10000041645548.62 rows=40 width=52)
                    Send to leader
                    ->  XN Sort  (cost=10000041645548.53..10000041645548.62 rows=40 width=52)
                          Sort Key: channel, return_rank, currency_rank, item
                          ->  XN Unique  (cost=3000034579421.79..9000041645547.46 rows=40 width=52)
                                ->  XN Append  (cost=3000034579421.79..9000041645546.96 rows=40 width=52)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=3000034579421.79..3000034579421.91 rows=9 width=52)
                                            ->  XN Limit  (cost=3000034579421.79..3000034579421.82 rows=9 width=52)
                                                  ->  XN Sort  (cost=3000034579421.79..3000034579421.82 rows=9 width=52)
                                                        Sort Key: 'web'::character varying, return_rank, currency_rank, item
                                                        ->  XN Unique  (cost=2000034579421.01..2000034579421.65 rows=9 width=52)
                                                              ->  XN Subquery Scan web  (cost=2000034579421.01..2000034579421.54 rows=9 width=52)
                                                                    Filter: ((currency_rank <= 10) OR (return_rank <= 10))
                                                                    ->  XN Window  (cost=2000034579421.01..2000034579421.31 rows=15 width=68)
                                                                          Order: currency_ratio
                                                                          ->  XN Sort  (cost=2000034579421.01..2000034579421.05 rows=15 width=68)
                                                                                Sort Key: currency_ratio
                                                                                ->  XN Network  (cost=1000034579420.46..1000034579420.72 rows=15 width=68)
                                                                                      Send to slice 0
                                                                                      ->  XN Window  (cost=1000034579420.46..1000034579420.72 rows=15 width=68)
                                                                                            Order: return_ratio
                                                                                            ->  XN Sort  (cost=1000034579420.46..1000034579420.50 rows=15 width=68)
                                                                                                  Sort Key: return_ratio
                                                                                                  ->  XN Network  (cost=34579419.49..34579420.16 rows=15 width=68)
                                                                                                        Send to slice 0
                                                                                                        ->  XN Subquery Scan in_web  (cost=34579419.49..34579420.16 rows=15 width=68)
                                                                                                              ->  XN HashAggregate  (cost=34579419.49..34579420.02 rows=15 width=28)
                                                                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=3497153.48..34579419.30 rows=15 width=28)
                                                                                                                          Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                                                                          ->  XN Seq Scan on web_returns wr  (cost=0.00..897.04 rows=54751 width=20)
                                                                                                                                Filter: (wr_return_amt > 10000::double precision)
                                                                                                                          ->  XN Hash  (cost=3497152.92..3497152.92 rows=111 width=20)
                                                                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..3497152.92 rows=111 width=20)
                                                                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                                                      ->  XN Seq Scan on web_sales ws  (cost=0.00..12589.22 rows=277343 width=24)
                                                                                                                                            Filter: ((ws_net_profit > 1::double precision) AND (ws_net_paid > 0::double precision) AND (ws_quantity > 0))
                                                                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                                                                                  Filter: ((d_year = 1999) AND (d_moy = 12))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=3000003517750.48..3000003517750.64 rows=13 width=52)
                                            ->  XN Limit  (cost=3000003517750.48..3000003517750.51 rows=13 width=52)
                                                  ->  XN Sort  (cost=3000003517750.48..3000003517750.51 rows=13 width=52)
                                                        Sort Key: 'catalog'::character varying, return_rank, currency_rank, item
                                                        ->  XN Unique  (cost=2000003517749.30..2000003517750.24 rows=13 width=52)
                                                              ->  XN Subquery Scan "catalog"  (cost=2000003517749.30..2000003517750.07 rows=13 width=52)
                                                                    Filter: ((currency_rank <= 10) OR (return_rank <= 10))
                                                                    ->  XN Window  (cost=2000003517749.30..2000003517749.74 rows=22 width=68)
                                                                          Order: currency_ratio
                                                                          ->  XN Sort  (cost=2000003517749.30..2000003517749.36 rows=22 width=68)
                                                                                Sort Key: currency_ratio
                                                                                ->  XN Network  (cost=1000003517748.43..1000003517748.81 rows=22 width=68)
                                                                                      Send to slice 0
                                                                                      ->  XN Window  (cost=1000003517748.43..1000003517748.81 rows=22 width=68)
                                                                                            Order: return_ratio
                                                                                            ->  XN Sort  (cost=1000003517748.43..1000003517748.48 rows=22 width=68)
                                                                                                  Sort Key: return_ratio
                                                                                                  ->  XN Network  (cost=3517746.95..3517747.94 rows=22 width=68)
                                                                                                        Send to slice 0
                                                                                                        ->  XN Subquery Scan in_cat  (cost=3517746.95..3517747.94 rows=22 width=68)
                                                                                                              ->  XN HashAggregate  (cost=3517746.95..3517747.72 rows=22 width=28)
                                                                                                                    ->  XN Hash Join DS_DIST_NONE  (cost=3513162.15..3517746.67 rows=22 width=28)
                                                                                                                          Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                                                                                                          ->  XN Seq Scan on catalog_returns cr  (cost=0.00..1800.84 rows=111347 width=20)
                                                                                                                                Filter: (cr_return_amount > 10000::double precision)
                                                                                                                          ->  XN Hash  (cost=3513161.07..3513161.07 rows=216 width=20)
                                                                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..3513161.07 rows=216 width=20)
                                                                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                                                      ->  XN Seq Scan on catalog_sales cs  (cost=0.00..25227.09 rows=546881 width=24)
                                                                                                                                            Filter: ((cs_net_profit > 1::double precision) AND (cs_net_paid > 0::double precision) AND (cs_quantity > 0))
                                                                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                                                                                  Filter: ((d_year = 1999) AND (d_moy = 12))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=3000003548374.19..3000003548374.42 rows=18 width=52)
                                            ->  XN Limit  (cost=3000003548374.19..3000003548374.24 rows=18 width=52)
                                                  ->  XN Sort  (cost=3000003548374.19..3000003548374.24 rows=18 width=52)
                                                        Sort Key: 'store'::character varying, return_rank, currency_rank, item
                                                        ->  XN Unique  (cost=2000003548372.47..2000003548373.81 rows=18 width=52)
                                                              ->  XN Subquery Scan store  (cost=2000003548372.47..2000003548373.59 rows=18 width=52)
                                                                    Filter: ((currency_rank <= 10) OR (return_rank <= 10))
                                                                    ->  XN Window  (cost=2000003548372.47..2000003548373.11 rows=32 width=68)
                                                                          Order: currency_ratio
                                                                          ->  XN Sort  (cost=2000003548372.47..2000003548372.55 rows=32 width=68)
                                                                                Sort Key: currency_ratio
                                                                                ->  XN Network  (cost=1000003548371.11..1000003548371.67 rows=32 width=68)
                                                                                      Send to slice 0
                                                                                      ->  XN Window  (cost=1000003548371.11..1000003548371.67 rows=32 width=68)
                                                                                            Order: return_ratio
                                                                                            ->  XN Sort  (cost=1000003548371.11..1000003548371.19 rows=32 width=68)
                                                                                                  Sort Key: return_ratio
                                                                                                  ->  XN Network  (cost=3548368.87..3548370.31 rows=32 width=68)
                                                                                                        Send to slice 0
                                                                                                        ->  XN Subquery Scan in_store  (cost=3548368.87..3548370.31 rows=32 width=68)
                                                                                                              ->  XN HashAggregate  (cost=3548368.87..3548369.99 rows=32 width=28)
                                                                                                                    ->  XN Hash Join DS_DIST_NONE  (cost=3539520.01..3548368.47 rows=32 width=28)
                                                                                                                          Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                                                                          ->  XN Seq Scan on store_returns sr  (cost=0.00..3593.93 rows=210181 width=20)
                                                                                                                                Filter: (sr_return_amt > 10000::double precision)
                                                                                                                          ->  XN Hash  (cost=3539518.79..3539518.79 rows=243 width=20)
                                                                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..3539518.79 rows=243 width=20)
                                                                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                                                      ->  XN Seq Scan on store_sales sts  (cost=0.00..50407.07 rows=641079 width=24)
                                                                                                                                            Filter: ((ss_net_profit > 1::double precision) AND (ss_net_paid > 0::double precision) AND (ss_quantity > 0))
                                                                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                                                                                  Filter: ((d_year = 1999) AND (d_moy = 12))
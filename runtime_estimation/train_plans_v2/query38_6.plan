XN Limit  (cost=1031681051528.23..1031681051528.48 rows=100 width=28)
  ->  XN Merge  (cost=1031681051528.23..1031681051549.06 rows=8335 width=28)
        Merge Key: ca.ca_state, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
        ->  XN Network  (cost=1031681051528.23..1031681051549.06 rows=8335 width=28)
              Send to leader
              ->  XN Sort  (cost=1031681051528.23..1031681051549.06 rows=8335 width=28)
                    Sort Key: ca.ca_state, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                    ->  XN HashAggregate  (cost=31681050672.85..31681050985.41 rows=8335 width=28)
                          ->  XN Hash IN Join DS_BCAST_INNER  (cost=93357164.18..31681050297.77 rows=8335 width=28)
                                Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                ->  XN Hash Left Join DS_BCAST_INNER  (cost=62212801.57..30535464693.66 rows=92652 width=32)
                                      Hash Cond: ("outer".c_customer_sk = "inner".rhs_col_1)
                                      Filter: (("outer".witness IS NOT NULL) OR ("inner".witness_1 IS NOT NULL))
                                      ->  XN Hash Left Join DS_BCAST_INNER  (cost=31115448.95..30096290822.85 rows=92652 width=36)
                                            Hash Cond: ("outer".c_customer_sk = "inner".rhs_col)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1865.69..29255268141.29 rows=92652 width=32)
                                                  Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1240.69..19255264566.10 rows=89941 width=30)
                                                        Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                        ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=26)
                                                        ->  XN Hash  (cost=1000.00..1000.00 rows=96276 width=12)
                                                              ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=96276 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                  ->  XN Hash  (cost=500.00..500.00 rows=50000 width=10)
                                                        ->  XN Seq Scan on customer_address ca  (cost=0.00..500.00 rows=50000 width=10)
                                            ->  XN Hash  (cost=31113570.61..31113570.61 rows=5059 width=8)
                                                  ->  XN Subquery Scan derived_table1  (cost=1096.38..31113570.61 rows=5059 width=8)
                                                        ->  XN Unique  (cost=1096.38..31113520.02 rows=5059 width=4)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.38..31113494.73 rows=5059 width=4)
                                                                    Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=8)
                                                                          Filter: (cs_sold_date_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=259 width=4)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=259 width=4)
                                                                                Filter: ((d_year = 2001) AND (d_qoy < 4))
                                      ->  XN Hash  (cost=31097346.25..31097346.25 rows=2549 width=8)
                                            ->  XN Subquery Scan derived_table2  (cost=1096.38..31097346.25 rows=2549 width=8)
                                                  ->  XN Unique  (cost=1096.38..31097320.76 rows=2549 width=4)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1096.38..31097308.01 rows=2549 width=4)
                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                              ->  XN Hash  (cost=1095.73..1095.73 rows=259 width=4)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=259 width=4)
                                                                          Filter: ((d_year = 2001) AND (d_qoy < 4))
                                ->  XN Hash  (cost=31144339.39..31144339.39 rows=9287 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1096.38..31144339.39 rows=9287 width=4)
                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                            ->  XN Hash  (cost=1095.73..1095.73 rows=259 width=4)
                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=259 width=4)
                                                        Filter: ((d_year = 2001) AND (d_qoy < 4))
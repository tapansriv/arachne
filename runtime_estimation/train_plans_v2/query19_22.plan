XN Limit  (cost=1004219911810.87..1004219911811.12 rows=100 width=104)
  ->  XN Merge  (cost=1004219911810.87..1004219911811.23 rows=145 width=104)
        Merge Key: customer_address.ca_country, customer_address.ca_state, customer_address.ca_county, item.i_item_id
        ->  XN Network  (cost=1004219911810.87..1004219911811.23 rows=145 width=104)
              Send to leader
              ->  XN Sort  (cost=1004219911810.87..1004219911811.23 rows=145 width=104)
                    Sort Key: customer_address.ca_country, customer_address.ca_state, customer_address.ca_county, item.i_item_id
                    ->  XN HashAggregate  (cost=4219911798.05..4219911805.66 rows=145 width=104)
                          GROUPING SETS((), (i_item_id), (i_item_id, ca_country), (i_item_id, ca_country, ca_state), (i_item_id, ca_country, ca_state, ca_county))
                          ->  XN Hash Join DS_BCAST_INNER  (cost=4185351391.69..4219911797.06 rows=36 width=104)
                                Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                ->  XN Hash  (cost=4185351391.60..4185351391.60 rows=36 width=88)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=4147308173.24..4185351391.60 rows=36 width=88)
                                            Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                            ->  XN Seq Scan on customer_demographics cd2  (cost=0.00..19208.00 rows=1920800 width=4)
                                            ->  XN Hash  (cost=4147308173.15..4147308173.15 rows=38 width=92)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=4035946666.44..4147308173.15 rows=38 width=92)
                                                        Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                        ->  XN Seq Scan on customer_address  (cost=0.00..1375.00 rows=10506 width=44)
                                                              Filter: (((ca_state)::text = 'TX'::text) OR ((ca_state)::text = 'GA'::text) OR ((ca_state)::text = 'MO'::text) OR ((ca_state)::text = 'NE'::text) OR ((ca_state)::text = 'MN'::text) OR ((ca_state)::text = 'ID'::text) OR ((ca_state)::text = 'NY'::text))
                                                        ->  XN Hash  (cost=4035946666.01..4035946666.01 rows=174 width=56)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=3782263690.26..4035946666.01 rows=174 width=56)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..2500.00 rows=37921 width=16)
                                                                          Filter: (((c_birth_month = 1) OR (c_birth_month = 10) OR (c_birth_month = 12) OR (c_birth_month = 4) OR (c_birth_month = 2) OR (c_birth_month = 11)) AND (c_current_cdemo_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=3782263689.12..3782263689.12 rows=453 width=48)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=41433188.69..3782263689.12 rows=453 width=48)
                                                                                Hash Cond: ("outer".cd_demo_sk = "inner".cs_bill_cdemo_sk)
                                                                                ->  XN Seq Scan on customer_demographics cd1  (cost=0.00..28812.00 rows=134712 width=8)
                                                                                      Filter: (((cd_education_status)::text = '4 yr Degree'::text) AND ((cd_gender)::text = 'M'::text))
                                                                                ->  XN Hash  (cost=41433171.99..41433171.99 rows=6680 width=48)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41433171.99 rows=6680 width=48)
                                                                                            Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1422059 width=52)
                                                                                                  Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL) AND (cs_bill_cdemo_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                        Filter: (d_year = 2000)
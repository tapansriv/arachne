XN Subquery Scan foo  (cost=3010102126395.93..3010102126397.18 rows=100 width=100)
  ->  XN Limit  (cost=3010102126395.93..3010102126396.18 rows=100 width=54)
        ->  XN Merge  (cost=3010102126395.93..3010102126396.43 rows=201 width=54)
              Merge Key: i_item_id, s_state
              ->  XN Network  (cost=3010102126395.93..3010102126396.43 rows=201 width=54)
                    Send to leader
                    ->  XN Sort  (cost=3010102126395.93..3010102126396.43 rows=201 width=54)
                          Sort Key: i_item_id, s_state
                          ->  XN Append  (cost=1003368015464.57..2010102126388.24 rows=201 width=54)
                                ->  XN Subquery Scan "*SELECT* 1"  (cost=1003368015464.57..1003368015465.82 rows=100 width=54)
                                      ->  XN Limit  (cost=1003368015464.57..1003368015464.82 rows=100 width=54)
                                            ->  XN Sort  (cost=1003368015464.57..1003368015464.94 rows=149 width=54)
                                                  Sort Key: item.i_item_id, store.s_state
                                                  ->  XN HashAggregate  (cost=3368015457.70..3368015459.19 rows=149 width=54)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3368015048.96..3368015455.46 rows=149 width=54)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                              ->  XN Hash  (cost=3368015048.60..3368015048.60 rows=146 width=38)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34597.41..3368015048.60 rows=146 width=38)
                                                                          Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=34597.23..3365615045.06 rows=152 width=36)
                                                                                Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41461218.96 rows=11306 width=40)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2511031 width=44)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                  Filter: (d_year = 1999)
                                                                                ->  XN Hash  (cost=33614.00..33614.00 rows=27701 width=4)
                                                                                      ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=27701 width=4)
                                                                                            Filter: (((cd_education_status)::text = 'Primary'::text) AND ((cd_marital_status)::text = 'M'::text) AND ((cd_gender)::text = 'F'::text))
                                                                          ->  XN Hash  (cost=0.15..0.15 rows=12 width=10)
                                                                                ->  XN Seq Scan on store  (cost=0.00..0.15 rows=12 width=10)
                                                                                      Filter: ((s_state)::text = 'TN'::text)
                                ->  XN Subquery Scan "*SELECT* 2"  (cost=1003367055464.20..1003367055465.45 rows=100 width=48)
                                      ->  XN Limit  (cost=1003367055464.20..1003367055464.45 rows=100 width=48)
                                            ->  XN Sort  (cost=1003367055464.20..1003367055464.57 rows=149 width=48)
                                                  Sort Key: item.i_item_id
                                                  ->  XN HashAggregate  (cost=3367055457.33..3367055458.82 rows=149 width=48)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3367055048.96..3367055455.46 rows=149 width=48)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                              ->  XN Hash  (cost=3367055048.60..3367055048.60 rows=146 width=32)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34597.41..3367055048.60 rows=146 width=32)
                                                                          Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=34597.23..3365615045.06 rows=152 width=36)
                                                                                Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41461218.96 rows=11306 width=40)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2511031 width=44)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                  Filter: (d_year = 1999)
                                                                                ->  XN Hash  (cost=33614.00..33614.00 rows=27701 width=4)
                                                                                      ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=27701 width=4)
                                                                                            Filter: (((cd_education_status)::text = 'Primary'::text) AND ((cd_marital_status)::text = 'M'::text) AND ((cd_gender)::text = 'F'::text))
                                                                          ->  XN Hash  (cost=0.15..0.15 rows=12 width=4)
                                                                                ->  XN Seq Scan on store  (cost=0.00..0.15 rows=12 width=4)
                                                                                      Filter: ((s_state)::text = 'TN'::text)
                                ->  XN Network  (cost=3367055456.96..3367055456.97 rows=1 width=28)
                                      Distribute Round Robin
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=3367055456.96..3367055456.97 rows=1 width=28)
                                            ->  XN Aggregate  (cost=3367055456.96..3367055456.96 rows=1 width=28)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=3367055048.96..3367055455.46 rows=149 width=28)
                                                        Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                        ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=4)
                                                        ->  XN Hash  (cost=3367055048.60..3367055048.60 rows=146 width=32)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=34597.41..3367055048.60 rows=146 width=32)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34597.23..3365615045.06 rows=152 width=36)
                                                                          Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41461218.96 rows=11306 width=40)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2511031 width=44)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                            Filter: (d_year = 1999)
                                                                          ->  XN Hash  (cost=33614.00..33614.00 rows=27701 width=4)
                                                                                ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=27701 width=4)
                                                                                      Filter: (((cd_education_status)::text = 'Primary'::text) AND ((cd_marital_status)::text = 'M'::text) AND ((cd_gender)::text = 'F'::text))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=12 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..0.15 rows=12 width=4)
                                                                                Filter: ((s_state)::text = 'TN'::text)
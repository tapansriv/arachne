XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 1998) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10041,10335,10640,10649,10735,10972,11302,11356,11723,11804,11906,12311,12477,12497,12670,12897,12899,13173,13292,13502,13871,14093,14427,14644,15089,15460,16209,16282,16620,16696,17018,17031,17167,17248,17364,18450,18457,18486,19570,19740,19747,19833,20099,20671,20674,20871,21527,22044,22341,22527,23098,23194,23369,24313,24457,24607,24730,24856,24881,25143,25447,25894,25956,26211,26213,26228,26233,26382,26434,26617,26672,26861,27227,27981,27988,27999,28049,28068,28222,28529,28665,29097,29228,29603,29696,30348,30646,31057,31073,31204,31249,31474,31518,31544,31806,31946,32196,32744,33098,33116,33276,33287,33515,33546,33830,33895,34109,34156,34465,34467,34482,34642,34727,34847,35205,35254,35501,35740,36291,36806,36870,37153,37256,37443,37569,37994,38064,38107,38194,38574,38734,38757,38791,38966,39866,40057,40072,40105,40211,40917,41018,41060,41357,42024,42158,42258,42344,42442,42445,42458,42719,42962,43020,43215,43558,43927,44494,44644,44672,44743,45129,45226,45390,46292,46794,46799,46861,47002,47297,47338,47382,47519,47922,47941,48921,49008,49433,49527,49638,49661,49974,50551,50597,50747,51500,51507,51949,52328,52718,52918,53016,53464,53634,53658,53695,53826,53847,53936,54082,54295,54883,54991,55036,55177,55828,56054,56161,56204,56211,56531,56573,56746,56788,56992,56995,57007,57034,57269,57397,57423,57677,57789,58898,59141,59166,59282,60058,60166,60212,60526,60536,60910,61071,61849,62177,62534,62546,62915,63055,63599,64090,64176,64323,64380,64730,65044,65200,65395,65416,65482,65991,66120,66251,66553,66626,66986,67158,67279,67832,67858,67912,68212,68333,68338,68497,69299,69361,69706,69945,70077,70125,70302,70924,71089,71107,71203,71506,71591,71622,71829,71899,71991,72789,72834,73486,73570,73771,73885,74144,74751,75490,75714,75753,75791,75809,76309,76326,76554,76874,76897,76922,76958,76978,77694,77946,78857,78863,79446,79502,79930,80029,80582,80598,80856,80965,81061,81194,81848,82333,82488,82680,82892,83002,83064,83307,83314,83550,83888,84243,84723,84740,84913,84917,84990,84991,85071,85405,85733,86161,86205,86254,86896,87040,87306,87389,87974,88163,88820,89102,89108,89457,89822,90001,90399,90533,90694,90928,91309,91685,91900,92107,92141,92364,92417,92541,93050,93100,93684,93917,94144,94342,94464,94583,94996,95082,95111,95667,95675,95916,96410,96477,96511,96546,96703,96774,96997,97362,97878,97948,98347,98729,98910,99307,99344,99397,99555,99568,99849,99876,99951}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
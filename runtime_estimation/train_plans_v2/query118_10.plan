XN Limit  (cost=2001960733484.59..2001960733484.84 rows=100 width=80)
  ->  XN Merge  (cost=2001960733484.59..2001960733487.12 rows=1011 width=80)
        Merge Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
        ->  XN Network  (cost=2001960733484.59..2001960733487.12 rows=1011 width=80)
              Send to leader
              ->  XN Sort  (cost=2001960733484.59..2001960733487.12 rows=1011 width=80)
                    Sort Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
                    ->  XN Window  (cost=1001960733408.86..1001960733434.14 rows=1011 width=80)
                          Partition: lochierarchy, CASE WHEN (g_class = 0) THEN i_category ELSE NULL::character varying END
                          Order: total_sum
                          ->  XN Sort  (cost=1001960733408.86..1001960733411.39 rows=1011 width=80)
                                Sort Key: lochierarchy, CASE WHEN (g_class = 0) THEN i_category ELSE NULL::character varying END, total_sum
                                ->  XN Network  (cost=653577781.39..1960733358.40 rows=1011 width=80)
                                      Distribute
                                      ->  XN Subquery Scan results_rollup  (cost=653577781.39..1960733358.40 rows=1011 width=80)
                                            ->  XN Unique  (cost=653577781.39..1960733348.29 rows=1011 width=28)
                                                  ->  XN Append  (cost=653577781.39..1960733333.13 rows=1011 width=28)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=653577781.39..653577793.89 rows=1000 width=28)
                                                              ->  XN HashAggregate  (cost=653577781.39..653577783.89 rows=1000 width=28)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=37577321.16..653577757.72 rows=3156 width=28)
                                                                          Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                          ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                                          ->  XN Hash  (cost=37577313.46..37577313.46 rows=3080 width=12)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..37577313.46 rows=3080 width=12)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=313 width=4)
                                                                                                  Filter: ((d_month_seq >= 1212) AND (d_month_seq <= 1223))
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=653577773.50..653577773.62 rows=10 width=17)
                                                              ->  XN HashAggregate  (cost=653577773.50..653577773.52 rows=10 width=17)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=37577321.16..653577757.72 rows=3156 width=17)
                                                                          Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                          ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=13)
                                                                          ->  XN Hash  (cost=37577313.46..37577313.46 rows=3080 width=12)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..37577313.46 rows=3080 width=12)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=313 width=4)
                                                                                                  Filter: ((d_month_seq >= 1212) AND (d_month_seq <= 1223))
                                                        ->  XN Network  (cost=653577765.61..653577765.62 rows=1 width=8)
                                                              Distribute Round Robin
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=653577765.61..653577765.62 rows=1 width=8)
                                                                    ->  XN Aggregate  (cost=653577765.61..653577765.61 rows=1 width=8)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=37577321.16..653577757.72 rows=3156 width=8)
                                                                                Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                                ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=4)
                                                                                ->  XN Hash  (cost=37577313.46..37577313.46 rows=3080 width=12)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..37577313.46 rows=3080 width=12)
                                                                                            Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                            ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                                                  ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=313 width=4)
                                                                                                        Filter: ((d_month_seq >= 1212) AND (d_month_seq <= 1223))
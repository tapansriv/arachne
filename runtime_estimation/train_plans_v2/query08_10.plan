XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10300,10662,10739,10949,11512,11572,11652,12337,12562,13377,13681,13828,13829,13859,13867,13973,14031,14198,14376,14691,14728,15178,15218,15233,15290,15303,15349,15479,15622,15751,15948,16459,16473,16571,17469,17501,17665,17845,18082,18259,18405,18744,19047,19227,19268,19346,19564,19814,19967,20050,20224,20280,20313,20486,20538,20974,21083,21160,21214,21625,21683,23184,23494,23898,24437,24889,25022,25146,25395,25866,25974,26019,26353,26387,26434,27043,27550,28162,28562,28575,29004,29866,30218,30366,30444,30491,30804,30887,31139,31387,31617,31809,32175,32495,32653,32938,33057,33066,33196,33595,33788,34304,34337,34338,34443,34520,34614,34632,34745,34861,34971,35881,36550,36624,36878,36881,37445,37988,38055,38057,38361,38855,40144,40181,40234,40378,40433,40635,40867,41426,41841,41868,41903,42031,42073,42500,42519,42987,43027,43039,43406,43754,43831,44072,44241,44689,45485,45659,45729,45961,47454,47463,47599,48021,48117,48194,48237,48333,48419,48477,49219,49275,49305,49613,49753,49861,49900,49949,51101,51160,51205,51258,51350,51571,51882,51893,52150,52217,52333,52543,52579,52668,52690,52877,52993,53072,53135,53471,53479,53587,53876,54019,54024,54155,54249,54726,55006,55734,55751,55950,55982,56338,56361,56628,56651,56679,56761,56906,57057,57690,57971,58028,58137,58320,58402,58573,58635,58787,58898,59184,59385,59528,60237,60545,60712,60779,61006,61021,61328,61508,61591,61691,61811,62018,62218,62267,62345,62428,62691,62890,63219,63409,63666,63863,64014,64170,64211,64488,64722,64811,65044,65088,65370,65836,66194,66328,66527,66980,67032,67238,67605,67637,67753,67946,68248,68269,68484,68961,69355,69704,69729,69822,70099,70297,70895,71322,71911,72070,72076,73076,73080,73262,74025,74066,74557,74628,74763,74963,75118,75141,75576,75626,76325,76329,76432,76932,76963,77186,77437,77804,77919,77947,77981,78000,78017,78345,78406,78443,78512,78787,78997,79060,79119,79320,79772,79830,79985,79990,79999,80129,80134,80151,80575,80687,80700,81113,81300,81519,82128,82238,82378,82565,82632,82656,82853,83162,83340,83898,84060,84105,84273,84646,84681,84829,85105,85246,85885,85914,86042,86179,86199,86380,86451,86700,86758,86774,87224,87430,87834,87855,88077,88118,88355,88404,88791,89620,89928,89991,90080,90393,91891,91986,92238,92670,92888,92971,92980,93135,93227,93913,94253,94647,94669,95102,95229,95389,95445,95735,95883,96068,96390,96743,97049,97461,97555,98779,98994,99568,99640,99684}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
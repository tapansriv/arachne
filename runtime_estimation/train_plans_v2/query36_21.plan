XN Seq Scan on item  (cost=0.00..225.00 rows=1763 width=4)
  Filter: ((i_category)::text = 'Sports'::text)

XN Limit  (cost=1000100796509.39..1000100796509.40 rows=3 width=12)
  ->  XN Merge  (cost=1000100796509.39..1000100796509.40 rows=3 width=12)
        Merge Key: sum(total_sales)
        ->  XN Network  (cost=1000100796509.39..1000100796509.40 rows=3 width=12)
              Send to leader
              ->  XN Sort  (cost=1000100796509.39..1000100796509.40 rows=3 width=12)
                    Sort Key: sum(total_sales)
                    ->  XN HashAggregate  (cost=100796509.36..100796509.37 rows=3 width=12)
                          ->  XN Subquery Scan tmp1  (cost=33623743.32..100796509.35 rows=3 width=12)
                                ->  XN Append  (cost=33623743.32..100796509.32 rows=3 width=12)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=33623743.32..33623743.33 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=33623743.32..33623743.32 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3783734.10..33623743.32 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=22.29..22.29 rows=736 width=4)
                                                              ->  XN Seq Scan on volt_tt_619390c6c3b27  (cost=0.00..17.83 rows=1783 width=4)
                                                        ->  XN Hash  (cost=3783711.81..3783711.81 rows=2 width=12)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=3783306.79..3783711.81 rows=2 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=8)
                                                                    ->  XN Hash  (cost=3783306.78..3783306.78 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3783306.78 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..182210.31 rows=52 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2622460 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=30 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 7))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=33394422.12..33394422.13 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=33394422.12..33394422.12 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3754412.90..33394422.11 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=22.29..22.29 rows=736 width=4)
                                                              ->  XN Seq Scan on volt_tt_619390c6c3b27  (cost=0.00..17.83 rows=1783 width=4)
                                                        ->  XN Hash  (cost=3754390.61..3754390.61 rows=1 width=12)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=3753985.59..3754390.61 rows=1 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=8)
                                                                    ->  XN Hash  (cost=3753985.59..3753985.59 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3753985.59 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..152889.39 rows=30 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1427889 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=30 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 7))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=33778343.84..33778343.85 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=33778343.84..33778343.84 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3938334.61..33778343.83 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=22.29..22.29 rows=736 width=4)
                                                              ->  XN Seq Scan on volt_tt_619390c6c3b27  (cost=0.00..17.83 rows=1783 width=4)
                                                        ->  XN Hash  (cost=3938312.32..3938312.32 rows=2 width=12)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=3737907.30..3938312.32 rows=2 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=8)
                                                                    ->  XN Hash  (cost=3737907.30..3737907.30 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3737907.30 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..136811.29 rows=15 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=20)
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=30 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 7))
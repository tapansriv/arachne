XN Subquery Scan foo  (cost=3009609646383.44..3009609646384.69 rows=100 width=100)
  ->  XN Limit  (cost=3009609646383.44..3009609646383.69 rows=100 width=54)
        ->  XN Merge  (cost=3009609646383.44..3009609646383.94 rows=201 width=54)
              Merge Key: i_item_id, s_state
              ->  XN Network  (cost=3009609646383.44..3009609646383.94 rows=201 width=54)
                    Send to leader
                    ->  XN Sort  (cost=3009609646383.44..3009609646383.94 rows=201 width=54)
                          Sort Key: i_item_id, s_state
                          ->  XN Append  (cost=1003203855460.24..2009609646375.75 rows=201 width=54)
                                ->  XN Subquery Scan "*SELECT* 1"  (cost=1003203855460.24..1003203855461.49 rows=100 width=54)
                                      ->  XN Limit  (cost=1003203855460.24..1003203855460.49 rows=100 width=54)
                                            ->  XN Sort  (cost=1003203855460.24..1003203855460.60 rows=141 width=54)
                                                  Sort Key: item.i_item_id, store.s_state
                                                  ->  XN HashAggregate  (cost=3203855453.80..3203855455.21 rows=141 width=54)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3203855045.27..3203855451.69 rows=141 width=54)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                              ->  XN Hash  (cost=3203855044.92..3203855044.92 rows=138 width=38)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34593.99..3203855044.92 rows=138 width=38)
                                                                          Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=34593.81..3201455041.56 rows=144 width=36)
                                                                                Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41461218.96 rows=11306 width=40)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2511031 width=44)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                  Filter: (d_year = 1999)
                                                                                ->  XN Hash  (cost=33614.00..33614.00 rows=26333 width=4)
                                                                                      ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=26333 width=4)
                                                                                            Filter: (((cd_education_status)::text = 'Advanced Degree'::text) AND ((cd_marital_status)::text = 'W'::text) AND ((cd_gender)::text = 'F'::text))
                                                                          ->  XN Hash  (cost=0.15..0.15 rows=12 width=10)
                                                                                ->  XN Seq Scan on store  (cost=0.00..0.15 rows=12 width=10)
                                                                                      Filter: ((s_state)::text = 'TN'::text)
                                ->  XN Subquery Scan "*SELECT* 2"  (cost=1003202895459.89..1003202895461.14 rows=100 width=48)
                                      ->  XN Limit  (cost=1003202895459.89..1003202895460.14 rows=100 width=48)
                                            ->  XN Sort  (cost=1003202895459.89..1003202895460.24 rows=141 width=48)
                                                  Sort Key: item.i_item_id
                                                  ->  XN HashAggregate  (cost=3202895453.45..3202895454.86 rows=141 width=48)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3202895045.27..3202895451.69 rows=141 width=48)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                              ->  XN Hash  (cost=3202895044.92..3202895044.92 rows=138 width=32)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34593.99..3202895044.92 rows=138 width=32)
                                                                          Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=34593.81..3201455041.56 rows=144 width=36)
                                                                                Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41461218.96 rows=11306 width=40)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2511031 width=44)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                  Filter: (d_year = 1999)
                                                                                ->  XN Hash  (cost=33614.00..33614.00 rows=26333 width=4)
                                                                                      ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=26333 width=4)
                                                                                            Filter: (((cd_education_status)::text = 'Advanced Degree'::text) AND ((cd_marital_status)::text = 'W'::text) AND ((cd_gender)::text = 'F'::text))
                                                                          ->  XN Hash  (cost=0.15..0.15 rows=12 width=4)
                                                                                ->  XN Seq Scan on store  (cost=0.00..0.15 rows=12 width=4)
                                                                                      Filter: ((s_state)::text = 'TN'::text)
                                ->  XN Network  (cost=3202895453.11..3202895453.12 rows=1 width=28)
                                      Distribute Round Robin
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=3202895453.11..3202895453.12 rows=1 width=28)
                                            ->  XN Aggregate  (cost=3202895453.11..3202895453.11 rows=1 width=28)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=3202895045.27..3202895451.69 rows=141 width=28)
                                                        Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                        ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=4)
                                                        ->  XN Hash  (cost=3202895044.92..3202895044.92 rows=138 width=32)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=34593.99..3202895044.92 rows=138 width=32)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34593.81..3201455041.56 rows=144 width=36)
                                                                          Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41461218.96 rows=11306 width=40)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2511031 width=44)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                            Filter: (d_year = 1999)
                                                                          ->  XN Hash  (cost=33614.00..33614.00 rows=26333 width=4)
                                                                                ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=26333 width=4)
                                                                                      Filter: (((cd_education_status)::text = 'Advanced Degree'::text) AND ((cd_marital_status)::text = 'W'::text) AND ((cd_gender)::text = 'F'::text))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=12 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..0.15 rows=12 width=4)
                                                                                Filter: ((s_state)::text = 'TN'::text)
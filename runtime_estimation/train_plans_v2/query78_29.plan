XN Limit  (cost=1000144729718.89..1000144729718.89 rows=1 width=96)
  ->  XN Merge  (cost=1000144729718.89..1000144729718.89 rows=1 width=96)
        Merge Key: t_s_secyear.customer_last_name, t_s_secyear.customer_id, t_s_secyear.customer_first_name
        ->  XN Network  (cost=1000144729718.89..1000144729718.89 rows=1 width=96)
              Send to leader
              ->  XN Sort  (cost=1000144729718.89..1000144729718.89 rows=1 width=96)
                    Sort Key: t_s_secyear.customer_last_name, t_s_secyear.customer_id, t_s_secyear.customer_first_name
                    ->  XN Hash Join DS_BCAST_INNER  (cost=123609712.47..144729718.88 rows=1 width=96)
                          Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer"."year" = "inner"."year"))
                          Join Filter: (CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END < CASE WHEN ("inner".year_total > 0::double precision) THEN ("inner".year_total / "inner".year_total) ELSE NULL::double precision END)
                          ->  XN Subquery Scan t_s_secyear  (cost=33585135.04..33585138.07 rows=134 width=108)
                                ->  XN Append  (cost=33585135.04..33585136.73 rows=134 width=51)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=33585135.04..33585136.70 rows=133 width=51)
                                            ->  XN HashAggregate  (cost=33585135.04..33585135.37 rows=133 width=51)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=702882.05..33585133.38 rows=133 width=51)
                                                        Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                        ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=43)
                                                        ->  XN Hash  (cost=702881.70..702881.70 rows=137 width=16)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..702881.70 rows=137 width=16)
                                                                    Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2623834 width=16)
                                                                          Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                Filter: ((d_year = 2001) AND ((d_year = 2001) OR (d_year = 2000)))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=0.02..0.03 rows=1 width=0)
                                            ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                  ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                        ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                              Distribute Round Robin
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    One-Time Filter: false
                          ->  XN Hash  (cost=90024577.36..90024577.36 rows=16 width=124)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=65684859.90..90024577.36 rows=16 width=124)
                                      Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                                      ->  XN Subquery Scan t_w_secyear  (cost=0.02..10259716.89 rows=42 width=44)
                                            ->  XN Append  (cost=0.02..10259716.47 rows=42 width=51)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=0.02..0.03 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=10259715.93..10259716.44 rows=41 width=51)
                                                        ->  XN HashAggregate  (cost=10259715.93..10259716.03 rows=41 width=51)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=657465.01..10259715.42 rows=41 width=51)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=43)
                                                                    ->  XN Hash  (cost=657464.91..657464.91 rows=40 width=16)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..657464.91 rows=40 width=16)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                            Filter: ((d_year = 2001) AND ((d_year = 2001) OR (d_year = 2000)))
                                      ->  XN Hash  (cost=65684859.84..65684859.84 rows=16 width=80)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=43844852.78..65684859.84 rows=16 width=80)
                                                  Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer"."year" = "inner"."year"))
                                                  ->  XN Subquery Scan t_s_firstyear  (cost=33585135.37..33585139.07 rows=134 width=44)
                                                        ->  XN Append  (cost=33585135.37..33585137.73 rows=134 width=51)
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=33585135.37..33585137.70 rows=133 width=51)
                                                                    ->  XN HashAggregate  (cost=33585135.37..33585136.37 rows=133 width=51)
                                                                          Filter: ("max"(ss_net_paid) > 0::double precision)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=702882.05..33585133.38 rows=133 width=51)
                                                                                Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=43)
                                                                                ->  XN Hash  (cost=702881.70..702881.70 rows=137 width=16)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..702881.70 rows=137 width=16)
                                                                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2623834 width=16)
                                                                                                  Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                                        Filter: ((d_year = 2000) AND ((d_year = 2001) OR (d_year = 2000)))
                                                              ->  XN Subquery Scan "*SELECT* 2"  (cost=0.02..0.03 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                                  ->  XN Hash  (cost=10259717.20..10259717.20 rows=42 width=44)
                                                        ->  XN Subquery Scan t_w_firstyear  (cost=0.02..10259717.20 rows=42 width=44)
                                                              ->  XN Append  (cost=0.02..10259716.78 rows=42 width=51)
                                                                    ->  XN Subquery Scan "*SELECT* 1"  (cost=0.02..0.03 rows=1 width=0)
                                                                          ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                            Distribute Round Robin
                                                                                            ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                                  One-Time Filter: false
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=10259716.03..10259716.75 rows=41 width=51)
                                                                          ->  XN HashAggregate  (cost=10259716.03..10259716.34 rows=41 width=51)
                                                                                Filter: ("max"(ws_net_paid) > 0::double precision)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=657465.01..10259715.42 rows=41 width=51)
                                                                                      Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                                      ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=43)
                                                                                      ->  XN Hash  (cost=657464.91..657464.91 rows=40 width=16)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..657464.91 rows=40 width=16)
                                                                                                  Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                                  ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                                              Filter: ((d_year = 2000) AND ((d_year = 2001) OR (d_year = 2000)))
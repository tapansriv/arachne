XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 1998) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10428,10484,10503,10536,10734,10782,11371,11403,11412,11573,11696,11875,12112,12217,12359,12471,12501,12618,12662,12803,12832,12872,12894,13146,13264,13595,13597,13938,14327,14381,14495,14511,14653,14655,14739,14819,14927,15175,15248,15388,15657,15661,15758,15783,15815,15891,15987,16215,16239,16671,16733,17046,17188,17458,17494,17677,17766,17779,18059,18108,18209,18313,18421,18628,19176,19272,19276,19347,19571,19905,19912,20172,20259,20302,20421,20478,20692,20765,21026,21502,21649,21687,21714,21946,21984,22163,22272,22549,22631,22667,22701,22879,22907,22909,23013,23143,23470,23745,23960,24136,24645,24710,24737,24802,24977,25120,25807,26124,26486,26741,27919,28164,28900,29585,29664,29836,29877,30656,30694,31148,31386,31409,31466,31574,31752,31856,31870,31950,31951,32010,32048,32054,32142,32506,32737,32747,33682,33718,33799,33807,34415,34578,34731,35462,35777,36016,36268,36328,36646,36674,36828,36895,36941,36975,37337,37360,37622,37772,38071,38376,38378,38884,39000,39395,39516,39575,39863,39908,40523,40665,40701,40945,41000,41001,41017,41056,41094,41298,41534,41800,41837,41968,42566,43067,43068,43234,43237,43452,43654,43817,43936,43993,44125,44171,44846,45130,45263,45433,45477,45531,45802,45919,46224,46413,46778,46914,47215,47467,47633,48426,48439,48589,48789,48825,48848,48934,49105,49183,49480,49710,50031,50366,50797,51261,51438,51709,53276,53289,53555,54656,54659,54669,54678,55239,55584,55658,55827,55852,55913,56020,56594,56666,57214,57349,57549,57767,57875,57931,58185,58293,58505,58564,58851,59107,59252,59349,59583,59780,60160,60171,60432,60731,61111,61123,61525,62068,62118,62207,62238,62748,62762,62765,62816,63124,63454,63523,63558,63692,63800,64020,64027,64048,64452,64751,64838,64919,65415,65944,66010,66084,67058,67128,67258,67554,67578,67624,67788,67988,68122,68578,68832,69230,69255,69410,69446,69624,70130,70242,70493,71978,71984,72071,72174,72449,72664,72685,73075,73178,73395,73522,73990,74103,74352,74722,74744,75040,75402,75798,75809,75985,76093,76302,78202,78350,79482,79616,80029,80262,80558,80728,80961,81534,81761,81764,82007,82149,82204,82545,82789,82851,83507,83806,83886,83893,83935,83938,84228,84649,85046,85081,85236,85495,86162,86632,86906,87626,88326,88433,88450,88682,88707,89020,89216,89467,89839,90627,92376,92879,92915,93517,93546,93643,93654,93781,94588,95264,95346,95445,95807,96505,96570,97113,97143,97242,97773,98125,98575,99331,99646,99976}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
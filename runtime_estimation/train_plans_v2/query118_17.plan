XN Limit  (cost=2002060693497.85..2002060693498.10 rows=100 width=80)
  ->  XN Merge  (cost=2002060693497.85..2002060693500.37 rows=1011 width=80)
        Merge Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
        ->  XN Network  (cost=2002060693497.85..2002060693500.37 rows=1011 width=80)
              Send to leader
              ->  XN Sort  (cost=2002060693497.85..2002060693500.37 rows=1011 width=80)
                    Sort Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
                    ->  XN Window  (cost=1002060693422.11..1002060693447.39 rows=1011 width=80)
                          Partition: lochierarchy, CASE WHEN (g_class = 0) THEN i_category ELSE NULL::character varying END
                          Order: total_sum
                          ->  XN Sort  (cost=1002060693422.11..1002060693424.64 rows=1011 width=80)
                                Sort Key: lochierarchy, CASE WHEN (g_class = 0) THEN i_category ELSE NULL::character varying END, total_sum
                                ->  XN Network  (cost=686897786.21..2060693371.66 rows=1011 width=80)
                                      Distribute
                                      ->  XN Subquery Scan results_rollup  (cost=686897786.21..2060693371.66 rows=1011 width=80)
                                            ->  XN Unique  (cost=686897786.21..2060693361.55 rows=1011 width=28)
                                                  ->  XN Append  (cost=686897786.21..2060693346.38 rows=1011 width=28)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=686897786.21..686897798.71 rows=1000 width=28)
                                                              ->  XN HashAggregate  (cost=686897786.21..686897788.71 rows=1000 width=28)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=39497323.16..686897761.33 rows=3317 width=28)
                                                                          Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                          ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                                          ->  XN Hash  (cost=39497315.07..39497315.07 rows=3237 width=12)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.56..39497315.07 rows=3237 width=12)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=329 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=329 width=4)
                                                                                                  Filter: ((d_month_seq <= 1187) AND (d_month_seq >= 1176))
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=686897777.92..686897778.04 rows=10 width=17)
                                                              ->  XN HashAggregate  (cost=686897777.92..686897777.94 rows=10 width=17)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=39497323.16..686897761.33 rows=3317 width=17)
                                                                          Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                          ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=13)
                                                                          ->  XN Hash  (cost=39497315.07..39497315.07 rows=3237 width=12)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.56..39497315.07 rows=3237 width=12)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=329 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=329 width=4)
                                                                                                  Filter: ((d_month_seq <= 1187) AND (d_month_seq >= 1176))
                                                        ->  XN Network  (cost=686897769.62..686897769.63 rows=1 width=8)
                                                              Distribute Round Robin
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=686897769.62..686897769.63 rows=1 width=8)
                                                                    ->  XN Aggregate  (cost=686897769.62..686897769.62 rows=1 width=8)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=39497323.16..686897761.33 rows=3317 width=8)
                                                                                Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                                ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=4)
                                                                                ->  XN Hash  (cost=39497315.07..39497315.07 rows=3237 width=12)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1096.56..39497315.07 rows=3237 width=12)
                                                                                            Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                            ->  XN Hash  (cost=1095.73..1095.73 rows=329 width=4)
                                                                                                  ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=329 width=4)
                                                                                                        Filter: ((d_month_seq <= 1187) AND (d_month_seq >= 1176))
XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10249,10264,10443,10719,11173,11261,11322,12059,12636,13013,13070,14140,14145,14260,15354,15532,15796,16332,16545,16633,16648,16924,17033,17230,17456,17967,18086,18118,18165,18291,18299,18344,18864,19170,19328,19366,19501,19593,19606,19743,20036,20533,20560,20870,20944,21245,21270,21860,21919,22381,22491,22956,23120,23524,23856,23924,24102,24337,24605,24663,24869,24989,25662,25695,25796,25920,26158,26389,26756,27327,27530,27684,27756,28141,28205,28289,28773,28827,29076,29613,29759,29812,29861,29902,29906,29952,30407,30431,30588,31691,31896,31909,32084,32164,32293,32319,32362,32435,32452,32470,32517,33055,33125,34155,34188,34707,34769,34833,34881,35020,35211,35818,36137,36565,36649,36792,36848,37126,37203,37417,37421,37451,37736,38270,38501,38507,38639,38677,39453,39745,40095,40237,40241,41106,41280,41454,41616,41686,42163,42393,42418,42509,42953,42958,43005,43105,43139,43219,43513,43652,44184,44199,44716,44866,45075,45429,45589,45666,46107,46152,46157,46921,47281,47283,47312,47743,48073,48089,48213,48358,48629,48941,48958,49289,49290,49710,50129,50168,50482,50899,50977,51028,51061,51205,51215,51471,51523,51955,52124,52475,52665,53157,53168,53221,53841,54170,54369,55370,55399,55452,55784,56301,56552,56558,56953,57106,57298,57347,57665,57673,57768,57915,57944,57961,58040,58116,58352,58469,58524,58663,58799,59223,59280,59482,59783,59957,60498,60538,60886,60941,61333,61506,61753,61818,61838,62074,62471,63556,63727,64312,64416,64455,64505,64625,64653,64657,64674,64861,64970,65279,65323,65376,65391,65511,65646,66115,66449,66514,66633,67129,67442,67587,67952,68232,68387,68481,68497,68507,68840,69127,69185,69471,69919,70337,70386,70528,70584,71224,71605,71684,71936,71993,72159,72457,72506,72660,72740,73337,74404,74618,75092,75204,75294,75361,76191,76645,76671,76839,77383,77695,77825,78221,78422,78778,79172,79553,79593,79684,79927,80126,80566,80776,81249,81273,81314,82027,82404,82679,83557,83797,83808,83809,84247,84372,84839,85134,85136,85771,85943,86019,86052,86816,86839,87169,87261,87488,87510,87676,87936,87958,88021,88025,88371,88704,88777,88850,88862,89057,89128,89247,89332,89341,89587,89728,90075,90197,90343,90607,90610,90762,91170,91239,91241,91360,91481,91613,91648,92048,92608,93168,93358,93877,94300,94499,94674,94731,95171,95207,95405,95631,95728,95734,96221,96611,97214,97271,97286,97335,97410,97868,98141,98211,98215,98247,98386,98675,98734,99066,99161,99946}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
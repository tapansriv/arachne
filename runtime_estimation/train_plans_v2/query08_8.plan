XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10013,10060,10103,10409,10501,10775,11378,11528,11554,11639,11757,11890,11969,12184,12324,12347,12377,12463,12588,12770,13041,13113,13246,13478,13509,13523,13720,13763,14066,14277,14291,14300,14625,15051,15386,15686,15944,16050,16232,16696,17218,17225,17922,17966,18115,18369,18957,19112,19595,19980,20194,20636,20869,21728,21935,22044,22231,22372,22395,22433,23029,23058,23255,23284,23497,23594,23712,23740,23786,24200,24299,24617,24820,24837,24857,25190,25947,26103,26118,26120,26138,26148,26715,26868,27307,27455,28197,28448,28566,28639,29770,29861,30008,30105,30151,30393,30645,30754,31050,32076,32247,32276,32407,32521,32618,32818,32897,32925,33234,33261,33339,33498,33829,33926,34649,35248,35298,36389,36694,36733,37192,37256,37261,37331,37435,37520,37941,38379,38512,38601,38701,38845,38868,39100,39174,39460,39567,39623,39752,39867,39928,39946,40058,40072,40111,40364,40369,40377,40594,40839,40974,41044,41209,41256,41258,41596,41773,41850,42135,42461,42623,42634,42902,43006,43253,43366,43660,43671,43702,43735,43898,44226,44361,44613,44878,45175,45985,46210,46271,46418,46715,46940,47405,47549,49246,49275,49346,49522,49612,49728,49871,50351,50538,50715,50852,52802,52879,53095,53242,53491,53517,53767,53806,54131,54171,54475,54528,55023,55099,55174,55622,56076,56553,56651,56761,57477,57499,57751,58018,58335,58674,58685,58844,59445,59455,59574,59794,60566,60608,60863,60900,60987,61153,61173,61258,61426,61455,61515,61718,61810,62465,62748,62821,63044,63145,63149,63205,63488,63824,63926,64119,64146,64282,64365,64509,64768,65040,65051,65173,65276,65361,66104,66147,66331,66332,66600,66820,66840,67171,67238,67436,68041,68208,68224,68849,68854,69396,69551,70203,70227,70922,71015,71058,71165,71308,71317,71353,71367,71558,71642,71751,72278,72303,72581,72696,72816,73265,73369,73632,73752,73815,73912,74326,74780,74873,75010,75051,75098,75300,75588,75710,76011,76293,76446,76863,77251,77331,77430,77960,78393,78461,78532,78770,78772,78922,79068,79079,79715,79727,79983,80189,80334,80335,80708,81310,81702,82544,82568,82753,82940,83502,84190,84522,84545,84628,84698,84700,84904,85049,85353,86516,86687,86944,87005,87387,87409,87448,87681,87781,87833,87844,87990,88071,88726,88789,88800,89134,89434,89486,89782,89993,90282,90586,90978,91356,91691,91879,92359,92642,93450,93472,94084,94902,96075,96178,96179,96238,96249,96258,96519,96924,97396,97532,98144,98619,98691,98767,99201,99517,99779}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
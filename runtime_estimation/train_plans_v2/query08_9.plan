XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1999) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10033,10394,10548,10661,10834,10869,10897,10943,11243,11322,11657,11688,12407,12475,12669,12944,12963,13193,13277,13403,13649,13782,13920,14268,14276,14439,14872,15125,15428,15544,15614,15837,15870,16017,16243,16713,16950,16973,17452,18055,18099,18482,18540,18686,18792,18866,19053,19205,19302,19427,19616,19705,19728,20006,20022,20738,21432,21587,21788,21970,22238,22319,22354,22593,22662,22804,23356,23375,23977,24306,24869,24901,24926,25365,26350,26415,26449,26573,26727,26821,27077,27295,28029,28058,28224,28416,28499,28606,29106,29312,29675,29764,30416,30956,30979,31024,31305,31691,31846,31878,32198,32604,33529,33717,33751,34299,34373,34445,34553,34622,35459,35606,35640,36009,36023,36332,36368,36421,36700,36784,36892,37185,37628,37853,38062,38545,38827,39081,39262,39574,39597,39661,40245,40410,40987,41571,41680,41708,42229,42718,43038,43087,43164,43230,43285,43744,43975,43983,44132,44692,45556,45768,45841,45911,45927,46041,46829,46974,47434,47790,48035,48109,48546,48573,48686,48846,49076,49092,49262,49375,49713,50094,50295,50308,50910,50933,50954,51301,51314,51465,51723,51864,52247,52297,52306,52421,52664,52688,52925,52933,53049,53176,53384,53490,53683,53765,53806,54242,54365,54436,54782,54794,55066,55733,56018,56312,56438,56476,56499,56519,56566,57162,57478,58279,58631,58840,58895,59081,59396,60271,60494,60573,60881,60922,60973,61348,61421,61566,61793,62059,62279,62365,62457,62530,62794,63388,63546,63646,63690,63761,63788,63960,64442,64815,65446,65796,65903,65936,66336,66588,66903,67146,67489,67543,67953,68011,68693,68859,68943,69179,69192,70005,70018,70306,70537,70546,70569,70654,70710,70748,71094,71293,71980,72089,72216,72668,73139,73364,73651,73922,74006,74095,74236,74468,74726,74826,74860,75480,76130,76396,76466,76562,77052,77147,77313,77530,77630,77704,77728,77913,78052,78206,78649,78684,78863,79006,79175,79193,79454,79547,79646,80091,80377,80579,80908,81260,81342,81388,82148,82236,82350,82572,82790,82996,83075,83233,83331,83519,83635,83946,83963,84386,84447,84741,84777,84789,85329,86448,86608,86629,86701,86957,87224,87449,87589,87707,88107,88249,88330,88669,89182,89989,90230,90420,90937,90966,91110,91369,91431,92354,92443,92480,92518,93334,93894,94146,94172,94204,94301,94446,94697,94760,94922,95341,95443,95460,95820,96137,96650,96942,97381,97445,97455,97558,98160,98180,98274,98385,98874,98930,98957,99121,99153,99204,99227,99432,99680,99734,99955,99956}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
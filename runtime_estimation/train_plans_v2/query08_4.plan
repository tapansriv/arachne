XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10104,10138,10139,10191,10294,10386,10584,10598,12051,12502,12578,12636,12672,12693,12735,13003,13045,13057,13152,13828,14723,14742,14821,15334,15957,16271,16281,16772,16835,16873,16916,17163,17392,17646,17735,18051,18220,18353,18464,18735,18754,19290,19331,19359,19831,19839,19882,20099,20156,20472,20818,21261,21293,21668,21795,21881,22301,22351,22763,22843,22883,23176,23468,23522,23571,24027,24704,24854,25132,25306,25509,25568,25732,26391,26452,26453,26552,26592,26614,26617,26914,27528,27788,27812,28124,28270,28304,28445,28475,28505,29389,29456,29581,29707,29877,30156,30191,30259,30314,30386,30640,31148,31196,31210,31290,31327,31570,31620,31827,31872,31946,32357,32383,32753,32761,32905,33681,33944,34405,34675,35067,35119,35204,35807,35890,35941,35951,36140,36223,36465,36677,37373,37615,37687,37915,38008,38216,38321,38701,38762,38834,38849,38972,39075,39144,39185,39528,39559,40424,40428,40611,40807,41045,41145,41181,41349,41589,42444,42597,42986,43067,43285,43469,43617,43921,43928,43929,43930,43979,44065,44112,44256,44277,44317,45251,45284,45429,45973,45998,46210,46220,46464,46498,46655,47387,47905,47987,48024,48029,48182,48184,48600,48629,48689,48707,49585,49989,50169,50588,50618,51452,51501,51826,52281,52417,52487,52914,53172,53761,53878,54595,54900,55060,55107,55334,55432,55711,55770,55853,56175,56541,56662,56904,57175,57247,57280,57388,57904,58594,58836,58843,58997,59480,59562,60482,60504,60569,60958,61441,61640,62114,62649,62690,62818,62867,62875,62891,62951,63067,63440,63529,63631,63824,63962,64308,65225,65621,65969,65996,66137,66403,66902,67413,67458,67587,67723,67969,68079,68556,68559,69122,69657,69740,69760,69844,70217,71135,71183,71392,71533,71644,71657,72070,72833,73044,73202,73472,73529,73532,73711,74014,74180,74453,74645,74715,74766,74963,76307,76542,77853,78041,78206,78480,78544,78706,79002,79018,79444,79841,80208,80329,80350,80431,81029,81134,82050,82218,82700,82734,83123,83326,83405,83472,83673,84032,84321,84335,84347,84507,84746,84789,85009,86168,86169,86322,86650,86954,87194,87289,87663,87761,88358,88398,88685,88899,89115,89165,89316,89431,89847,90111,90397,90792,90868,90919,91148,91538,91556,91718,92115,92186,92490,92661,92890,92932,92935,93602,94139,94410,94414,94514,94754,94922,95050,95136,95259,95404,95656,95805,95920,96136,96270,96343,97206,97550,97614,97617,97631,97632,97657,97683,97851,97861,98573,98787,98822,98972,99026,99157,99233}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
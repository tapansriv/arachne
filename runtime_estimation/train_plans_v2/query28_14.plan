XN Limit  (cost=1000020608745.12..1000020608745.37 rows=100 width=175)
  ->  XN Merge  (cost=1000020608745.12..1000020608782.99 rows=15150 width=175)
        Merge Key: item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name
        ->  XN Network  (cost=1000020608745.12..1000020608782.99 rows=15150 width=175)
              Send to leader
              ->  XN Sort  (cost=1000020608745.12..1000020608782.99 rows=15150 width=175)
                    Sort Key: item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name
                    ->  XN HashAggregate  (cost=20607579.55..20607693.18 rows=15150 width=175)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=18646031.01..20607314.43 rows=15150 width=175)
                                Hash Cond: (("outer".d_date_sk = "inner".cs_sold_date_sk) AND ("outer".d_year = "inner".d_year))
                                ->  XN Seq Scan on date_dim d3  (cost=0.00..1278.36 rows=202 width=8)
                                      Filter: ((d_year = 1998) AND (d_moy >= 4) AND (d_moy <= 10))
                                ->  XN Hash  (cost=18646031.00..18646031.00 rows=1 width=187)
                                      ->  XN Hash Join DS_DIST_NONE  (cost=18595912.31..18646031.00 rows=1 width=187)
                                            Hash Cond: (("outer".cs_bill_customer_sk = "inner".ss_customer_sk) AND ("outer".cs_item_sk = "inner".i_item_sk))
                                            ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1428128 width=20)
                                                  Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                            ->  XN Hash  (cost=18595910.66..18595910.66 rows=330 width=195)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=17835505.64..18595910.66 rows=330 width=195)
                                                        Hash Cond: ("outer".i_item_sk = "inner".sr_item_sk)
                                                        ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=127)
                                                        ->  XN Hash  (cost=17835505.64..17835505.64 rows=1 width=68)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=4714214.80..17835505.64 rows=1 width=68)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=4714214.65..13035498.07 rows=336 width=44)
                                                                          Hash Cond: (("outer".d_date_sk = "inner".sr_returned_date_sk) AND ("outer".d_year = "inner".d_year))
                                                                          ->  XN Seq Scan on date_dim d2  (cost=0.00..1278.36 rows=202 width=8)
                                                                                Filter: ((d_year = 1998) AND (d_moy >= 4) AND (d_moy <= 10))
                                                                          ->  XN Hash  (cost=4714214.57..4714214.57 rows=16 width=44)
                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=4701266.06..4714214.57 rows=16 width=44)
                                                                                      Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_customer_sk = "inner".ss_customer_sk) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                                      ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=268623 width=24)
                                                                                            Filter: ((sr_customer_sk IS NOT NULL) AND (sr_returned_date_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=4701258.93..4701258.93 rows=950 width=28)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..4701258.93 rows=950 width=28)
                                                                                                  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2507967 width=28)
                                                                                                        Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                                  ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=8)
                                                                                                        ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=29 width=8)
                                                                                                              Filter: ((d_year = 1998) AND (d_moy = 4))
                                                                    ->  XN Hash  (cost=0.12..0.12 rows=12 width=32)
                                                                          ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=32)
XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2001) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10126,10325,10425,11482,11971,12006,12179,12548,13338,13413,13594,13987,13989,15050,15104,15154,15621,15905,16344,16537,16553,16852,16898,17007,17051,17795,17889,18090,18187,18273,18359,18439,18480,18667,18686,18700,18788,19217,19489,19678,19820,20127,20494,20698,20856,21052,21097,21377,21787,21822,22025,22103,22158,22163,22200,22504,22833,22907,22946,23162,23387,23473,23566,23793,23796,24050,24245,24297,24572,24630,24935,25035,25060,25110,25152,25194,25436,25992,26488,26689,26772,26983,27114,27622,27761,27864,28009,28427,28433,28452,28466,29192,29345,29631,29674,29891,29899,30755,30979,31195,31304,31352,31854,32069,32108,32195,32715,33197,33204,33375,34044,34343,34383,34515,34732,34839,35378,35560,35989,36046,36074,36135,36251,36799,36803,37206,37728,37750,37811,37888,38342,38388,38747,38784,38789,38804,38878,39253,39661,40008,40034,40108,40238,40355,40609,40623,40674,40693,40733,40808,40878,41223,41518,41634,41824,41959,41979,42146,42274,42476,42550,42593,42809,43063,43096,43496,44057,44059,44207,44553,45073,45104,45379,45716,45793,45856,45925,46078,46198,46487,46960,47284,47455,47499,47856,47909,48166,48698,49561,49884,50223,50337,50343,50832,51210,51607,52259,52500,52595,52866,52909,53679,54564,54570,55313,55506,55572,55838,55849,55945,56346,56527,56577,56754,57024,57290,57519,57540,57717,57943,58259,58271,58447,58689,58698,59002,59466,59835,59991,60551,60665,60925,61085,61094,61412,61590,62020,62557,62628,62659,62660,62673,62710,62733,63349,63422,63586,63681,63966,64049,64567,64701,64737,64778,65021,65217,65401,65447,65455,65525,65887,65905,66106,66212,66326,66581,67155,67281,67647,67739,69011,69023,69588,69673,70033,70142,70197,71411,71658,72117,72482,73056,73761,73912,74055,74073,74182,74393,74707,74846,74897,75406,76123,76432,76585,76634,77129,77216,77565,77892,78222,78279,78331,78479,78642,79291,79626,80828,80971,81237,81477,81483,81540,81586,81751,82217,82470,82678,82851,83470,83561,83801,83837,84325,84550,84600,84648,84855,85502,85543,85663,85879,86359,86654,86760,86900,86994,87784,88191,88627,88669,88712,88733,89307,89378,89404,89746,89871,89891,90001,90240,90339,90631,90671,90853,90871,90966,90985,90994,91126,91341,91397,91660,91928,92267,92864,92915,93047,93328,94082,94435,94519,94566,94628,94631,94658,94758,95159,95170,95537,95892,95927,96432,96433,96706,96963,97018,97229,97312,97351,97387,97694,97972,98391,98571,98902,99242,99708,99739,99772}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
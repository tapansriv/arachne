XN Seq Scan on date_dim  (cost=913.11..1826.23 rows=8 width=4)
  Filter: (d_week_seq = $0)
  InitPlan
    ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=1 width=4)
          Filter: (d_date = '2002-04-15'::date)

XN Limit  (cost=1000018957856.37..1000018957856.37 rows=1 width=66)
  ->  XN Merge  (cost=1000018957856.37..1000018957856.37 rows=1 width=66)
        Merge Key: ss_items.item_id, ss_items.ss_item_rev
        ->  XN Network  (cost=1000018957856.37..1000018957856.37 rows=1 width=66)
              Send to leader
              ->  XN Sort  (cost=1000018957856.37..1000018957856.37 rows=1 width=66)
                    Sort Key: ss_items.item_id, ss_items.ss_item_rev
                    ->  XN Hash Join DS_DIST_NONE  (cost=18957849.76..18957856.36 rows=1 width=66)
                          Hash Cond: (("outer".item_id)::text = ("inner".item_id)::text)
                          Join Filter: (("inner".cs_item_rev <= ("outer".ss_item_rev * 1.1000000000000001::double precision)) AND ("outer".ss_item_rev <= ("inner".cs_item_rev * 1.1000000000000001::double precision)) AND ("inner".cs_item_rev >= ("outer".ss_item_rev * 0.90000000000000002::double precision)) AND ("outer".ss_item_rev >= ("inner".cs_item_rev * 0.90000000000000002::double precision)) AND ("outer".ss_item_rev <= ("inner".ws_item_rev * 1.1000000000000001::double precision)) AND ("inner".ws_item_rev <= ("outer".ss_item_rev * 1.1000000000000001::double precision)) AND ("outer".ss_item_rev >= ("inner".ws_item_rev * 0.90000000000000002::double precision)) AND ("inner".ws_item_rev >= ("outer".ss_item_rev * 0.90000000000000002::double precision)))
                          ->  XN Subquery Scan ss_items  (cost=1745205.93..1745209.15 rows=258 width=50)
                                ->  XN HashAggregate  (cost=1745205.93..1745206.57 rows=258 width=28)
                                      ->  XN Hash Join DS_DIST_NONE  (cost=1744797.05..1745204.64 rows=258 width=28)
                                            Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                            ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                            ->  XN Hash  (cost=1744796.43..1744796.43 rows=251 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=841643.78..1744796.43 rows=251 width=12)
                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=16)
                                                              Filter: (ss_sold_date_sk IS NOT NULL)
                                                        ->  XN Hash  (cost=841643.76..841643.76 rows=7 width=4)
                                                              ->  XN Hash IN Join DS_BCAST_INNER  (cost=0.09..841643.76 rows=7 width=4)
                                                                    Hash Cond: ("outer".d_date = "inner".d_date)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=8)
                                                                    ->  XN Hash  (cost=0.07..0.07 rows=7 width=4)
                                                                          ->  XN Seq Scan on volt_tt_619396132595f  (cost=0.00..0.07 rows=7 width=4)
                          ->  XN Hash  (cost=17212643.83..17212643.83 rows=1 width=100)
                                ->  XN Hash Join DS_DIST_NONE  (cost=17212638.25..17212643.83 rows=1 width=100)
                                      Hash Cond: (("outer".item_id)::text = ("inner".item_id)::text)
                                      Join Filter: (("outer".cs_item_rev <= ("inner".ws_item_rev * 1.1000000000000001::double precision)) AND ("inner".ws_item_rev <= ("outer".cs_item_rev * 1.1000000000000001::double precision)) AND ("outer".cs_item_rev >= ("inner".ws_item_rev * 0.90000000000000002::double precision)) AND ("inner".ws_item_rev >= ("outer".cs_item_rev * 0.90000000000000002::double precision)))
                                      ->  XN Subquery Scan cs_items  (cost=1714400.34..1714402.07 rows=138 width=50)
                                            ->  XN HashAggregate  (cost=1714400.34..1714400.69 rows=138 width=28)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=1713993.24..1714399.65 rows=138 width=28)
                                                        Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                        ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                        ->  XN Hash  (cost=1713992.90..1713992.90 rows=137 width=12)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=841643.78..1713992.90 rows=137 width=12)
                                                                    Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=16)
                                                                          Filter: (cs_sold_date_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=841643.76..841643.76 rows=7 width=4)
                                                                          ->  XN Hash IN Join DS_BCAST_INNER  (cost=0.09..841643.76 rows=7 width=4)
                                                                                Hash Cond: ("outer".d_date = "inner".d_date)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=8)
                                                                                ->  XN Hash  (cost=0.07..0.07 rows=7 width=4)
                                                                                      ->  XN Seq Scan on volt_tt_619396132595f  (cost=0.00..0.07 rows=7 width=4)
                                      ->  XN Hash  (cost=15498237.73..15498237.73 rows=71 width=50)
                                            ->  XN Subquery Scan ws_items  (cost=15498236.85..15498237.73 rows=71 width=50)
                                                  ->  XN HashAggregate  (cost=15498236.85..15498237.02 rows=71 width=28)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1697830.78..15498236.49 rows=71 width=28)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                              ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                              ->  XN Hash  (cost=1697830.61..1697830.61 rows=69 width=12)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=841643.78..1697830.61 rows=69 width=12)
                                                                          Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                          ->  XN Hash  (cost=841643.76..841643.76 rows=7 width=4)
                                                                                ->  XN Hash IN Join DS_BCAST_INNER  (cost=0.09..841643.76 rows=7 width=4)
                                                                                      Hash Cond: ("outer".d_date = "inner".d_date)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=8)
                                                                                      ->  XN Hash  (cost=0.07..0.07 rows=7 width=4)
                                                                                            ->  XN Seq Scan on volt_tt_619396132595f  (cost=0.00..0.07 rows=7 width=4)
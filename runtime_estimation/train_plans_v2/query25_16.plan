XN HashAggregate  (cost=23431279399.08..23431280631.45 rows=1000 width=16)
  Filter: (($0 * 0.94999999999999996::double precision) < sum(((ss_quantity)::double precision * ss_sales_price)))
  InitPlan
    ->  XN Aggregate  (cost=11431147494.62..11431147494.62 rows=1 width=8)
          ->  XN Subquery Scan derived_table1  (cost=11431146585.22..11431147380.95 rows=45470 width=8)
                ->  XN HashAggregate  (cost=11431146585.22..11431146926.25 rows=45470 width=16)
                      ->  XN Hash Join DS_BCAST_INNER  (cost=164583653.17..11431146357.87 rows=45470 width=16)
                            Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                            ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=4)
                            ->  XN Hash  (cost=164583535.81..164583535.81 rows=46944 width=16)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1464.41..164583535.81 rows=46944 width=16)
                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2623834 width=20)
                                              Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                        ->  XN Hash  (cost=1460.98..1460.98 rows=1371 width=4)
                                              ->  XN Seq Scan on date_dim  (cost=0.00..1460.98 rows=1371 width=4)
                                                    Filter: ((2000 = d_year) OR (2001 = d_year) OR (2002 = d_year) OR (2003 = d_year))
  ->  XN Hash Join DS_BCAST_INNER  (cost=1250.00..12000118583.58 rows=2664176 width=16)
        Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2750568 width=16)
              Filter: (ss_customer_sk IS NOT NULL)
        ->  XN Hash  (cost=1000.00..1000.00 rows=100000 width=4)
              ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=4)

XN HashAggregate  (cost=219427127.42..219427505.21 rows=1000 width=111)
  Filter: (count(*) > 4)
  ->  XN Hash Join DS_DIST_NONE  (cost=219425229.05..219426623.70 rows=50372 width=111)
        Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
        ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=107)
        ->  XN Hash  (cost=219425106.15..219425106.15 rows=49160 width=8)
              ->  XN Hash Join DS_BCAST_INNER  (cost=1464.41..219425106.15 rows=49160 width=8)
                    Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                    ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
                          Filter: (ss_sold_date_sk IS NOT NULL)
                    ->  XN Hash  (cost=1460.98..1460.98 rows=1371 width=8)
                          ->  XN Seq Scan on date_dim  (cost=0.00..1460.98 rows=1371 width=8)
                                Filter: ((2000 = d_year) OR (2001 = d_year) OR (2002 = d_year) OR (2003 = d_year))

XN Subquery Scan derived_table2  (cost=3000015495160.81..3000015495160.85 rows=3 width=72)
  ->  XN Limit  (cost=3000015495160.81..3000015495160.82 rows=3 width=31)
        ->  XN Merge  (cost=3000015495160.81..3000015495160.82 rows=3 width=31)
              Merge Key: c_last_name, c_first_name, sales
              ->  XN Network  (cost=3000015495160.81..3000015495160.82 rows=3 width=31)
                    Send to leader
                    ->  XN Sort  (cost=3000015495160.81..3000015495160.82 rows=3 width=31)
                          Sort Key: c_last_name, c_first_name, sales
                          ->  XN Append  (cost=1000007755621.22..2000015495160.79 rows=3 width=31)
                                ->  XN Subquery Scan "*SELECT* 1"  (cost=1000007755621.22..1000007755621.23 rows=1 width=31)
                                      ->  XN Limit  (cost=1000007755621.22..1000007755621.22 rows=1 width=31)
                                            ->  XN Sort  (cost=1000007755621.22..1000007755621.22 rows=1 width=31)
                                                  Sort Key: customer.c_last_name, customer.c_first_name, sum((catalog_sales.cs_list_price * (catalog_sales.cs_quantity)::double precision))
                                                  ->  XN HashAggregate  (cost=7755621.20..7755621.21 rows=1 width=31)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=7473371.17..7755621.19 rows=1 width=31)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=23)
                                                              ->  XN Hash  (cost=7473371.17..7473371.17 rows=1 width=20)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=5433370.62..7473371.17 rows=1 width=20)
                                                                          Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                          ->  XN HashAggregate  (cost=0.54..0.54 rows=43 width=4)
                                                                                ->  XN Seq Scan on volt_tt_619398c4e2503  (cost=0.00..0.43 rows=43 width=4)
                                                                          ->  XN Hash  (cost=5433370.08..5433370.08 rows=1 width=24)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.02..5433370.08 rows=1 width=24)
                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Hash IN Join DS_BCAST_INNER  (cost=0.21..2072270.39 rows=310 width=28)
                                                                                            Hash Cond: ("outer".cs_bill_customer_sk = "inner".c_customer_sk)
                                                                                            ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1428128 width=24)
                                                                                                  Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=0.17..0.17 rows=17 width=4)
                                                                                                  ->  XN Seq Scan on volt_tt_619398c4e02ca  (cost=0.00..0.17 rows=17 width=4)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=28 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=28 width=4)
                                                                                                  Filter: ((d_year = 2000) AND (d_moy = 6))
                                ->  XN Subquery Scan "*SELECT* 2"  (cost=1000007739539.53..1000007739539.55 rows=2 width=31)
                                      ->  XN Limit  (cost=1000007739539.53..1000007739539.53 rows=2 width=31)
                                            ->  XN Sort  (cost=1000007739539.53..1000007739539.53 rows=2 width=31)
                                                  Sort Key: customer.c_last_name, customer.c_first_name, sum((web_sales.ws_list_price * (web_sales.ws_quantity)::double precision))
                                                  ->  XN HashAggregate  (cost=7739539.50..7739539.52 rows=2 width=31)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=7457289.47..7739539.49 rows=2 width=31)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=23)
                                                              ->  XN Hash  (cost=7457289.46..7457289.46 rows=1 width=20)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=5417288.92..7457289.46 rows=1 width=20)
                                                                          Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                          ->  XN HashAggregate  (cost=0.54..0.54 rows=43 width=4)
                                                                                ->  XN Seq Scan on volt_tt_619398c4e2503  (cost=0.00..0.43 rows=43 width=4)
                                                                          ->  XN Hash  (cost=5417288.38..5417288.38 rows=1 width=24)
                                                                                ->  XN Hash IN Join DS_BCAST_INNER  (cost=1096.02..5417288.38 rows=1 width=24)
                                                                                      Hash Cond: ("outer".ws_bill_customer_sk = "inner".c_customer_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1095.80..3377284.71 rows=276 width=20)
                                                                                            Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=24)
                                                                                            ->  XN Hash  (cost=1095.73..1095.73 rows=28 width=4)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=28 width=4)
                                                                                                        Filter: ((d_year = 2000) AND (d_moy = 6))
                                                                                      ->  XN Hash  (cost=0.17..0.17 rows=17 width=4)
                                                                                            ->  XN Seq Scan on volt_tt_619398c4e02ca  (cost=0.00..0.17 rows=17 width=4)
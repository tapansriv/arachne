XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10077,10477,10719,11171,11530,11890,11982,12089,12200,12366,12868,12980,13534,14242,14529,14568,14934,14995,15132,15515,16373,16473,16697,17322,17598,18130,18384,18744,19857,20116,20273,20459,20610,20671,20950,21030,21615,21740,21996,22191,22498,22722,22792,23059,23265,23579,23874,24093,24444,24728,24777,25220,25276,25295,25360,25392,25665,25868,26538,26670,27096,27107,27646,27782,28101,28324,28369,28374,28399,28484,28499,28559,28720,28812,28856,28983,29132,29386,29398,29447,29495,30207,30219,30358,30373,30408,30430,31171,32851,33365,33401,33710,33775,34210,34522,34546,34738,35152,35267,35271,35385,35800,36133,36590,36599,36654,36727,36965,37096,37107,37116,37321,37653,38548,38923,39035,39137,39164,39276,39305,39802,39878,40231,40256,40535,40724,41287,41360,41487,41700,41738,41754,42030,42231,42566,42694,42812,42999,43013,43447,43909,44258,44459,44790,44942,45664,45882,45919,46152,46272,46608,46633,46839,47716,47843,47877,47886,48924,49101,49592,49661,49981,50015,50275,50389,50421,50975,51074,51164,51341,51557,51611,51778,51982,52387,52394,52773,52789,52964,53077,53172,53226,53577,54034,54252,54350,54630,54960,55126,55194,55309,55400,55711,55718,55725,55746,55790,55933,56000,56044,56073,56080,56275,56369,56470,56555,56592,56627,56743,57061,57306,57413,58031,58385,58388,58844,58896,59261,59393,59581,59886,60082,60160,60628,61008,61079,61417,61819,62098,62246,62254,62421,62429,62808,62932,62963,63088,63115,63145,63181,63688,64571,64812,65162,65360,65558,65635,65638,65943,66136,66291,66349,66420,66655,66677,66791,67368,67369,67638,68594,68990,69055,69102,69387,69433,69610,69744,69886,70132,70137,70168,70435,70478,70505,70616,70855,71021,71416,71477,71916,71976,72150,72340,72350,72519,72955,73024,73053,73058,73507,73591,73659,74029,74125,74224,74380,74863,75015,75345,75372,75428,75487,75621,76179,76663,77018,77036,77567,77626,77945,78489,79229,79344,79502,79565,79662,79806,79921,80273,80443,80823,81125,81225,81595,81781,82007,82150,82313,83655,83802,84124,84229,84536,84761,85135,85411,85450,85607,85671,85707,85782,85830,85846,85852,86188,86203,86577,86811,86903,87422,87564,87665,87697,88171,88584,88923,89408,89792,90041,90222,90441,90505,90963,91007,91317,91405,91499,91638,92575,92771,93111,93152,93605,94028,94195,94641,95026,95412,95582,96143,96255,96437,96545,96586,96776,97051,97164,97581,97738,97842,98030,98133,98498,99070,99299,99309,99449,99583,99728,99880}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
XN Seq Scan on item  (cost=0.00..225.00 rows=1833 width=20)
  Filter: ((i_category)::text = 'Music'::text)

XN Limit  (cost=1001071916550.84..1001071916550.85 rows=3 width=40)
  ->  XN Merge  (cost=1001071916550.84..1001071916550.85 rows=3 width=40)
        Merge Key: i_item_id, sum(total_sales)
        ->  XN Network  (cost=1001071916550.84..1001071916550.85 rows=3 width=40)
              Send to leader
              ->  XN Sort  (cost=1001071916550.84..1001071916550.85 rows=3 width=40)
                    Sort Key: i_item_id, sum(total_sales)
                    ->  XN HashAggregate  (cost=1071916550.81..1071916550.82 rows=3 width=40)
                          ->  XN Subquery Scan tmp1  (cost=357383757.13..1071916550.79 rows=3 width=40)
                                ->  XN Append  (cost=357383757.13..1071916550.76 rows=3 width=28)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=357383757.13..357383757.15 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=357383757.13..357383757.14 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3663735.06..357383757.13 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=23.25..23.25 rows=1765 width=20)
                                                              ->  XN Seq Scan on volt_tt_6193928328fef  (cost=0.00..18.60 rows=1860 width=20)
                                                        ->  XN Hash  (cost=3663711.80..3663711.80 rows=2 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=3663306.78..3663711.80 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                                    ->  XN Hash  (cost=3663306.78..3663306.78 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3663306.78 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..182210.31 rows=52 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2622460 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 2002) AND (d_moy = 9))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=356994435.94..356994435.95 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=356994435.94..356994435.94 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3634413.86..356994435.94 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=23.25..23.25 rows=1765 width=20)
                                                              ->  XN Seq Scan on volt_tt_6193928328fef  (cost=0.00..18.60 rows=1860 width=20)
                                                        ->  XN Hash  (cost=3634390.61..3634390.61 rows=1 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=3633985.59..3634390.61 rows=1 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                                    ->  XN Hash  (cost=3633985.59..3633985.59 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3633985.59 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..152889.39 rows=30 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1427889 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 2002) AND (d_moy = 9))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=357538357.65..357538357.66 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=357538357.65..357538357.65 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3818335.57..357538357.65 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=23.25..23.25 rows=1765 width=20)
                                                              ->  XN Seq Scan on volt_tt_6193928328fef  (cost=0.00..18.60 rows=1860 width=20)
                                                        ->  XN Hash  (cost=3818312.32..3818312.32 rows=2 width=28)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=3617907.30..3818312.32 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                                    ->  XN Hash  (cost=3617907.30..3617907.30 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3617907.30 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..136811.29 rows=15 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=20)
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 2002) AND (d_moy = 9))
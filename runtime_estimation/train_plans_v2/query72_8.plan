XN Limit  (cost=1001361246516.29..1001361246516.54 rows=100 width=167)
  ->  XN Merge  (cost=1001361246516.29..1001361251095.72 rows=1831772 width=167)
        Merge Key: customer.c_last_name, dn.ss_ticket_number
        ->  XN Network  (cost=1001361246516.29..1001361251095.72 rows=1831772 width=167)
              Send to leader
              ->  XN Sort  (cost=1001361246516.29..1001361251095.72 rows=1831772 width=167)
                    Sort Key: customer.c_last_name, dn.ss_ticket_number
                    ->  XN Hash Join DS_BCAST_INNER  (cost=826814838.86..1361055967.96 rows=1831772 width=167)
                          Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                          Join Filter: (("outer".ca_city)::text <> ("inner".bought_city)::text)
                          ->  XN Seq Scan on customer_address current_addr  (cost=0.00..500.00 rows=50000 width=16)
                          ->  XN Hash  (cost=826814838.06..826814838.06 rows=318 width=159)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=363541584.88..826814838.06 rows=318 width=159)
                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                      ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=27)
                                      ->  XN Hash  (cost=363541584.10..363541584.10 rows=313 width=140)
                                            ->  XN Subquery Scan dn  (cost=363541578.62..363541584.10 rows=313 width=140)
                                                  ->  XN HashAggregate  (cost=363541578.62..363541580.97 rows=313 width=48)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=223620445.01..363541573.14 rows=313 width=48)
                                                              Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                              ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=16)
                                                              ->  XN Hash  (cost=223620444.22..223620444.22 rows=318 width=36)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1756.44..223620444.22 rows=318 width=36)
                                                                          Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1756.24..222420435.86 rows=398 width=40)
                                                                                Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1643.73..6300282.95 rows=1619 width=44)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2385519 width=48)
                                                                                            Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=1643.60..1643.60 rows=52 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1643.60 rows=52 width=4)
                                                                                                  Filter: (((d_year = 2001) OR (d_year = 2002) OR (d_year = 2000)) AND (d_dom <= 2) AND (d_dom >= 1))
                                                                                ->  XN Hash  (cost=108.00..108.00 rows=1801 width=4)
                                                                                      ->  XN Seq Scan on household_demographics  (cost=0.00..108.00 rows=1801 width=4)
                                                                                            Filter: ((hd_vehicle_count = -1) OR (hd_dep_count = 7))
                                                                          ->  XN Hash  (cost=0.18..0.18 rows=10 width=4)
                                                                                ->  XN Seq Scan on store  (cost=0.00..0.18 rows=10 width=4)
                                                                                      Filter: (((s_city)::text = 'Midway'::text) OR ((s_city)::text = 'Fairview'::text))
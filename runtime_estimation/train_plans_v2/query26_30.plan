XN Merge  (cost=1000040892648.90..1000040892648.91 rows=2 width=35)
  Merge Key: customer.c_last_name, customer.c_first_name, store.s_store_name
  InitPlan
    ->  XN Aggregate  (cost=22869836.49..22869836.49 rows=1 width=8)
          ->  XN Subquery Scan ssales_1  (cost=22869835.44..22869836.31 rows=70 width=8)
                ->  XN HashAggregate  (cost=22869835.44..22869835.61 rows=70 width=84)
                      ->  XN Hash Join DS_DIST_NONE  (cost=22858115.60..22869833.51 rows=70 width=84)
                            Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                            ->  XN Hash Join DS_DIST_NONE  (cost=22857890.60..22867953.60 rows=50537 width=55)
                                  Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                  ->  XN Seq Scan on store_returns store_returns_1  (cost=0.00..2875.14 rows=287514 width=8)
                                  ->  XN Hash  (cost=22857888.66..22857888.66 rows=388 width=55)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=7643356.44..22857888.66 rows=388 width=55)
                                              Hash Cond: (("outer".ss_customer_sk = "inner".c_customer_sk) AND ("outer".ss_store_sk = "inner".s_store_sk))
                                              ->  XN Seq Scan on store_sales store_sales_1  (cost=0.00..28804.04 rows=2629105 width=24)
                                                    Filter: ((ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                              ->  XN Hash  (cost=7643356.31..7643356.31 rows=27 width=47)
                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=361105.90..7643356.31 rows=27 width=47)
                                                          Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                          Join Filter: (("outer".c_birth_country)::text <> upper(("inner".ca_country)::text))
                                                          ->  XN Seq Scan on customer customer_1  (cost=0.00..1000.00 rows=100000 width=39)
                                                          ->  XN Hash  (cost=361105.87..361105.87 rows=13 width=45)
                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..361105.87 rows=13 width=45)
                                                                      Hash Cond: (("outer".ca_zip)::text = ("inner".s_zip)::text)
                                                                      ->  XN Seq Scan on customer_address customer_address_1  (cost=0.00..500.00 rows=48447 width=36)
                                                                            Filter: (ca_zip IS NOT NULL)
                                                                      ->  XN Hash  (cost=0.15..0.15 rows=1 width=27)
                                                                            ->  XN Seq Scan on store store_1  (cost=0.00..0.15 rows=1 width=27)
                                                                                  Filter: (s_market_id = 7)
                            ->  XN Hash  (cost=180.00..180.00 rows=18000 width=41)
                                  ->  XN Seq Scan on item item_1  (cost=0.00..180.00 rows=18000 width=41)
  ->  XN Network  (cost=1000018022812.41..1000018022812.42 rows=2 width=35)
        Send to leader
        ->  XN Sort  (cost=1000018022812.41..1000018022812.42 rows=2 width=35)
              Sort Key: customer.c_last_name, customer.c_first_name, store.s_store_name
              ->  XN HashAggregate  (cost=18022812.39..18022812.40 rows=2 width=35)
                    Filter: ($0 < sum(ss_net_paid_inc_tax))
                    ->  XN Hash Join DS_BCAST_INNER  (cost=6132475.29..18022812.36 rows=2 width=35)
                          Hash Cond: (("outer".ss_customer_sk = "inner".c_customer_sk) AND ("outer".ss_store_sk = "inner".s_store_sk))
                          ->  XN Hash Join DS_DIST_NONE  (cost=89118.84..99181.88 rows=10961 width=16)
                                Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".i_item_sk))
                                ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=287514 width=8)
                                ->  XN Hash  (cost=88807.54..88807.54 rows=62260 width=28)
                                      ->  XN Hash Join DS_DIST_NONE  (cost=226.04..88807.54 rows=62260 width=28)
                                            Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2629105 width=24)
                                                  Filter: ((ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                            ->  XN Hash  (cost=225.00..225.00 rows=416 width=4)
                                                  ->  XN Seq Scan on item  (cost=0.00..225.00 rows=416 width=4)
                                                        Filter: ((i_color)::text = 'wheat'::text)
                          ->  XN Hash  (cost=6043356.31..6043356.31 rows=27 width=35)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=321105.90..6043356.31 rows=27 width=35)
                                      Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                      Join Filter: (("outer".c_birth_country)::text <> upper(("inner".ca_country)::text))
                                      ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=39)
                                      ->  XN Hash  (cost=321105.87..321105.87 rows=13 width=33)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..321105.87 rows=13 width=33)
                                                  Hash Cond: (("outer".ca_zip)::text = ("inner".s_zip)::text)
                                                  ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=48447 width=30)
                                                        Filter: (ca_zip IS NOT NULL)
                                                  ->  XN Hash  (cost=0.15..0.15 rows=1 width=21)
                                                        ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=21)
                                                              Filter: (s_market_id = 7)
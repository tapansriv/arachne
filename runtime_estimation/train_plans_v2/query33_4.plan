XN HashAggregate  (cost=112923587.03..112923587.76 rows=293 width=18)
  ->  XN Hash Join DS_BCAST_INNER  (cost=41402456.89..112923584.83 rows=293 width=18)
        Hash Cond: ("outer".ca_address_sk = "inner".wr_returning_addr_sk)
        ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=10)
        ->  XN Hash  (cost=41402456.15..41402456.15 rows=298 width=16)
              ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41402456.15 rows=298 width=16)
                    Hash Cond: ("outer".wr_returned_date_sk = "inner".d_date_sk)
                    ->  XN Seq Scan on web_returns  (cost=0.00..717.63 rows=65725 width=20)
                          Filter: ((wr_returning_addr_sk IS NOT NULL) AND (wr_returned_date_sk IS NOT NULL))
                    ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                          ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                Filter: (2002 = d_year)

XN Limit  (cost=1001115212660.22..1001115212660.34 rows=50 width=155)
  ->  XN Merge  (cost=1001115212660.22..1001115212660.34 rows=50 width=155)
        Merge Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date_sk, volt_tt_619392301451a.col2
        ->  XN Network  (cost=1001115212660.22..1001115212660.34 rows=50 width=155)
              Send to leader
              ->  XN Sort  (cost=1001115212660.22..1001115212660.34 rows=50 width=155)
                    Sort Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date_sk, volt_tt_619392301451a.col2
                    ->  XN Hash Join DS_BCAST_INNER  (cost=185090266.28..1115212658.80 rows=50 width=155)
                          Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=185089639.90..1049091933.60 rows=4370 width=159)
                                Hash Cond: ("outer".c_customer_sk = "inner".wr_returning_customer_sk)
                                ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=155)
                                ->  XN Hash  (cost=185089629.10..185089629.10 rows=4320 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=129086628.74..185089629.10 rows=4320 width=12)
                                            Hash Cond: (("outer".ca_state)::text = ("inner".ca_state)::text)
                                            Join Filter: ("inner".col0 < "outer".col2)
                                            ->  XN Seq Scan on volt_tt_619392301451a  (cost=0.00..133.57 rows=13357 width=18)
                                            ->  XN Hash  (cost=129086628.24..129086628.24 rows=200 width=18)
                                                  ->  XN Subquery Scan volt_dt_0  (cost=129086625.24..129086628.24 rows=200 width=18)
                                                        ->  XN HashAggregate  (cost=129086625.24..129086626.24 rows=200 width=18)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=89083592.48..129086560.44 rows=12960 width=18)
                                                                    Hash Cond: (("outer".ca_state)::text = ("inner".ca_state)::text)
                                                                    ->  XN Seq Scan on volt_tt_619392301451a  (cost=0.00..133.57 rows=13357 width=14)
                                                                    ->  XN Hash  (cost=89083591.98..89083591.98 rows=200 width=10)
                                                                          ->  XN Subquery Scan volt_dt_1  (cost=89083586.30..89083591.98 rows=200 width=10)
                                                                                ->  XN Unique  (cost=89083586.30..89083589.98 rows=200 width=10)
                                                                                      ->  XN Subquery Scan ctr1  (cost=89083586.30..89083589.24 rows=294 width=10)
                                                                                            ->  XN HashAggregate  (cost=89083586.30..89083586.30 rows=294 width=10)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=41402456.89..89083584.83 rows=294 width=10)
                                                                                                        Hash Cond: ("outer".ca_address_sk = "inner".wr_returning_addr_sk)
                                                                                                        ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=10)
                                                                                                        ->  XN Hash  (cost=41402456.15..41402456.15 rows=298 width=8)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41402456.15 rows=298 width=8)
                                                                                                                    Hash Cond: ("outer".wr_returned_date_sk = "inner".d_date_sk)
                                                                                                                    ->  XN Seq Scan on web_returns  (cost=0.00..717.63 rows=65725 width=12)
                                                                                                                          Filter: ((wr_returning_addr_sk IS NOT NULL) AND (wr_returned_date_sk IS NOT NULL))
                                                                                                                    ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                                                Filter: (d_year = 2002)
                          ->  XN Hash  (cost=625.00..625.00 rows=551 width=4)
                                ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=551 width=4)
                                      Filter: ((ca_state)::text = 'SC'::text)
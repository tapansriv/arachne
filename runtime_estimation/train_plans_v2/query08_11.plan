XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10008,10333,10350,10434,10681,10684,10762,10891,11338,11792,11900,12002,12076,12091,12493,12862,12997,13071,13120,13234,13293,13388,13458,13511,13786,13996,14218,14282,14583,14721,14773,14857,14980,15308,15313,15463,15855,16279,16473,16624,16680,17098,17284,18297,18452,18620,18801,19122,19241,19683,19693,19713,20051,20130,20441,20573,20926,20990,21176,21353,21420,21747,21808,21830,22263,22390,22690,22914,22924,23330,23843,23958,24075,24096,24259,24300,24683,24856,25073,25391,25927,26616,26798,27649,27677,27921,28624,28897,28979,28997,29379,30013,30195,30216,30471,30731,30749,30826,30911,31277,31312,31345,31494,31742,32391,32498,32862,32903,33273,33382,33427,33747,34158,34514,34831,35536,35610,35703,35764,36553,36556,36625,36784,36967,37030,37208,37363,37970,38267,38291,38792,38811,39074,39208,39277,39625,39928,40149,40775,41019,41400,41423,41766,41911,42709,42773,43094,43264,43373,43432,43600,43631,43879,44780,44828,45125,45160,45230,45276,45734,46317,46358,46430,47185,47196,47772,47865,48105,48291,48442,48463,48762,48814,49426,50148,51107,51314,51333,51856,52184,52248,52252,52511,52611,52620,52662,53037,53126,53276,53797,53890,54014,54056,54207,54809,54844,54879,55229,55451,55559,55594,55650,56265,56286,56429,57855,57901,57991,58177,58362,58747,58858,58870,58980,59451,59851,60387,60545,60701,60726,60938,61076,61267,61521,61783,61790,61803,62195,62390,62554,62555,63468,63627,63790,64083,64113,64708,64926,65300,65428,65543,65589,65596,65714,66044,66484,66504,66763,66920,67375,67432,67535,67612,67865,68190,68257,68309,68335,68434,68484,68496,68596,68697,68831,69049,69107,69173,69586,69809,69955,69984,70265,70462,70712,71230,71366,71587,71903,72135,72465,72581,73180,74022,74535,74613,75026,75065,75322,75412,75897,76185,76211,76344,76893,76973,77131,77526,77689,77699,77934,78053,78436,78780,79432,79676,80527,80615,80691,80975,81138,81436,81477,81497,81587,81655,81749,81890,82206,82354,82779,82957,83014,83078,83337,83449,83593,83686,83982,84390,84417,84541,84864,85427,85540,85788,85847,86471,86578,86938,86972,87330,87457,87591,87624,87897,88254,88308,88367,88638,88670,89044,89409,89828,90011,90124,90333,90352,90420,90701,90916,91066,91222,91595,91695,91841,91957,92079,92229,92859,92982,93174,93380,93831,94155,94339,94978,95139,95372,95430,95840,95901,95940,96536,96587,96649,97500,97560,97733,97958,97995,98383,98520,99022,99028,99108,99294,99368,99431,99645,99692}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
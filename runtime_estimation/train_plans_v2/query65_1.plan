XN Nested Loop DS_BCAST_INNER  (cost=1967399.01..2127399.06 rows=1 width=16)
  ->  XN Subquery Scan all_sales  (cost=864373.74..864373.75 rows=1 width=8)
        ->  XN Aggregate  (cost=864373.74..864373.74 rows=1 width=8)
              ->  XN Hash Join DS_BCAST_INNER  (cost=663277.62..864373.73 rows=1 width=8)
                    Hash Cond: ("outer".d_date_sk = "inner".ss_sold_date_sk)
                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                          Filter: ((d_year = 2001) AND (d_moy = 12))
                    ->  XN Hash  (cost=663277.62..663277.62 rows=1 width=12)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=543029.68..663277.62 rows=1 width=12)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_DIST_NONE  (cost=543029.52..543277.38 rows=6 width=16)
                                      Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                      ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1824 width=4)
                                            Filter: ((i_category)::text = 'Electronics'::text)
                                      ->  XN Hash  (cost=543029.40..543029.40 rows=51 width=20)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=122875.04..543029.40 rows=51 width=20)
                                                  Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                  ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2507967 width=24)
                                                        Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=122875.03..122875.03 rows=3 width=4)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..122875.03 rows=3 width=4)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=8)
                                                              ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                          Filter: (ca_gmt_offset = -6::double precision)
                                ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                      ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                            Filter: (s_gmt_offset = -6::double precision)
  ->  XN Subquery Scan promotional_sales  (cost=1103025.28..1103025.29 rows=1 width=8)
        ->  XN Aggregate  (cost=1103025.28..1103025.28 rows=1 width=8)
              ->  XN Hash Join DS_BCAST_INNER  (cost=901929.16..1103025.27 rows=1 width=8)
                    Hash Cond: ("outer".d_date_sk = "inner".ss_sold_date_sk)
                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                          Filter: ((d_year = 2001) AND (d_moy = 12))
                    ->  XN Hash  (cost=901929.16..901929.16 rows=1 width=12)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=661921.93..901929.16 rows=1 width=12)
                                Hash Cond: ("outer".p_promo_sk = "inner".ss_promo_sk)
                                ->  XN Seq Scan on promotion  (cost=0.00..5.25 rows=158 width=4)
                                      Filter: (((p_channel_dmail)::text = 'Y'::text) OR ((p_channel_email)::text = 'Y'::text) OR ((p_channel_tv)::text = 'Y'::text))
                                ->  XN Hash  (cost=661921.92..661921.92 rows=1 width=16)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=541674.00..661921.92 rows=1 width=16)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Hash Join DS_DIST_NONE  (cost=541673.85..541921.70 rows=5 width=20)
                                                  Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                  ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1824 width=4)
                                                        Filter: ((i_category)::text = 'Electronics'::text)
                                                  ->  XN Hash  (cost=541673.73..541673.73 rows=48 width=24)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=122875.04..541673.73 rows=48 width=24)
                                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2399516 width=28)
                                                                    Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_promo_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=122875.03..122875.03 rows=3 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..122875.03 rows=3 width=4)
                                                                          Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=8)
                                                                          ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                      Filter: (ca_gmt_offset = -6::double precision)
                                            ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                        Filter: (s_gmt_offset = -6::double precision)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
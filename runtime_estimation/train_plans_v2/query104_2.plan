XN Limit  (cost=1000254562288.44..1000254562288.45 rows=1 width=49)
  ->  XN Merge  (cost=1000254562288.44..1000254562288.45 rows=1 width=49)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
        ->  XN Network  (cost=1000254562288.44..1000254562288.45 rows=1 width=49)
              Send to leader
              ->  XN Sort  (cost=1000254562288.44..1000254562288.45 rows=1 width=49)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                    ->  XN HashAggregate  (cost=254562288.42..254562288.43 rows=1 width=49)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=254399070.37..254562288.38 rows=1 width=49)
                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=53)
                                ->  XN Hash  (cost=254399070.37..254399070.37 rows=1 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=87799018.36..254399070.37 rows=1 width=4)
                                            Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                            ->  XN HashAggregate  (cost=13984480.79..13984480.79 rows=4160 width=4)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13984470.39 rows=4160 width=4)
                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
                                                              Filter: (ss_sold_date_sk IS NOT NULL)
                                                        ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                              ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                                    Filter: ((d_year = 2002) AND (d_moy <= 7) AND (d_moy >= 4))
                                            ->  XN Hash  (cost=73814537.57..73814537.57 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=35892327.74..73814537.57 rows=1 width=12)
                                                        Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=35891202.45..59893407.86 rows=196 width=16)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".customer_sk)
                                                              ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=96276 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=27891201.95..27891201.95 rows=200 width=4)
                                                                    ->  XN HashAggregate  (cost=27891201.95..27891201.95 rows=200 width=4)
                                                                          ->  XN Subquery Scan x  (cost=1278.65..27891193.43 rows=3408 width=4)
                                                                                ->  XN Append  (cost=1278.65..27891159.35 rows=3408 width=4)
                                                                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=1278.65..13937487.63 rows=1142 width=4)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13937476.21 rows=1142 width=4)
                                                                                                  Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                                                                  ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                                                                              Filter: ((d_year = 2002) AND (d_moy <= 7) AND (d_moy >= 4))
                                                                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=1278.65..13953671.72 rows=2266 width=4)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13953649.06 rows=2266 width=4)
                                                                                                  Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=8)
                                                                                                        Filter: (cs_sold_date_sk IS NOT NULL)
                                                                                                  ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                                                                              Filter: ((d_year = 2002) AND (d_moy <= 7) AND (d_moy >= 4))
                                                        ->  XN Hash  (cost=1125.00..1125.00 rows=116 width=4)
                                                              ->  XN Seq Scan on customer_address ca  (cost=0.00..1125.00 rows=116 width=4)
                                                                    Filter: (((ca_county)::text = 'Elbert County'::text) OR ((ca_county)::text = 'Houghton County'::text) OR ((ca_county)::text = 'Midland County'::text) OR ((ca_county)::text = 'Morehouse Parish'::text) OR ((ca_county)::text = 'Trimble County'::text))
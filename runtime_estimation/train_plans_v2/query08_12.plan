XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1998) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10046,10120,10141,10340,10635,10682,10974,11208,11419,11488,11618,11647,11776,11790,12803,13105,13156,13308,13401,13756,14079,14190,14294,15154,15206,15763,16424,16599,16745,17087,17163,17250,17354,17539,17585,18074,18722,18742,19241,19836,19909,20311,20481,20490,20495,20538,20618,20782,20892,21056,21456,21477,21626,22135,22259,22341,22347,22545,23475,23923,24032,24093,24161,24192,24318,24454,24557,24595,24668,25255,25509,25606,25628,25769,26621,26739,27064,27731,27955,28651,28841,28979,29081,29549,29641,29653,29769,30522,30609,30655,30839,30993,31660,32048,32075,32168,32493,32640,32930,33110,33137,33458,33721,33945,34325,34415,35190,35290,35497,35590,35833,36006,36622,36942,37001,37491,37602,38035,38038,38234,38300,38512,39117,39455,39476,39951,40146,40231,40243,40837,41143,41293,41831,41958,42482,42602,42862,43167,43255,43879,43997,44157,44260,44345,44420,44600,44763,44764,44783,44809,44917,44986,45034,45720,46669,46773,46830,47037,47686,47730,48023,48513,48521,48614,48732,48751,48980,49302,49332,49446,49456,49836,50002,50091,50616,50710,51165,51272,51622,52510,52585,52758,53020,53033,53048,53080,53458,53643,53690,53697,53785,53811,53851,54118,54124,54610,54656,55487,55576,56306,56309,56367,56810,56833,57418,57685,58498,58541,58790,58898,59339,59865,60076,60087,60209,60563,60659,61340,61524,61969,62127,62298,62940,63005,63167,63345,63380,63411,63564,63604,63619,63672,63997,64268,64456,64670,64819,64865,65847,65854,66266,66673,66905,66966,67091,67160,67360,67389,67715,67961,67964,68024,68160,68386,68407,68570,68589,68745,69167,69613,69699,69811,69823,70074,70752,70879,70935,71301,71318,71345,71415,71587,71603,71742,72108,72278,72439,73092,73579,73603,73763,74037,74121,74305,74510,74706,75777,75780,75988,76123,76179,76223,76448,76899,77847,78418,78684,78781,78944,79313,79376,79600,79763,79939,79970,80335,80958,81039,81239,81394,81506,81543,81612,81615,81648,81675,82001,82188,82215,82322,82455,82558,83421,83468,83931,84086,84120,84378,84556,84828,85222,85926,85936,86033,86063,86185,86367,86381,86545,86956,87053,87072,87230,87326,87336,87349,87576,88736,89079,89173,89186,89624,89887,89904,89971,90430,90483,90579,90613,91159,92051,92310,92531,92684,92870,92998,93417,93823,93895,94063,94111,94216,94733,94789,94885,94892,95041,95325,95367,95668,95683,95838,95990,96130,96178,96555,96662,96685,96951,97167,97461,98334,98342,98452,98508,98805,98862,98904,99337,99665}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10369,10803,10823,10829,10997,11599,11683,11784,11980,12231,12625,12656,12784,12826,13085,13845,13892,14469,14486,14913,15402,15448,15903,15908,16438,16508,16514,16531,16937,17044,17445,17525,18068,18141,18153,18531,19011,19134,19153,19672,19938,20145,20336,20382,21077,21124,21304,21411,21722,21811,21933,21972,22197,22353,22768,22808,22876,23070,23185,23218,23555,23580,23965,24312,24333,25144,25169,25304,26009,26732,26794,27122,27691,27720,27957,28086,28122,28152,28263,28269,28575,28602,28819,28965,29104,29431,29694,29776,29806,29871,29882,30130,30348,30354,30393,30411,30509,30890,31123,31180,31370,31416,31913,32490,32550,32628,32984,33166,33376,33551,33599,33611,33616,33727,33880,34737,35120,35362,35395,35433,35869,36094,36107,36140,36202,36238,36345,36716,37243,37414,37688,37786,37795,37960,38010,38213,38235,38410,38631,38649,38683,38892,39022,39355,39477,40104,40221,40500,40583,40827,40840,40900,41806,42052,42185,42239,42789,43204,43613,43840,43960,44243,44253,44306,44435,44928,44972,45293,45715,45848,46020,46022,46390,46400,46466,46952,47218,47371,47522,47816,48207,48222,48269,48326,48392,48546,48944,49611,50061,50798,51602,51700,51708,52139,52905,53294,53352,53407,53598,53761,54277,54412,54592,54643,55156,55250,56222,56640,56648,56665,56792,57119,57511,57874,57920,57994,58217,58270,58307,58435,58689,58833,58881,59271,59656,59789,59866,60107,60798,60978,61094,62296,62766,62902,62981,63169,63308,63321,63518,63604,63644,63676,64019,64142,64169,64326,64724,64983,65710,66268,66779,67094,67182,67310,67489,67506,67656,67805,67839,67856,68619,68870,68979,69253,69472,69987,70108,70228,70917,70935,71266,71431,71689,71762,71918,72089,72136,72244,72275,72379,72948,73506,73789,73822,73852,73855,74097,74167,74312,74446,74846,75326,75488,75499,75526,75734,76210,76908,77002,77097,77977,78052,78181,78200,78497,78760,78788,79098,79159,79344,79716,80396,80401,81092,81196,81591,81697,82139,82620,82743,82816,82832,83595,83762,83849,83896,83903,84348,84629,84682,84845,85224,85675,85778,85970,86366,86684,86856,87116,87427,87534,87744,87830,88200,88480,89060,89064,89866,89910,89978,89998,90154,90313,90427,90575,91072,91412,91490,91877,92013,92453,92619,92877,92990,93009,93041,93536,93749,93911,94005,94372,94594,95190,95245,95678,95769,96106,96526,96580,96955,97003,97056,97166,97348,97353,97562,97839,97865,98324,98739,98819,99257,99354,99414,99606,99648,99686,99695,99737,99872}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
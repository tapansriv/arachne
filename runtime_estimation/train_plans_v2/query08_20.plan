XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10225,10494,10574,10610,10653,10696,10954,11270,11620,11812,11895,11906,12920,13159,13300,13462,13537,13951,14260,14578,14638,14823,14901,14909,14997,15418,15803,16021,16241,16335,16612,17126,18073,18287,19145,19146,19283,19498,19520,19551,19605,19692,19792,19987,20161,20234,20644,20692,21541,21594,21624,21710,21842,22311,22334,23003,23185,23221,23603,24313,24535,24579,24785,24885,25149,25318,25363,25417,25464,25630,25701,25716,25729,25746,26009,26298,26365,26663,26690,26699,26859,27074,27195,27281,27510,27519,27828,28109,28490,28603,29258,29488,29532,29641,29932,30313,30464,31426,31443,31516,32218,32518,32722,33215,33336,33474,33696,33820,34072,34124,34238,35258,35588,35678,35770,35884,36502,36682,36757,36824,37512,37755,38228,38568,38784,38810,38902,38930,39639,40090,40095,40246,40294,40478,40626,41154,41181,41280,41454,41601,41787,42366,42399,42666,42894,42944,43047,43225,43236,43428,43613,43962,44806,44928,45194,45310,45347,45463,45697,46001,46676,47306,47618,47833,47891,47983,47996,48082,48251,48722,48961,48965,49157,49481,49655,49682,50307,50405,50692,50846,50868,51048,51485,51633,51852,51992,52278,52309,52414,53204,53300,53435,53715,53820,53827,53896,53935,53959,54075,54087,54133,54264,54788,54815,55353,55502,55601,55883,55991,56065,56272,56321,56903,56924,57080,57094,57568,57588,57635,58194,58447,58755,58918,58921,58938,59050,59094,59225,59606,59623,59881,60276,60681,60735,61011,61033,61255,61468,62261,62355,62503,62567,62879,62942,62952,62983,63082,63218,63934,63973,64252,64848,64873,65021,65577,65701,66094,66146,66654,66706,66739,67032,67533,67599,67707,67877,67976,68275,68578,69250,69546,69572,69699,69701,69951,70034,70179,70186,70234,70335,70664,71004,71018,71347,71369,71437,71785,71845,71906,72197,72580,72797,73093,73129,73281,73708,73788,73827,73861,74338,74615,75125,75658,75913,76262,76622,76789,76885,77068,77230,77416,78511,78642,78922,79317,79345,79436,79557,79616,79724,79781,79980,80238,80841,80924,81295,81411,81614,81808,81822,82354,82914,82990,83138,83386,83489,83751,83826,83856,84104,84514,84788,85552,86668,87181,87472,87615,87625,87920,88083,88323,88581,88788,88859,88963,88992,89544,90053,90419,90441,90692,90849,91037,91524,91618,91672,93285,93334,93571,93679,94206,94392,94682,94733,94961,95177,95211,95348,95356,95476,95575,95968,96226,96564,96565,96705,97205,97440,97734,98203,98330,98423,98748,98888,99132,99433,99502,99504,99559,99735}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1998) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10272,10702,10717,10786,10911,11177,11370,11482,11511,12455,12483,13032,13034,13239,13377,14623,14883,15049,15228,15706,15796,15820,15930,15970,16091,16366,16431,16704,16733,17557,17662,17833,17967,18622,18668,18756,18885,18899,19409,19525,19553,19664,19670,19682,19814,19912,20387,20770,20980,21431,21529,21548,21970,22133,22427,23230,23390,23542,23908,24135,24370,24387,24498,24761,25588,26143,26313,26443,26750,26864,26929,26943,26988,27459,28622,28669,29197,29303,29383,29577,29956,29988,30145,30177,30343,30412,30464,30549,30709,30840,30887,31491,32264,32278,32842,32950,32981,33007,33751,33820,34344,35356,35604,35815,36010,36017,36221,36255,36382,37155,37190,37531,37613,37690,37725,37952,38147,38544,38573,38624,38628,38840,39175,39248,39329,39553,39710,39787,39949,40562,40629,40936,41215,41345,42150,42455,42519,42727,42820,42828,43459,43477,43701,44485,44509,44612,44763,44970,45899,46085,46391,46492,46574,47095,47119,47684,47915,48251,48380,48532,48925,48954,49453,49521,49719,50082,50209,50219,50297,50507,50627,50641,50672,50891,50967,51082,51107,51215,51700,51828,51894,51961,52191,52210,52313,52385,52582,52649,53012,53325,53388,53467,53663,54026,54192,54194,54299,54368,54409,55051,55309,55334,55841,55987,56525,57039,57489,57807,57929,58298,58521,58579,59171,59204,60115,60257,60762,60789,60849,60901,61137,61286,61288,61356,61381,61477,61749,61960,62076,62160,62850,63146,63635,63781,63939,64339,64453,64545,64667,64706,64727,64894,65381,65398,66096,66322,66824,66859,67044,67117,67397,67610,67822,67888,68557,68802,68819,68844,69159,69265,69423,69497,69533,70101,70378,71027,71116,71604,71658,71753,71962,72044,72358,72488,72591,72802,73294,73333,73475,73485,73691,73742,73775,74078,74080,74414,74427,74467,74814,74864,75243,75253,75381,75475,75496,75540,75626,75675,75943,76226,76301,76416,76609,76735,76899,78064,78099,78242,78251,78405,78691,78754,79104,79178,79212,79217,79621,79782,79796,80030,80572,80906,80970,81519,81545,81634,81885,82024,82589,82774,82853,83171,83507,83862,84346,84430,85084,85099,85361,85498,86527,86535,86993,87085,87910,88045,88068,88135,88185,88203,88345,88621,88695,88735,89307,89338,89414,89699,90173,90518,90859,91627,91676,91751,91792,91931,92019,92713,92822,93205,93810,93824,93871,93901,94235,94255,94362,94906,94987,95059,95148,95499,95971,96547,96775,96970,96999,97114,97408,97462,97573,97865,98196,98199,98554,99470,99472,99533,99538,99856}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
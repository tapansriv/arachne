XN Limit  (cost=1016627058377.14..1016627058377.39 rows=100 width=120)
  ->  XN Merge  (cost=1016627058377.14..1016627058380.73 rows=1436 width=120)
        Merge Key: derived_col1, derived_col2, derived_col3, derived_col4, derived_col5
        ->  XN Network  (cost=1016627058377.14..1016627058380.73 rows=1436 width=120)
              Send to leader
              ->  XN Sort  (cost=1016627058377.14..1016627058380.73 rows=1436 width=120)
                    Sort Key: derived_col1, derived_col2, derived_col3, derived_col4, derived_col5
                    ->  XN HashAggregate  (cost=16627058294.66..16627058301.84 rows=1436 width=120)
                          ->  XN Subquery Scan foo  (cost=14609838300.12..16627058043.47 rows=14354 width=120)
                                ->  XN Append  (cost=14609838300.12..16627057899.93 rows=14354 width=25)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=14609838300.12..14609838423.12 rows=8200 width=25)
                                            ->  XN HashAggregate  (cost=14609838300.12..14609838341.12 rows=8200 width=25)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=1138.11..14609836269.10 rows=116058 width=25)
                                                        Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=913.11..14609832335.04 rows=113266 width=20)
                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=118818 width=16)
                                                                    Filter: ((ss_promo_sk IS NULL) AND (ss_sold_date_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=730.49..730.49 rows=73049 width=12)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=12)
                                                        ->  XN Hash  (cost=180.00..180.00 rows=18000 width=13)
                                                              ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=13)
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=93747207.94..93747210.72 rows=185 width=25)
                                            ->  XN HashAggregate  (cost=93747207.94..93747208.87 rows=185 width=25)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=43339597.85..93747204.70 rows=185 width=25)
                                                        Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                        ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=13)
                                                        ->  XN Hash  (cost=43339597.40..43339597.40 rows=180 width=20)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=7194.29..43339597.40 rows=180 width=20)
                                                                    Hash Cond: ("outer".d_date_sk = "inner".ws_sold_date_sk)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=12)
                                                                    ->  XN Hash  (cost=7193.84..7193.84 rows=180 width=16)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=180 width=16)
                                                                                Filter: (ws_ship_customer_sk IS NULL)
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=1923472176.56..1923472266.09 rows=5969 width=25)
                                            ->  XN HashAggregate  (cost=1923472176.56..1923472206.40 rows=5969 width=25)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=29670.15..1923472072.10 rows=5969 width=25)
                                                        Hash Cond: ("outer".d_date_sk = "inner".cs_sold_date_sk)
                                                        ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=12)
                                                        ->  XN Hash  (cost=29655.14..29655.14 rows=6002 width=21)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=14430.12..29655.14 rows=6002 width=21)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=13)
                                                                    ->  XN Hash  (cost=14415.48..14415.48 rows=5857 width=16)
                                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=5857 width=16)
                                                                                Filter: ((cs_ship_customer_sk IS NULL) AND (cs_sold_date_sk IS NOT NULL))
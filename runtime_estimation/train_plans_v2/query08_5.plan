XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10187,10531,10609,10777,11462,11522,12013,12120,12215,12344,12616,12625,12766,12925,12945,13381,13808,13852,13866,13916,14040,14152,14803,14856,15341,15556,15599,15714,15791,15793,16657,16685,17817,18024,18065,18223,18244,18502,18840,18897,18909,18974,19142,19228,20020,20108,20240,20397,20464,20711,20819,20902,20926,20959,21249,21344,21394,21699,21703,21873,22008,22039,22705,22768,23191,23222,23253,23543,23841,23959,24194,24499,24602,24687,25148,25326,25470,25576,26352,27257,27348,27506,27728,27760,28777,28850,28946,29314,30443,30582,30710,30906,31047,31078,31089,31350,31512,31628,31852,32125,32287,33020,33157,33184,33253,33296,33344,33711,33721,33768,33831,33835,34017,34035,34430,34826,34834,35074,35473,35491,35666,36120,36183,36700,36734,37510,37871,38895,38962,38997,39131,39311,39528,39584,39711,39739,39862,40172,40204,40446,40961,40994,41257,41424,41438,41725,41789,42010,42401,42478,42630,42848,42970,43214,43991,44682,44713,44784,44842,44868,45487,45520,45663,46078,46185,46441,46670,46697,47093,47171,47352,47445,47844,48501,48525,48764,49317,49869,50371,50372,50418,50771,50793,51101,51157,51206,51248,51370,52094,52181,52373,52412,52821,53016,53392,53406,53477,53687,53691,53810,53857,53927,54145,54634,54857,55257,55333,55492,55836,55968,56014,56042,56105,56312,56348,56648,56683,56836,57019,57114,57362,57768,57911,57924,58157,58381,58426,58470,58519,58769,58855,58981,59508,59628,59836,60019,60745,61643,61776,62233,62368,62420,62508,62851,63332,63383,63565,63848,64396,64631,64751,65329,65379,65456,65587,65804,66131,66460,67111,67112,67259,67353,67763,68055,68211,68894,69604,70113,70797,70901,70915,70958,71309,71372,71709,72560,72948,73047,73427,73605,73993,74127,74206,74391,74653,74743,74807,74822,74888,75410,75731,76181,76560,76769,76889,76979,77079,77172,77234,77258,77286,77491,77579,77999,79151,79462,79533,79902,79928,79977,80301,80412,80484,80808,81192,81201,81350,81387,81494,81548,81598,81759,82114,82365,82439,82500,82567,82718,82745,83401,83420,83443,83670,83676,83925,84016,84092,84099,84380,84456,84468,84665,85251,85512,85653,86315,86418,86444,86511,86618,86691,87042,87098,87672,87677,88078,88286,88733,89142,89293,89450,89961,90021,90115,90313,90326,90521,91103,91825,92413,92456,92505,92870,93095,93115,93155,93703,93839,94506,94806,94887,95202,95367,95974,96116,96295,96575,97255,97487,97603,98051,98163,98309,98631,98646,99044,99295,99531,99651,99837}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
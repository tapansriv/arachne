XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2001) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10253,10519,10837,11960,12001,12121,12240,12618,13150,13257,13332,13501,13548,13596,13701,13748,13789,13985,14084,14663,15547,16159,16165,16284,16602,16699,16743,16826,16987,17334,17614,17757,17862,18302,18494,18825,19041,19249,19277,19776,19908,20055,20211,20238,20239,20240,20579,20867,21133,21420,21422,21734,21794,21839,21860,21916,22152,22227,22411,22435,22627,22965,23112,23469,23602,23625,24815,24847,24987,25103,25135,25197,25332,25378,25526,25586,25720,25764,25983,26249,26257,26376,27122,27400,27550,28028,28114,28266,28547,29072,29436,29566,29787,30247,30399,31295,31429,31893,32951,33090,33108,33144,33229,33478,34161,34288,34408,34533,34678,37035,37342,37647,37691,37961,38306,38497,38620,38724,39077,39193,39352,39362,39609,39733,40389,40392,40940,40988,41007,41268,41316,42131,42162,42594,42936,43071,43326,43327,43794,43821,43878,44004,44123,44242,44746,44877,45073,45153,46523,46686,46793,46843,47659,47741,47905,47916,47932,48196,48217,48486,48518,48772,48922,48940,49141,49241,49298,49333,49444,49621,49777,49926,50070,50150,50722,50762,50811,50836,50917,50998,51181,51235,51411,51501,51772,51874,52434,52566,53221,53361,53458,53637,53711,54299,54386,54427,54488,55063,55165,55835,56223,56339,56766,56864,56893,57311,57675,57683,57994,58108,58229,58246,58867,59747,59988,60152,60180,60378,60519,60967,61119,61201,61255,61648,61838,62776,63164,63168,63187,63423,63772,63959,64047,64612,64724,65173,65250,65402,65570,66304,66506,66687,66793,66875,66941,67177,67515,67516,67643,68150,68338,68349,68459,68875,68997,69134,69179,69279,69615,69770,69807,69891,70199,70482,70764,71379,71816,71876,72289,72398,72698,72821,72858,72987,73005,73316,73423,73601,73725,74059,74520,75148,75278,75313,75546,75597,75678,75736,75814,76044,76440,77372,77494,78278,78359,78391,79019,79183,79196,79336,79371,79393,79436,79470,80242,80248,80348,80378,80399,80435,80483,80654,80662,80782,81462,81519,81684,81904,81951,82517,82780,82880,83058,83370,83625,84038,84563,84692,84786,84898,84934,85096,85396,85687,85752,85800,86148,86181,86499,86630,87126,87756,87875,87882,88022,88527,88586,88734,88916,89092,90100,90593,90844,90875,90972,91202,91214,91225,91409,91493,92092,92118,92167,92380,92616,92766,92945,93049,93131,93213,93399,93449,93458,93735,94029,94061,94917,95174,95191,95315,95575,95871,95957,96691,96942,97133,97679,97798,97916,98384,98858,98937,98947,99114,99346,99454,99616,99717,99811,99960}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
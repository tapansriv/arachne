XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10108,10136,10799,10834,10876,11002,11033,11046,11590,11800,12169,12420,12594,12655,12725,13105,13135,14109,14272,14275,14413,14698,15078,15744,16206,16289,16678,16792,16816,17661,18099,18251,18370,18998,19418,19670,20386,21251,21429,21446,21520,21672,21950,22304,22333,22357,22415,22570,23105,23359,23440,23486,23544,23660,23922,24565,24574,24600,25164,25300,25843,25926,26096,26866,27033,28004,28121,28245,28370,28563,28676,29541,29661,29764,30278,30312,30462,30723,30954,31044,31088,31159,31164,31187,31342,31524,31955,32011,32139,32398,32552,33290,33587,33677,33796,33922,34026,34074,34075,34243,34428,34466,35034,35409,35949,36400,36670,37139,37232,37679,37768,37775,37812,37824,37842,37915,38034,38188,38207,38433,38585,38605,39548,39577,39762,39939,40671,40705,40713,40800,40809,40819,40840,40923,40979,41092,41265,41335,41547,42196,42502,42941,44172,44179,44258,44579,44702,44742,45075,45149,45310,45354,45557,45824,46117,46225,46410,46583,46731,46982,47435,47631,47663,47752,47780,48357,48476,48513,49006,49070,49114,49185,49260,49442,49448,49495,50221,50526,50605,50630,50735,50923,50926,51054,51108,51477,51660,51782,52291,52700,52829,53406,53674,53952,53960,54437,54669,54689,55024,55028,55278,56349,56457,56480,56931,57199,57287,57341,57347,57378,57509,57750,57880,57882,58200,58351,58584,58635,58843,59196,60175,60520,60641,61000,61032,61073,61179,61407,61467,61630,61788,61979,62042,62324,62377,62406,62416,62766,62920,63144,63468,63534,63610,63664,63926,64171,64701,64783,65226,65364,65766,66077,66568,66721,67325,67333,67666,67840,68020,68057,68226,68677,68779,68805,69008,69178,69760,69834,69952,70118,70294,70473,70578,71630,72116,72466,72536,72621,72809,72875,73358,73391,73484,74364,74784,74839,75073,75401,75486,75565,75738,75789,76085,76088,76179,76348,77397,77441,77493,77521,77919,77929,78489,78696,79107,79265,79297,79545,79717,79814,79862,79877,79904,79946,80625,81425,81896,82081,82543,82572,82651,82773,83122,83145,83168,83209,83271,83286,83370,83449,83453,83522,83591,83828,84111,84304,84745,84769,84829,84878,85665,86500,86956,87161,87296,87897,88363,88509,88759,89145,89420,89604,89944,90175,90227,90268,90387,90436,90439,90517,90566,90657,90973,90982,91040,91309,91451,91788,92412,92469,92579,92924,93103,93582,93647,93790,94532,94686,95007,95010,95181,95650,95669,95713,96469,96729,96844,96884,96928,96983,97652,97852,97987,98019,98197,98534,98567,98837,99610,99805}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
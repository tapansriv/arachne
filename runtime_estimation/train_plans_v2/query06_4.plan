XN Limit  (cost=1000108068354.52..1000108068354.65 rows=52 width=6)
  InitPlan
    ->  XN Unique  (cost=0.00..1095.81 rows=1 width=4)
          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                Filter: ((d_year = 2001) AND (d_moy = 4))
  ->  XN Merge  (cost=1000108067258.71..1000108067258.84 rows=52 width=6)
        Merge Key: count(*), a.ca_state
        ->  XN Network  (cost=1000108067258.71..1000108067258.84 rows=52 width=6)
              Send to leader
              ->  XN Sort  (cost=1000108067258.71..1000108067258.84 rows=52 width=6)
                    Sort Key: count(*), a.ca_state
                    ->  XN HashAggregate  (cost=108067256.84..108067257.23 rows=52 width=6)
                          Filter: (count(*) >= 10)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=67266125.70..108067254.22 rows=350 width=6)
                                Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                ->  XN Seq Scan on customer_address a  (cost=0.00..500.00 rows=50000 width=10)
                                ->  XN Hash  (cost=67266124.86..67266124.86 rows=340 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=25263871.46..67266124.86 rows=340 width=4)
                                            Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                            ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=8)
                                            ->  XN Hash  (cost=25263870.58..25263870.58 rows=350 width=4)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=14063426.66..25263870.58 rows=350 width=4)
                                                        Hash Cond: (("outer".i_category)::text = ("inner".i_category)::text)
                                                        Join Filter: ("outer".i_current_price > ("inner".avg * 1.2::double precision))
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3662528.00..3662943.05 rows=1051 width=21)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on item i  (cost=0.00..180.00 rows=17962 width=21)
                                                                    Filter: (i_category IS NOT NULL)
                                                              ->  XN Hash  (cost=3662525.43..3662525.43 rows=1028 width=8)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=913.19..3662525.43 rows=1028 width=8)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales s  (cost=0.00..28804.04 rows=2623834 width=12)
                                                                                Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                          ->  XN Hash  (cost=913.11..913.11 rows=30 width=4)
                                                                                ->  XN Seq Scan on date_dim d  (cost=0.00..913.11 rows=30 width=4)
                                                                                      Filter: (d_month_seq = $0)
                                                        ->  XN Hash  (cost=10400898.64..10400898.64 rows=10 width=101)
                                                              ->  XN Subquery Scan volt_dt_0  (cost=10400898.51..10400898.64 rows=10 width=101)
                                                                    ->  XN HashAggregate  (cost=10400898.51..10400898.54 rows=10 width=101)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=225.12..10400808.89 rows=17924 width=101)
                                                                                Hash Cond: (("outer".i_category)::text = ("inner".i_category)::text)
                                                                                ->  XN Seq Scan on item j  (cost=0.00..180.00 rows=17962 width=17)
                                                                                      Filter: (i_category IS NOT NULL)
                                                                                ->  XN Hash  (cost=225.10..225.10 rows=10 width=93)
                                                                                      ->  XN Subquery Scan volt_dt_1  (cost=0.00..225.10 rows=10 width=93)
                                                                                            ->  XN Unique  (cost=0.00..225.00 rows=10 width=9)
                                                                                                  ->  XN Seq Scan on item i  (cost=0.00..180.00 rows=18000 width=9)
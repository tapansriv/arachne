XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1999) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10031,10488,11020,11086,11172,11277,11289,11418,11446,11788,11808,11867,11898,12008,12105,12308,12504,12668,12788,12806,12996,13386,13632,13909,14019,14745,15294,15784,16282,16639,17533,17583,17784,17824,17955,17999,18079,18296,18607,18949,19049,19078,19517,19687,19727,20523,20534,20559,20706,20728,20998,21594,22031,22106,22503,22513,23145,23203,23316,23319,23490,23746,24095,24890,24894,25325,25560,25574,26231,26428,26602,26716,26935,26952,27008,27177,27663,27933,27934,28526,29195,29867,29989,30191,30394,30586,30590,30924,31163,31220,32384,32752,32812,33002,33003,33117,33628,33866,34065,34142,34574,34597,34856,34932,35331,35593,36385,36608,36705,37238,37268,37572,38211,38631,38851,39339,39565,39724,40426,40610,40639,40726,42039,42064,42247,42532,42688,42753,42781,42937,42990,42994,43064,43215,43282,43551,43837,43856,44266,44299,44628,44836,45476,45643,45861,45868,45988,46155,46542,47600,47790,47956,48078,48110,48404,48523,48603,48792,48913,49414,49569,49652,49967,50015,50182,50515,50562,50615,50787,51006,51262,51392,51522,51608,51701,51734,52030,52070,52290,52493,52776,52860,53206,53276,53322,53728,53863,53876,54709,54740,54808,55079,55182,55397,55515,55589,55722,56043,56266,56615,56846,56869,57317,57531,57854,57909,58052,58084,58229,58589,58993,59087,59270,59280,59866,59908,60033,60155,60266,60278,60735,60758,61632,61894,62247,62462,62499,62829,63642,63765,63959,64024,64287,64356,64358,64432,64703,64761,64798,65304,65352,65612,65685,65693,65957,66070,66097,66424,66473,66493,66763,67273,68298,68731,68733,68995,69024,69135,69633,69685,69945,69981,70183,70221,70350,70690,70698,70951,71154,71365,71534,71609,71703,71788,71796,71812,71819,72136,72211,72215,72386,72598,72876,73182,73375,73476,73877,74285,74340,74389,74824,75264,75540,75650,76125,76127,76235,76278,76713,76805,77009,77431,78157,78331,78930,79370,79630,79732,79781,79867,79916,80619,81113,81184,81197,81221,81374,81481,81556,81688,81763,82218,82299,82534,82564,82658,83147,83199,83269,83605,84330,84648,84761,84868,84949,85060,85220,85350,85584,85840,86101,86360,86394,86476,86760,86970,87185,87205,87567,87970,87985,88233,88264,88500,88509,88862,88985,89512,89602,89681,89799,90084,90856,91214,91466,91872,91900,91912,91917,91993,91999,92028,92274,92351,92392,93095,93197,93605,93899,93947,94238,94375,94473,94818,95278,95403,95485,95634,95711,95751,95819,95974,96807,97017,97965,97990,98545,98969,99525,99922}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
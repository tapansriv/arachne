XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10069,10416,10626,10675,10709,10770,10814,11046,11120,11309,11482,12040,12642,12764,12887,12930,12970,13390,14247,14620,14666,14668,14893,15190,15207,15290,15420,15505,15664,15837,15883,16068,16339,16634,16654,16672,16834,17043,17077,17375,17662,17894,17904,17938,18093,18147,18219,18484,18558,19035,19086,19306,19440,19531,19641,19687,19756,19935,20176,20293,21078,21320,21388,21457,22001,22021,22048,22221,22373,22559,22685,22914,22978,23242,23499,23786,23882,23884,23886,23918,23997,24290,24336,24926,25150,25540,25926,26018,26124,26129,26532,26862,27087,27177,27184,27302,27453,27558,27740,28033,28075,28356,28564,28834,29200,29222,29257,29344,29427,29548,29562,29638,29752,30157,30365,30388,30706,31169,31441,31627,32238,32240,32336,32805,32831,33014,33117,33291,33397,33575,33675,34912,35839,35983,36116,36236,36441,36614,36679,36977,37013,37081,37091,38057,38288,38415,38508,38829,39160,39185,39310,39430,40035,40101,40112,40229,40472,40780,40915,41246,41352,41378,41857,41881,42309,42726,42768,43603,43825,44084,44217,44363,45178,45245,45549,45636,45911,46067,46168,46178,46373,46857,47022,47418,47545,48028,48051,48062,48382,48567,48948,48972,49244,49287,49417,49931,50610,51248,51311,51372,51870,52290,52508,52744,52777,53142,53226,53542,53656,53710,53728,54256,54572,54755,55021,55128,55571,55717,55860,56244,56294,56300,56332,56362,56405,56473,56486,56599,57249,57351,57367,57499,58313,58577,58731,59175,59296,59503,59505,59770,59791,59891,60303,60490,60951,60996,61038,61221,61363,61551,61570,61783,61788,62083,62115,62204,62375,62772,62856,63233,63763,64037,64074,64337,64409,64637,64719,64838,65756,65904,65930,66093,66127,66130,66865,67609,67623,67634,67710,67829,67909,68130,68222,68980,69654,69759,69785,69825,69842,70066,70807,70939,71150,71287,71469,72326,72696,72923,72931,73086,73092,73848,74056,74598,75018,75040,75050,75442,75673,75747,76581,76597,76745,76818,77130,77341,78103,78180,78314,78350,78570,78748,79608,80019,80080,80720,80955,81038,81139,81143,81506,81716,81783,81832,81908,82108,82149,82282,82321,82429,82518,82574,82629,82706,82812,83804,83887,83920,83953,83968,84223,84226,84419,84839,84909,85130,85204,85430,85456,85493,85798,86689,86725,86798,86905,87203,87946,88075,88541,88544,89590,90265,90524,90802,90976,91014,91021,91306,91415,91500,92150,92428,92508,92864,94905,95240,95351,95591,95889,96571,97014,97846,98033,98233,98368,98888,99371,99593,99944,99946}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
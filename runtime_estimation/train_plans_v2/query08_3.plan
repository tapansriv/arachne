XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1998) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10005,10225,10487,10600,10787,11135,11715,11785,11895,12497,12553,12752,13229,13238,13399,13469,13797,13813,13839,14011,14037,14453,14799,15011,15033,15202,15469,15832,16064,16479,16891,16964,17057,17112,17153,17179,17624,17790,17889,18061,18526,18704,18807,19038,19329,19542,19651,19653,19975,20060,20087,20128,20388,21146,21488,22395,22717,22749,22907,22936,23033,23516,23641,23685,23912,25202,25430,25744,26207,26436,26496,26941,27129,27152,27192,27244,27534,27590,28552,28877,29009,29103,29143,29172,29607,30104,30864,30968,31321,31330,31362,31386,31416,31725,31875,32317,32357,32515,32784,32851,33157,33403,33493,33522,33950,34012,34257,34404,34681,35034,35321,35469,35918,36267,36592,37204,37244,37391,37609,37986,38397,38467,38606,38768,38885,38944,39024,39059,39204,39560,39825,39853,39863,40061,40071,40216,40363,40394,40458,40501,40968,41093,41502,41743,41908,42172,42254,42503,42792,42855,43045,43157,43239,43987,44048,44811,45319,45733,45942,46039,46059,46133,46245,46426,46476,46598,46635,46992,47088,47177,47262,47713,47848,48276,48417,48622,48787,48903,49095,49285,49727,50012,50113,50316,50334,50758,51038,51206,51560,51681,51722,52361,52362,52667,52919,52956,52975,53933,53974,54073,54348,54672,54856,55117,55192,55266,55402,55959,56396,56905,56920,57033,57078,57280,57390,57470,57594,57727,57882,58026,58674,58873,58926,59088,59362,59379,59491,60068,60102,60186,60799,60815,61101,61568,61711,62609,62655,63098,63354,63395,63848,63871,64402,64452,65051,65151,65747,65979,66143,66360,66640,66972,66982,67560,67603,67892,67957,68148,68463,68800,68802,69084,69095,69616,69673,69744,69778,69821,69986,69996,71002,71099,71128,71183,71191,71466,71781,71856,72300,72372,72723,72795,72803,72828,72953,73031,73078,73117,73429,73844,73920,74332,74726,75616,75633,75693,76391,76620,76721,76983,77409,77946,78007,78187,78276,78436,78551,78773,78945,79316,79547,79700,80258,80477,80797,80957,80978,81291,81482,81483,82101,82538,82541,83270,83294,83317,83337,83736,84016,84185,84290,84940,85186,85371,85727,85833,86237,86474,86730,87037,87346,87446,87501,87507,87937,88626,88846,88957,89278,89423,90059,90301,90546,90654,90799,90892,91143,91473,91621,91757,91942,92270,92668,92687,92717,92725,93064,93187,93260,93401,93757,93799,93855,93937,94214,94394,94440,94954,94977,95142,95393,95706,95830,96064,96263,96676,97065,97524,97826,97931,98063,98850,99001,99050,99326,99575,99668,99684,99930,99952}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
XN Limit  (cost=1004235311879.22..1004235311879.47 rows=100 width=104)
  ->  XN Merge  (cost=1004235311879.22..1004235311879.59 rows=149 width=104)
        Merge Key: customer_address.ca_country, customer_address.ca_state, customer_address.ca_county, item.i_item_id
        ->  XN Network  (cost=1004235311879.22..1004235311879.59 rows=149 width=104)
              Send to leader
              ->  XN Sort  (cost=1004235311879.22..1004235311879.59 rows=149 width=104)
                    Sort Key: customer_address.ca_country, customer_address.ca_state, customer_address.ca_county, item.i_item_id
                    ->  XN HashAggregate  (cost=4235311866.01..4235311873.84 rows=149 width=104)
                          GROUPING SETS((), (i_item_id), (i_item_id, ca_country), (i_item_id, ca_country, ca_state), (i_item_id, ca_country, ca_state, ca_county))
                          ->  XN Hash Join DS_BCAST_INNER  (cost=4200751459.63..4235311865.00 rows=37 width=104)
                                Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                ->  XN Hash  (cost=4200751459.54..4200751459.54 rows=36 width=88)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=4161708241.17..4200751459.54 rows=36 width=88)
                                            Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                            ->  XN Seq Scan on customer_demographics cd2  (cost=0.00..19208.00 rows=1920800 width=4)
                                            ->  XN Hash  (cost=4161708241.07..4161708241.07 rows=39 width=92)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=4047146735.30..4161708241.07 rows=39 width=92)
                                                        Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                        ->  XN Seq Scan on customer_address  (cost=0.00..1375.00 rows=10430 width=44)
                                                              Filter: (((ca_state)::text = 'TX'::text) OR ((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'IA'::text) OR ((ca_state)::text = 'OH'::text) OR ((ca_state)::text = 'MS'::text) OR ((ca_state)::text = 'AL'::text) OR ((ca_state)::text = 'SC'::text))
                                                        ->  XN Hash  (cost=4047146734.86..4047146734.86 rows=179 width=56)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=3782263765.68..4047146734.86 rows=179 width=56)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..2500.00 rows=37391 width=16)
                                                                          Filter: (((c_birth_month = 7) OR (c_birth_month = 5) OR (c_birth_month = 4) OR (c_birth_month = 11) OR (c_birth_month = 9) OR (c_birth_month = 6)) AND (c_current_cdemo_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=3782263764.50..3782263764.50 rows=473 width=48)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=41433188.69..3782263764.50 rows=473 width=48)
                                                                                Hash Cond: ("outer".cd_demo_sk = "inner".cs_bill_cdemo_sk)
                                                                                ->  XN Seq Scan on customer_demographics cd1  (cost=0.00..28812.00 rows=140726 width=8)
                                                                                      Filter: (((cd_education_status)::text = '2 yr Degree'::text) AND ((cd_gender)::text = 'F'::text))
                                                                                ->  XN Hash  (cost=41433171.99..41433171.99 rows=6680 width=48)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41433171.99 rows=6680 width=48)
                                                                                            Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1422059 width=52)
                                                                                                  Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL) AND (cs_bill_cdemo_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                        Filter: (d_year = 2002)
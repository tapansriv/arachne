XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10010,10200,10315,10758,11227,11441,11661,11671,11795,12033,12248,12278,12803,13255,13434,13490,14078,14094,14284,14622,14668,14865,15044,15159,15503,15722,15745,16079,16199,16596,16664,16675,16859,17180,17471,17813,18101,18328,18883,18892,19134,19182,19313,20001,20212,20333,20358,20410,20684,20711,21261,21642,22113,22120,22338,22673,22807,23048,23153,23378,23572,23795,23803,23929,24124,24139,24197,24433,24619,24799,24910,24932,24943,25139,25323,25400,25949,26046,26363,26571,26612,26616,26664,26899,27310,27618,28055,28454,28883,28995,29127,29350,29841,30056,30147,30287,30629,30688,30695,30724,30742,30899,30913,31020,31099,31189,31270,31374,31495,31882,31955,32059,32340,32578,32617,32683,32832,33002,33041,33498,33566,33583,33789,33858,33871,33989,34218,34331,34450,34762,34999,35707,36214,36795,36895,36913,36983,37065,37174,37222,37279,38060,39012,39066,39435,39663,39730,39831,39940,40173,40310,40798,41700,41730,41737,42070,42178,42184,42334,42412,42599,43014,43082,43136,43143,43145,43397,43650,43792,43939,44129,44769,44841,45676,45702,45935,46153,46229,46267,46329,46794,46814,47023,47153,47167,47192,47306,47637,47908,47946,47965,48235,48338,48676,48831,48866,48877,48899,49080,49090,49250,49693,49695,49796,49887,49901,50886,50997,51387,51437,51654,51670,51674,52397,52588,52706,52707,53024,54233,54269,54497,55683,55957,56090,56147,56226,56396,56745,56894,57608,58028,58147,58363,58573,59430,59745,59949,60420,60791,60803,60887,61041,61646,61840,61970,62297,62314,62474,62789,62966,63163,63319,63769,64075,64779,64810,65099,65774,66334,66625,66663,66834,67023,67220,67273,67533,67626,68069,68212,68355,68601,69546,69792,69881,70235,70371,70438,70549,70585,70680,70743,71668,71947,72037,72274,72485,72783,73025,73284,73500,73773,73789,74200,74208,74855,74900,75067,75135,75791,75815,75983,76046,76049,76054,76526,76799,77076,77116,77232,77588,78133,78192,78386,78514,78869,78921,79105,79135,79349,79414,79824,80239,80404,80498,80527,80865,81234,81251,81438,81455,81844,82077,82359,82547,82618,82927,83386,83558,83649,84120,84136,84255,84515,84712,84979,85013,85635,85824,85906,85968,86541,86556,86692,86830,87103,87330,88500,88603,88703,88706,89085,89900,90218,90234,90405,90454,90610,90891,90961,91484,91925,92385,92737,92880,93040,93210,93264,93299,93528,93587,94267,94442,94505,94667,95638,96004,96300,96480,96817,96967,97666,97832,97984,97996,98473,98750,99011,99023,99187,99541}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
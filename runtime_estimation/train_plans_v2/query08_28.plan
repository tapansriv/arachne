XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2001) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10067,10495,10661,10663,11036,11089,11703,12161,12198,12991,13213,13290,14095,15100,15292,15443,15979,16012,16146,16304,16319,16461,16481,16571,17416,17417,17758,17879,18019,18090,18204,18301,18540,18686,18706,19524,19756,20205,20310,20439,20536,20571,20591,20647,21185,21200,21292,21417,21502,21835,21933,21937,22131,22351,22352,22377,22521,22574,22602,22912,23010,23464,23795,23818,23964,24357,24445,24462,24846,25293,25535,25673,26255,26370,26938,27530,27727,27807,28080,28131,28341,28361,28377,28587,28597,28689,28782,29240,29454,29504,29752,29765,30539,30884,31106,31135,31148,31500,31528,31585,32464,32512,32637,32833,33195,33271,33578,33622,33683,33826,33885,34600,34763,34949,35272,35398,35797,35806,35928,36094,36254,36551,36643,37388,37389,37634,37716,37811,38313,38448,38630,38846,38909,38951,40120,40602,40781,40998,41062,41234,41376,41571,41690,41991,42911,43003,43004,43197,43272,43856,43892,44349,44522,45043,45262,45308,45429,45445,45764,45861,45908,45959,46026,46067,46210,46434,46733,46841,46968,47167,47169,47208,47361,47517,47747,47779,47834,48167,48845,48863,49324,49723,49800,49856,50135,50565,50662,50863,50953,50985,51339,51816,51875,52047,52242,52243,52580,52986,53230,53568,53679,54177,54220,54224,54509,54551,55217,55242,55330,55336,55386,56580,56941,57225,57264,57423,57794,57805,57852,58484,58607,58847,59152,59224,59697,59821,60077,60240,60633,60789,60982,61298,61775,61841,61952,61989,62112,62241,62293,62339,62429,62436,63053,63069,63241,63245,63449,63460,63591,63875,64337,64571,64610,64785,65004,65075,65344,65627,65740,65818,65860,65948,66022,66625,66894,67289,67915,68166,68401,68688,68842,69086,69217,71390,71426,71447,71489,71550,72236,72541,72738,72848,73177,73294,74221,74358,74637,74748,75139,75501,75674,76295,76498,76664,76885,77073,77206,77386,77624,77666,77753,77759,77765,77907,78059,78786,79566,80100,80556,81018,81227,81917,81971,82584,82896,83113,83394,84103,84246,84500,84570,84856,84876,85210,85248,85584,85695,85842,85867,85883,85909,86073,86162,86266,86398,86442,86873,87022,87037,87115,87129,87719,87780,87810,87853,88056,88100,88441,88469,88752,88845,88918,88961,89082,89098,89844,90633,91138,91327,92555,92584,92668,92831,92934,93285,93382,93470,93488,93609,94318,94479,94647,94742,94863,94920,95134,95161,95249,95613,95635,95806,95951,96677,96752,97230,97587,97752,97889,97946,98464,98627,98723,99054,99248,99353,99465,99766,99861,99893,99927}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
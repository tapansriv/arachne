XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1998) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10183,10213,10313,10394,10524,10631,11436,11482,11497,11673,12095,12376,12535,12548,12550,12828,12948,13428,13928,14219,14280,14286,14384,14414,14641,15109,15488,15829,15830,16008,16368,16388,16951,17172,17266,17371,18176,18310,18702,18841,19048,19076,19110,19156,19502,19887,20117,21079,21085,21161,21900,21926,22054,22636,22887,23020,23061,23502,23532,23643,23949,24244,24805,25093,25732,26158,26512,26544,26886,27002,27516,27802,27814,28057,28073,28340,28488,28734,28763,29074,29209,29346,29397,29416,29754,30205,30996,31364,31462,31504,31799,32725,32789,33138,33277,33655,33833,33987,34210,34590,34601,34651,34833,35058,35435,35651,35729,35853,35950,36145,36189,37028,37208,37211,37304,37353,37735,37896,37924,38126,38176,38344,38755,38910,39096,39269,39449,39489,39519,39674,39809,39812,39964,41079,41295,41364,41651,41937,41992,42082,42333,42753,43513,43579,43811,43897,43910,43973,44088,44439,44549,44758,45297,45377,45424,45600,45609,46821,47154,47342,47428,47596,47691,48098,48674,48695,49043,49053,49392,49834,49868,49903,50377,50416,50423,50769,51150,51240,51350,51372,51411,51593,52085,52103,52518,52978,53200,53291,53366,53408,53624,53845,53888,54038,54268,54589,54625,54661,54672,55949,56357,56529,56717,57000,57067,57139,57159,57204,57240,57266,57358,57395,57541,58517,58598,58694,58839,59453,59779,59915,60222,60681,60900,60978,61113,61246,61405,62342,62626,62777,63913,63948,64814,64948,65035,65189,65517,65907,66446,66507,66614,66658,66944,67198,67385,67386,67402,67545,67786,67972,68152,68506,68639,68651,69332,69338,69762,69820,69856,70007,70123,70666,71066,71164,71439,71852,72249,72809,72982,73246,73362,73519,73595,73600,73866,73928,74048,74142,74341,74433,74708,75162,75408,75413,75440,75447,75846,76214,76386,76839,76909,77160,77318,77359,78245,78252,79703,79705,79744,79914,80241,80401,80478,80532,81120,81137,81189,81294,81465,81479,81492,81645,82060,82598,83084,83090,83221,83619,83836,83871,84160,84426,84589,84829,84849,85062,85080,85097,85639,86000,86247,86385,86535,86843,87041,87455,87589,87668,87744,88313,88660,88909,88985,89211,89486,89514,89886,90531,90825,90858,90984,91041,91068,91175,91444,91557,91586,91690,92146,92174,92211,92375,92821,93418,93636,93747,93894,94217,94220,94645,94842,95007,95282,95565,95597,95676,95775,95844,96324,96420,96501,96511,96646,97137,97207,97231,97473,97507,97592,97788,97831,98439,98457,98460,98737,99041,99246,99599,99842,99979}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
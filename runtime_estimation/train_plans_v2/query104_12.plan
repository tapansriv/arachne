XN Limit  (cost=1000276122287.06..1000276122287.06 rows=1 width=49)
  ->  XN Merge  (cost=1000276122287.06..1000276122287.06 rows=1 width=49)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
        ->  XN Network  (cost=1000276122287.06..1000276122287.06 rows=1 width=49)
              Send to leader
              ->  XN Sort  (cost=1000276122287.06..1000276122287.06 rows=1 width=49)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                    ->  XN HashAggregate  (cost=276122287.03..276122287.04 rows=1 width=49)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=275959068.98..276122286.99 rows=1 width=49)
                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=53)
                                ->  XN Hash  (cost=275959068.98..275959068.98 rows=1 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=110599017.42..275959068.98 rows=1 width=4)
                                            Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                            ->  XN HashAggregate  (cost=13864480.34..13864480.34 rows=4124 width=4)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13864470.03 rows=4124 width=4)
                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
                                                              Filter: (ss_sold_date_sk IS NOT NULL)
                                                        ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                              ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                                    Filter: ((d_year = 1999) AND (d_moy <= 6) AND (d_moy >= 3))
                                            ->  XN Hash  (cost=96734537.08..96734537.08 rows=2 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=35652327.24..96734537.08 rows=2 width=12)
                                                        Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=35651201.47..59653406.88 rows=196 width=16)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".customer_sk)
                                                              ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=96276 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=27651200.97..27651200.97 rows=200 width=4)
                                                                    ->  XN HashAggregate  (cost=27651200.97..27651200.97 rows=200 width=4)
                                                                          ->  XN Subquery Scan x  (cost=1278.64..27651192.53 rows=3378 width=4)
                                                                                ->  XN Append  (cost=1278.64..27651158.75 rows=3378 width=4)
                                                                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=1278.64..13817487.43 rows=1132 width=4)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13817476.11 rows=1132 width=4)
                                                                                                  Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                                                                  ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                                                                              Filter: ((d_year = 1999) AND (d_moy <= 6) AND (d_moy >= 3))
                                                                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=1278.64..13833671.32 rows=2246 width=4)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13833648.86 rows=2246 width=4)
                                                                                                  Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=8)
                                                                                                        Filter: (cs_sold_date_sk IS NOT NULL)
                                                                                                  ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                                                                              Filter: ((d_year = 1999) AND (d_moy <= 6) AND (d_moy >= 3))
                                                        ->  XN Hash  (cost=1125.00..1125.00 rows=309 width=4)
                                                              ->  XN Seq Scan on customer_address ca  (cost=0.00..1125.00 rows=309 width=4)
                                                                    Filter: (((ca_county)::text = 'Warren County'::text) OR ((ca_county)::text = 'Bladen County'::text) OR ((ca_county)::text = 'Faulk County'::text) OR ((ca_county)::text = 'Harris County'::text) OR ((ca_county)::text = 'Harvey County'::text))
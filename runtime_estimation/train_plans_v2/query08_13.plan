XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10100,10721,10902,10971,11853,12202,12382,12395,12417,12832,12864,13089,13303,13643,13722,14145,14217,14348,14497,14503,14630,14896,15701,15772,15860,15869,15915,15921,16151,16361,16428,16510,16713,16770,16773,17628,17827,18205,18207,18644,18806,18920,18978,19210,20046,20198,20204,20210,20376,20389,20706,21112,21121,21194,21383,21875,21890,22458,22637,22817,23542,23549,23723,24244,24317,24362,24388,24466,24944,25179,25208,25221,25802,25836,26371,26778,27086,27565,27722,28012,28090,28108,28746,28780,29168,29471,29693,30222,30286,30437,30475,30745,31101,31134,31276,31281,31297,31349,31615,31639,31809,32110,32505,32783,32996,33140,33225,33262,34028,34046,34232,34383,34887,35322,35741,36237,36251,36377,36527,36547,36648,36705,36764,36858,37252,37267,37270,37717,37807,37892,38230,38284,38727,38773,39310,39330,39597,39881,39915,39962,40381,41550,42119,42683,42831,43507,43824,43833,43907,43944,44512,44697,44812,44954,45330,45356,45409,45437,45459,45602,45764,46004,46615,46714,46738,46792,46812,47169,47465,47470,47576,47793,47932,48180,48214,48337,48414,49285,49302,49375,49884,50117,51101,51158,51185,51209,51350,51641,51665,51845,51946,52111,52144,52166,53162,53246,53395,53448,53723,53785,54384,54477,54652,54877,55103,55858,56067,56217,56362,56544,56644,56848,57268,57426,57741,57828,58471,58510,58979,59177,59425,59848,59867,60560,60784,61040,61264,61499,61670,63051,63106,63397,63489,63590,63704,63746,63844,63929,64212,64282,64442,64883,65150,65170,65249,65631,65874,65984,66591,67127,67536,68166,68474,68796,68904,69057,69080,69237,69328,69635,69753,69839,69855,69959,69972,70471,70813,70986,71130,71158,71332,71418,71556,71805,72055,72091,72167,72321,72676,72989,73344,73478,73881,73915,74024,74045,74161,74285,75084,75366,75594,75939,76052,76263,76754,76820,76925,76999,77181,77303,77496,77676,77742,77791,77835,78415,78808,79160,79504,79760,79925,79957,80365,80601,80633,80776,80937,81023,81144,81454,81518,82011,82100,83018,83040,83629,83669,83873,84007,84025,84184,84314,84414,84521,84830,84846,85017,85056,85844,86349,86490,86493,86546,86604,86779,86783,86921,86938,87337,87649,87746,87943,88007,88326,88605,88632,88691,88771,89102,89229,89248,89612,89723,89939,89991,90174,90186,90615,90671,91324,91517,92198,92231,92420,92549,92846,93002,93021,93167,93230,93278,93341,93485,93912,94124,94247,94629,94846,95225,95682,96375,96446,96676,98861,98918,99035,99054,99088,99268,99851}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
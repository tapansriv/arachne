XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10208,10609,11070,11167,11712,11772,11892,12161,12700,13124,13679,13740,14294,14352,14567,15169,15457,16035,16590,16671,16758,16813,17074,17190,17505,17862,17901,17905,18013,18150,18497,18691,18755,18967,19038,19097,19236,20074,21175,21333,21631,21647,21734,22091,22306,22384,22939,23278,23583,23673,23819,24161,24424,24574,24675,25871,26043,26052,26111,26340,26366,27166,27311,27438,28041,28363,28720,29073,29137,29193,29377,29472,29563,29576,29605,29752,29867,29976,30329,30374,30565,30853,30953,31200,31250,31265,31355,31504,31780,31968,31971,32273,32480,32563,32691,32780,32945,33102,33107,33205,33461,33572,33669,33717,33927,34025,34404,34503,34822,34926,35150,35302,35545,35895,36132,36356,36374,36377,36651,36702,37702,37753,37795,37882,37961,38401,38610,39305,40033,40053,40368,40466,40653,41028,41111,41227,41673,41841,42050,42099,42199,42601,43129,43402,43418,43812,43907,44055,44135,44250,44888,45378,45467,46424,46442,46487,46583,46908,46933,46996,47333,47758,47915,47969,48026,48069,48101,48318,48494,48831,48964,49106,49804,50236,50532,51326,51432,51456,51738,52118,52560,53183,53312,53722,53805,54050,55434,55936,56050,56119,56459,56624,56771,56926,57140,57194,57916,57937,58552,58781,58828,59078,59377,59508,59675,60047,60391,60788,60837,60906,60907,61577,62036,62107,62200,62302,62387,62583,62672,63291,63607,63661,63918,63956,64186,64412,64636,64765,65228,65292,65366,66028,66938,67004,67307,67340,67365,67666,67755,67813,67953,68089,68237,68452,68516,68589,68870,69068,69228,69380,69923,70343,70414,70714,70815,70941,71151,71210,71310,71407,71475,71614,71618,71793,71988,72068,72600,72610,72765,72957,73039,73072,73165,73586,73645,73820,73840,74358,74471,74718,74929,75421,75583,75688,75827,76281,76313,76389,76416,76493,76496,76671,77256,77540,78325,78418,78487,78681,78707,78810,78954,79023,79242,79279,79298,79439,79958,80473,80695,80910,81267,81322,81343,81358,81406,81544,81600,81727,82059,82482,82535,82692,82934,83147,83199,83305,83326,83550,83906,84214,84797,84980,85225,85513,85563,86016,86043,86068,86451,86824,86937,87137,87172,87473,87685,87743,87781,87987,88241,88351,88606,88619,88689,88816,88823,89021,89413,89511,89603,89621,89641,89649,89733,90654,90925,91129,91201,91785,91814,91877,91937,92185,92492,92551,92598,92631,93035,93120,93277,93502,93652,93870,93961,94076,94242,94433,95013,95128,95960,96375,96408,96461,97491,97542,97779,97864,97895,98002,99408,99984}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
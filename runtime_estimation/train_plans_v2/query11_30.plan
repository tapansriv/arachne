XN Limit  (cost=1012786841951.66..1012786841951.91 rows=100 width=128)
  ->  XN Merge  (cost=1012786841951.66..1012786842445.74 rows=197630 width=128)
        Merge Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_login
        ->  XN Network  (cost=1012786841951.66..1012786842445.74 rows=197630 width=128)
              Send to leader
              ->  XN Sort  (cost=1012786841951.66..1012786842445.74 rows=197630 width=128)
                    Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_login
                    ->  XN Hash Join DS_BCAST_INNER  (cost=9954089954.06..12786824567.69 rows=197630 width=128)
                          Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                          Join Filter: (CASE WHEN ("outer".year_total > 0::double precision) THEN ("outer".year_total / "outer".year_total) ELSE 0::double precision END < CASE WHEN ("outer".year_total > 0::double precision) THEN ("inner".year_total / "outer".year_total) ELSE 0::double precision END)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=8812470346.27..9853638783.30 rows=99346 width=220)
                                Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                                ->  XN Hash Join DS_BCAST_INNER  (cost=4977044864.11..5497577308.98 rows=57273 width=184)
                                      Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                                      ->  XN Subquery Scan t_s_secyear  (cost=3835425285.47..3835425571.57 rows=11443 width=140)
                                            ->  XN Append  (cost=3835425285.47..3835425457.14 rows=11443 width=144)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=3835425285.47..3835425457.10 rows=11442 width=144)
                                                        ->  XN HashAggregate  (cost=3835425285.47..3835425342.68 rows=11442 width=144)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=55262663.60..3835425028.02 rows=11442 width=144)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                                    ->  XN Hash  (cost=55262634.07..55262634.07 rows=11813 width=24)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55262634.07 rows=11813 width=24)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2623834 width=24)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                            Filter: (d_year = 2000)
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                      ->  XN Hash  (cost=1141619576.14..1141619576.14 rows=1001 width=44)
                                            ->  XN Subquery Scan t_w_firstyear  (cost=0.03..1141619576.14 rows=1001 width=44)
                                                  ->  XN Append  (cost=0.03..1141619566.13 rows=1001 width=144)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=1141619513.06..1141619566.09 rows=1000 width=144)
                                                              ->  XN HashAggregate  (cost=1141619513.06..1141619556.09 rows=1000 width=144)
                                                                    Filter: (sum((ws_ext_list_price - ws_ext_discount_amt)) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=55217142.55..1141619426.98 rows=3443 width=144)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                                          ->  XN Hash  (cost=55217134.06..55217134.06 rows=3395 width=24)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55217134.06 rows=3395 width=24)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=24)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 1999)
                                ->  XN Hash  (cost=3835425477.15..3835425477.15 rows=1001 width=44)
                                      ->  XN Subquery Scan t_s_firstyear  (cost=3835425314.07..3835425477.15 rows=1001 width=44)
                                            ->  XN Append  (cost=3835425314.07..3835425467.14 rows=1001 width=144)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=3835425314.07..3835425467.10 rows=1000 width=144)
                                                        ->  XN HashAggregate  (cost=3835425314.07..3835425457.10 rows=1000 width=144)
                                                              Filter: (sum((ss_ext_list_price - ss_ext_discount_amt)) > 0::double precision)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=55262663.60..3835425028.02 rows=11442 width=144)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                                    ->  XN Hash  (cost=55262634.07..55262634.07 rows=11813 width=24)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55262634.07 rows=11813 width=24)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2623834 width=24)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                            Filter: (d_year = 1999)
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                          ->  XN Hash  (cost=1141619590.58..1141619590.58 rows=3444 width=44)
                                ->  XN Subquery Scan t_w_secyear  (cost=0.03..1141619590.58 rows=3444 width=44)
                                      ->  XN Append  (cost=0.03..1141619556.14 rows=3444 width=144)
                                            ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                  ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                        ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                              ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                    Distribute Round Robin
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          One-Time Filter: false
                                            ->  XN Subquery Scan "*SELECT* 2"  (cost=1141619504.45..1141619556.10 rows=3443 width=144)
                                                  ->  XN HashAggregate  (cost=1141619504.45..1141619521.67 rows=3443 width=144)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=55217142.55..1141619426.98 rows=3443 width=144)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                              ->  XN Hash  (cost=55217134.06..55217134.06 rows=3395 width=24)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55217134.06 rows=3395 width=24)
                                                                          Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=24)
                                                                          ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                      Filter: (d_year = 2000)
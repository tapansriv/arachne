XN Limit  (cost=1001276845297.91..1001276845297.97 rows=25 width=49)
  ->  XN Merge  (cost=1001276845297.91..1001276845297.97 rows=25 width=49)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
        ->  XN Network  (cost=1001276845297.91..1001276845297.97 rows=25 width=49)
              Send to leader
              ->  XN Sort  (cost=1001276845297.91..1001276845297.97 rows=25 width=49)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                    ->  XN HashAggregate  (cost=1276845296.95..1276845297.33 rows=25 width=49)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=724685244.28..1276845296.08 rows=25 width=49)
                                Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                ->  XN HashAggregate  (cost=13864480.34..13864480.34 rows=4124 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13864470.03 rows=4124 width=4)
                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                            ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                        Filter: ((d_year = 2000) AND (d_moy <= 6) AND (d_moy >= 3))
                                ->  XN Hash  (cost=710820762.43..710820762.43 rows=605 width=53)
                                      ->  XN Hash Left Join DS_BCAST_INNER  (cost=66775484.19..710820762.43 rows=605 width=53)
                                            Hash Cond: ("outer".c_customer_sk = "inner".rhs_col_1)
                                            Filter: (("outer".witness IS NOT NULL) OR ("inner".witness_1 IS NOT NULL))
                                            ->  XN Hash Left Join DS_BCAST_INNER  (cost=52957988.28..515882575.23 rows=605 width=57)
                                                  Hash Cond: ("outer".c_customer_sk = "inner".rhs_col)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=39124300.11..142687524.16 rows=605 width=53)
                                                        Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                        ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=53)
                                                        ->  XN Hash  (cost=39124298.49..39124298.49 rows=647 width=8)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1125.82..39124298.49 rows=647 width=8)
                                                                    Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                    ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=96276 width=12)
                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=1125.00..1125.00 rows=326 width=4)
                                                                          ->  XN Seq Scan on customer_address ca  (cost=0.00..1125.00 rows=326 width=4)
                                                                                Filter: (((ca_county)::text = 'Wayne County'::text) OR ((ca_county)::text = 'Comal County'::text) OR ((ca_county)::text = 'Coos County'::text) OR ((ca_county)::text = 'Crawford County'::text) OR ((ca_county)::text = 'Fleming County'::text))
                                                  ->  XN Hash  (cost=13833682.55..13833682.55 rows=2246 width=8)
                                                        ->  XN Subquery Scan derived_table1  (cost=1278.64..13833682.55 rows=2246 width=8)
                                                              ->  XN Unique  (cost=1278.64..13833660.09 rows=2246 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13833648.86 rows=2246 width=4)
                                                                          Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=8)
                                                                                Filter: (cs_sold_date_sk IS NOT NULL)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                                                      Filter: ((d_year = 2000) AND (d_moy <= 6) AND (d_moy >= 3))
                                            ->  XN Hash  (cost=13817493.09..13817493.09 rows=1132 width=8)
                                                  ->  XN Subquery Scan derived_table2  (cost=1278.64..13817493.09 rows=1132 width=8)
                                                        ->  XN Unique  (cost=1278.64..13817481.77 rows=1132 width=4)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13817476.11 rows=1132 width=4)
                                                                    Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                                    ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                                                Filter: ((d_year = 2000) AND (d_moy <= 6) AND (d_moy >= 3))
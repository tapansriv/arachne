XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10086,10474,10900,10963,11065,11250,11314,11494,11729,12040,12064,12451,12958,12980,13037,13206,13334,13403,13521,13595,14202,14439,14871,15036,15224,15872,16174,16757,17322,18011,18062,18151,18156,18224,18959,19559,19641,20388,20398,20478,21317,21469,21548,21567,21594,22103,22114,22280,22313,22473,22720,23061,23703,23822,24604,24666,24729,24961,24973,25132,25154,25179,25218,25421,25656,26037,26102,26126,26145,26467,26582,26683,26703,26719,26829,27303,28180,28393,28641,28738,28931,29216,29262,29275,29347,29552,30110,30455,30881,31320,31478,31655,31717,32243,32484,33487,33585,33828,33986,34498,34546,34656,34767,35007,35156,35389,35425,35594,36108,36723,36808,36901,37296,37868,38637,38666,38912,38948,39185,39298,39326,39824,40095,40203,40719,40924,40966,41226,41265,41644,41713,41920,42085,42333,42862,43472,43522,43728,43851,43969,44116,44290,44620,44727,44779,44789,44981,45230,45254,45424,45427,45658,45678,45997,46943,46965,47301,47418,47626,47901,48052,48179,48403,48486,49459,49691,49702,50023,50116,50266,50499,50623,51063,51105,51242,51740,51786,51841,51986,52383,52607,52628,52726,52899,53236,53274,53455,53671,53741,53878,53927,54268,54319,54490,54550,54842,54862,55205,56036,56330,56567,56606,56644,57359,57383,57801,57967,58308,58536,58642,58882,59160,59349,59419,59790,60224,61503,61698,61701,61760,62163,62168,62331,62361,62457,62463,62708,63153,63310,63699,63961,64007,64347,64419,64556,64775,65271,65499,66654,66770,66895,66997,67105,67262,67321,67451,67467,67623,67725,67772,67874,67895,68121,68134,68321,68444,68662,68671,68841,69219,69543,70522,70579,70621,71018,71058,71139,71373,72179,72373,72786,73187,73501,74047,74301,74467,74593,74693,74724,74739,74864,74949,75122,75218,75732,75898,75968,76300,76464,76569,76703,76817,76857,77143,77655,77684,77757,77774,78062,78486,78533,78566,78626,79104,79188,79286,79326,79471,79720,79750,80371,80537,80896,81034,81189,81249,81485,81528,81550,81553,81739,82111,82503,82633,82717,82771,83259,83571,83744,84234,84350,84962,85387,86054,86314,86379,86726,86747,86914,87303,87958,88001,88157,88299,88312,88670,88898,89024,89118,89124,89215,89443,89576,89610,89631,89999,90396,90517,90745,91046,91119,91201,91481,91564,91817,92531,92560,92854,93080,93098,93148,93382,93704,93924,94133,94229,94301,94607,95109,95122,95184,95538,95662,95942,96159,96434,96958,97385,97583,97944,98324,98427,98456,98865,99122,99289,99372,99444,99547,99967}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
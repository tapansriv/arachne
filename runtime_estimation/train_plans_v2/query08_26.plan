XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10604,10791,10989,11733,11804,12241,12375,12561,12591,12598,12867,13650,13730,13975,14127,14239,14446,14791,14883,15623,15668,15735,15898,16002,16390,16570,16748,16821,16927,17175,17546,17953,18095,18146,18153,18327,18348,18378,18699,18761,19029,19042,19158,19265,19510,20258,20320,20596,20703,20754,21065,21091,21427,21888,21904,22843,23086,23435,23785,23795,23862,24304,24417,24604,24647,24873,24922,25040,25473,25549,25676,25898,25957,26001,26271,26467,26798,26928,27294,27398,27720,27722,27764,28119,28250,28610,28817,29141,29205,29342,29978,30006,30095,30214,30294,30452,30688,30975,31437,31673,31846,32378,32401,32407,32702,33115,33237,33404,33631,33762,34536,34673,34863,34896,35140,35393,35899,36323,36551,36663,36751,36804,37543,37563,37596,37623,37688,37718,37730,37816,38027,38164,38498,39083,39350,40075,40138,40150,40169,40200,40444,40541,40779,40804,41701,41990,42011,42547,42951,43114,43395,43549,43892,44092,44162,44679,44724,44797,45016,45125,45265,45755,46004,46098,46382,46701,47154,47320,47498,47509,47731,47895,47953,48385,48607,48610,49564,49732,49777,49983,51017,51150,51225,51595,51637,51892,51988,52262,52547,52798,53068,53569,53981,54378,54732,54887,55286,55545,55795,55967,55991,56686,56943,56971,57089,57148,57886,57968,58149,58335,58724,58857,59138,59140,59312,59744,59830,60630,60726,61078,61467,61492,61517,61841,62009,62065,62616,62828,62969,63090,63108,63292,63578,65188,65263,65331,65451,65502,65526,65727,66411,66572,66861,67135,67275,67728,67837,67876,68029,68455,69081,69402,69714,69718,69739,69751,69840,70555,70636,70804,70847,71033,71189,71190,71644,71754,71992,72799,72914,73183,73248,73500,73760,73975,74017,74346,74588,74953,75011,75113,75234,75252,75452,75656,76020,76268,76317,76409,76458,76524,76664,77176,77371,77399,77540,77584,77757,77875,77907,77923,78129,78249,78283,78841,78874,79031,79430,79930,80347,80404,80736,80975,81060,81361,81390,81457,82387,82504,82603,82627,82745,82942,82964,83010,83133,83223,83248,83346,83349,83354,83569,83647,83682,84620,84789,84910,85416,85853,86276,86488,86543,86831,86863,86877,86997,87300,87519,87600,88074,88142,88672,88818,88941,89048,89397,89481,89507,89635,89853,90139,90153,90364,90391,91036,91337,91354,91408,91969,92023,92463,92828,93133,93465,94289,94331,94342,94349,94791,95113,95495,95625,95627,95774,95840,96041,96552,96589,97125,97591,97690,97858,97984,98483,98562,99159,99220,99512,99684,99869,99984}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
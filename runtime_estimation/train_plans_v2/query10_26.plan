XN Limit  (cost=1001073083266.67..1001073083266.69 rows=9 width=49)
  ->  XN Merge  (cost=1001073083266.67..1001073083266.69 rows=9 width=49)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
        ->  XN Network  (cost=1001073083266.67..1001073083266.69 rows=9 width=49)
              Send to leader
              ->  XN Sort  (cost=1001073083266.67..1001073083266.69 rows=9 width=49)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                    ->  XN HashAggregate  (cost=1073083266.39..1073083266.52 rows=9 width=49)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=770523214.44..1073083266.08 rows=9 width=49)
                                Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                ->  XN HashAggregate  (cost=13864480.34..13864480.34 rows=4124 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13864470.03 rows=4124 width=4)
                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                            ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                        Filter: ((d_year = 2001) AND (d_moy <= 6) AND (d_moy >= 3))
                                ->  XN Hash  (cost=756658733.56..756658733.56 rows=215 width=53)
                                      ->  XN Hash Right Join DS_DIST_OUTER  (cost=561722504.94..756658733.56 rows=215 width=53)
                                            Outer Dist Key: derived_table2.rhs_col_1
                                            Hash Cond: ("outer".rhs_col_1 = "inner".c_customer_sk)
                                            Filter: (("inner".witness IS NOT NULL) OR ("outer".witness_1 IS NOT NULL))
                                            ->  XN Subquery Scan derived_table2  (cost=1278.64..13817493.09 rows=1132 width=8)
                                                  ->  XN Unique  (cost=1278.64..13817481.77 rows=1132 width=4)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13817476.11 rows=1132 width=4)
                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                                          Filter: ((d_year = 2001) AND (d_moy <= 6) AND (d_moy >= 3))
                                            ->  XN Hash  (cost=561721225.76..561721225.76 rows=215 width=57)
                                                  ->  XN Hash Right Join DS_DIST_BOTH  (cost=50928793.73..561721225.76 rows=215 width=57)
                                                        Outer Dist Key: derived_table1.rhs_col
                                                        Inner Dist Key: c.c_customer_sk
                                                        Hash Cond: ("outer".rhs_col = "inner".c_customer_sk)
                                                        ->  XN Subquery Scan derived_table1  (cost=1278.64..13833682.55 rows=2246 width=8)
                                                              ->  XN Unique  (cost=1278.64..13833660.09 rows=2246 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.64..13833648.86 rows=2246 width=4)
                                                                          Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=8)
                                                                                Filter: (cs_sold_date_sk IS NOT NULL)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=115 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=115 width=4)
                                                                                      Filter: ((d_year = 2001) AND (d_moy <= 6) AND (d_moy >= 3))
                                                        ->  XN Hash  (cost=50927514.55..50927514.55 rows=215 width=53)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=13924294.39..50927514.55 rows=215 width=53)
                                                                    Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                    ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=53)
                                                                    ->  XN Hash  (cost=13924293.81..13924293.81 rows=231 width=8)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1125.29..13924293.81 rows=231 width=8)
                                                                                Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                                ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=96276 width=12)
                                                                                      Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                                ->  XN Hash  (cost=1125.00..1125.00 rows=116 width=4)
                                                                                      ->  XN Seq Scan on customer_address ca  (cost=0.00..1125.00 rows=116 width=4)
                                                                                            Filter: (((ca_county)::text = 'Campbell County'::text) OR ((ca_county)::text = 'Cumberland County'::text) OR ((ca_county)::text = 'Pickaway County'::text) OR ((ca_county)::text = 'Roosevelt County'::text) OR ((ca_county)::text = 'Sacramento County'::text))
XN Limit  (cost=1000040131500.57..1000040131500.57 rows=2 width=40)
  ->  XN Merge  (cost=1000040131500.57..1000040131500.57 rows=2 width=40)
        Merge Key: "substring"((reason.r_reason_desc)::text, 1, 20), avg(web_sales.ws_quantity), avg(web_returns.wr_refunded_cash), avg(web_returns.wr_fee)
        ->  XN Network  (cost=1000040131500.57..1000040131500.57 rows=2 width=40)
              Send to leader
              ->  XN Sort  (cost=1000040131500.57..1000040131500.57 rows=2 width=40)
                    Sort Key: "substring"((reason.r_reason_desc)::text, 1, 20), avg(web_sales.ws_quantity), avg(web_returns.wr_refunded_cash), avg(web_returns.wr_fee)
                    ->  XN HashAggregate  (cost=40131500.54..40131500.56 rows=2 width=40)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=39611499.15..40131500.52 rows=2 width=40)
                                Hash Cond: ("outer".wp_web_page_sk = "inner".ws_web_page_sk)
                                ->  XN Seq Scan on web_page  (cost=0.00..0.60 rows=60 width=4)
                                ->  XN Hash  (cost=39611499.14..39611499.14 rows=1 width=44)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=38969612.98..39611499.14 rows=1 width=44)
                                            Hash Cond: ("outer".ca_address_sk = "inner".wr_refunded_addr_sk)
                                            Join Filter: ((("inner".ws_net_profit >= 150::double precision) AND ("inner".ws_net_profit <= 300::double precision) AND ((("outer".ca_state)::text = 'GA'::text) OR (("outer".ca_state)::text = 'KY'::text) OR (("outer".ca_state)::text = 'TN'::text))) OR (("inner".ws_net_profit >= 50::double precision) AND ("inner".ws_net_profit <= 250::double precision) AND ((("outer".ca_state)::text = 'OH'::text) OR (("outer".ca_state)::text = 'MI'::text) OR (("outer".ca_state)::text = 'WY'::text))) OR (("inner".ws_net_profit >= 100::double precision) AND ("inner".ws_net_profit <= 200::double precision) AND ((("outer".ca_state)::text = 'KS'::text) OR (("outer".ca_state)::text = 'MN'::text) OR (("outer".ca_state)::text = 'CO'::text))))
                                            ->  XN Seq Scan on customer_address  (cost=0.00..1750.00 rows=10889 width=10)
                                                  Filter: (((((ca_state)::text = 'GA'::text) OR ((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'TN'::text)) OR (((ca_state)::text = 'KS'::text) OR ((ca_state)::text = 'MN'::text) OR ((ca_state)::text = 'CO'::text)) OR (((ca_state)::text = 'OH'::text) OR ((ca_state)::text = 'MI'::text) OR ((ca_state)::text = 'WY'::text))) AND ((ca_country)::text = 'United States'::text))
                                            ->  XN Hash  (cost=38969612.98..38969612.98 rows=1 width=56)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=38489612.18..38969612.98 rows=1 width=56)
                                                        Hash Cond: ("outer".r_reason_sk = "inner".wr_reason_sk)
                                                        ->  XN Seq Scan on reason  (cost=0.00..0.35 rows=35 width=24)
                                                        ->  XN Hash  (cost=38489612.18..38489612.18 rows=1 width=40)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=37635414.62..38489612.18 rows=1 width=40)
                                                                    Hash Cond: (("outer".cd_demo_sk = "inner".wr_refunded_cdemo_sk) AND (("outer".cd_education_status)::text = ("inner".cd_education_status)::text) AND (("outer".cd_marital_status)::text = ("inner".cd_marital_status)::text))
                                                                    Join Filter: ((("inner".ws_sales_price <= 150::double precision) AND ("inner".ws_sales_price >= 100::double precision) AND (("outer".cd_education_status)::text = 'Unknown'::text) AND (("outer".cd_marital_status)::text = 'U'::text)) OR (("inner".ws_sales_price <= 100::double precision) AND ("inner".ws_sales_price >= 50::double precision) AND (("outer".cd_education_status)::text = 'College'::text) AND (("outer".cd_marital_status)::text = 'S'::text)) OR (("inner".ws_sales_price <= 200::double precision) AND ("inner".ws_sales_price >= 150::double precision) AND (("outer".cd_education_status)::text = '2 yr Degree'::text) AND (("outer".cd_marital_status)::text = 'W'::text)))
                                                                    ->  XN Seq Scan on customer_demographics cd1  (cost=0.00..48020.00 rows=164734 width=22)
                                                                          Filter: ((((cd_education_status)::text = 'Unknown'::text) AND ((cd_marital_status)::text = 'U'::text)) OR (((cd_education_status)::text = 'College'::text) AND ((cd_marital_status)::text = 'S'::text)) OR (((cd_education_status)::text = '2 yr Degree'::text) AND ((cd_marital_status)::text = 'W'::text)))
                                                                    ->  XN Hash  (cost=37635414.61..37635414.61 rows=1 width=70)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=36952196.60..37635414.61 rows=1 width=70)
                                                                                Hash Cond: ("outer".cd_demo_sk = "inner".wr_returning_cdemo_sk)
                                                                                ->  XN Seq Scan on customer_demographics cd2  (cost=0.00..19208.00 rows=1920800 width=22)
                                                                                ->  XN Hash  (cost=36952196.60..36952196.60 rows=1 width=56)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=36549975.91..36952196.60 rows=1 width=56)
                                                                                            Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                                            ->  XN Seq Scan on web_returns  (cost=0.00..717.63 rows=60122 width=40)
                                                                                                  Filter: ((wr_refunded_cdemo_sk IS NOT NULL) AND (wr_refunded_addr_sk IS NOT NULL) AND (wr_reason_sk IS NOT NULL) AND (wr_returning_cdemo_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=36549975.90..36549975.90 rows=1 width=32)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=28775.57..36549975.90 rows=1 width=32)
                                                                                                        Hash Cond: ("outer".d_date_sk = "inner".ws_sold_date_sk)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                              Filter: (d_year = 1999)
                                                                                                        ->  XN Hash  (cost=28775.36..28775.36 rows=83 width=36)
                                                                                                              ->  XN Seq Scan on web_sales  (cost=0.00..28775.36 rows=83 width=36)
                                                                                                                    Filter: ((((ws_net_profit >= 50::double precision) AND (ws_net_profit <= 250::double precision)) OR ((ws_net_profit >= 150::double precision) AND (ws_net_profit <= 300::double precision)) OR ((ws_net_profit >= 100::double precision) AND (ws_net_profit <= 200::double precision))) AND (((ws_sales_price <= 200::double precision) AND (ws_sales_price >= 150::double precision)) OR ((ws_sales_price <= 100::double precision) AND (ws_sales_price >= 50::double precision)) OR ((ws_sales_price <= 150::double precision) AND (ws_sales_price >= 100::double precision))))
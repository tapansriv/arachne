XN Limit  (cost=1000741381798.76..1000741381799.01 rows=100 width=23)
  ->  XN Merge  (cost=1000741381798.76..1000741381801.03 rows=908 width=23)
        Merge Key: customer_address.ca_zip, customer_address.ca_state
        ->  XN Network  (cost=1000741381798.76..1000741381801.03 rows=908 width=23)
              Send to leader
              ->  XN Sort  (cost=1000741381798.76..1000741381801.03 rows=908 width=23)
                    Sort Key: customer_address.ca_zip, customer_address.ca_state
                    ->  XN HashAggregate  (cost=741381751.88..741381754.15 rows=908 width=23)
                          ->  XN Hash Left Join DS_BCAST_INNER  (cost=419781319.60..741381745.07 rows=908 width=23)
                                Hash Cond: (("outer".i_item_id)::text = ("inner".rhs_col)::text)
                                Filter: (("inner".witness IS NOT NULL) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '80348'::text) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '81792'::text) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '83405'::text) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '85392'::text) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '85460'::text) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '85669'::text) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '86197'::text) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '86475'::text) OR ("substring"(("outer".ca_zip)::text, 1, 5) = '88274'::text))
                                ->  XN Hash Join DS_BCAST_INNER  (cost=419780689.47..738021103.53 rows=908 width=43)
                                      Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                      ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                      ->  XN Hash  (cost=419780687.26..419780687.26 rows=884 width=27)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=213619553.42..419780687.26 rows=884 width=27)
                                                  Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                  ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=19)
                                                  ->  XN Hash  (cost=213619551.27..213619551.27 rows=859 width=16)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=10337292.68..213619551.27 rows=859 width=16)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=8)
                                                              ->  XN Hash  (cost=10337290.56..10337290.56 rows=847 width=16)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10337290.56 rows=847 width=16)
                                                                          Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=20)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                                                      Filter: ((d_year = 1998) AND (d_qoy = 2))
                                ->  XN Hash  (cost=630.11..630.11 rows=6 width=46)
                                      ->  XN Subquery Scan derived_table1  (cost=0.00..630.11 rows=6 width=46)
                                            ->  XN Unique  (cost=0.00..630.05 rows=6 width=20)
                                                  ->  XN Seq Scan on item  (cost=0.00..630.00 rows=11 width=20)
                                                        Filter: ((i_item_sk = 2) OR (i_item_sk = 3) OR (i_item_sk = 5) OR (i_item_sk = 7) OR (i_item_sk = 11) OR (i_item_sk = 13) OR (i_item_sk = 17) OR (i_item_sk = 19) OR (i_item_sk = 23) OR (i_item_sk = 29))
XN Hash Left Join DS_BCAST_INNER  (cost=400718464.22..400840714.23 rows=100000 width=12)
  Hash Cond: ("outer".oid = "inner".oid)
  Filter: ("inner".oid IS NULL)
  ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=16)
  ->  XN Hash  (cost=400718464.22..400718464.22 rows=1 width=4)
        ->  XN Subquery Scan volt_dt_0  (cost=400515246.20..400718464.22 rows=1 width=4)
              ->  XN Unique  (cost=400515246.20..400718464.21 rows=1 width=4)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=400515246.20..400718464.21 rows=1 width=4)
                          Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                          ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                          ->  XN Hash  (cost=400515246.20..400515246.20 rows=1 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=400114313.45..400515246.20 rows=1 width=8)
                                      Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                      ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=4619 width=4)
                                            Filter: (((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'IL'::text) OR ((ca_state)::text = 'OK'::text))
                                      ->  XN Hash  (cost=400114313.44..400114313.44 rows=2 width=12)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=399792063.42..400114313.44 rows=2 width=12)
                                                  Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                  ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=16)
                                                  ->  XN Hash  (cost=399792063.42..399792063.42 rows=2 width=8)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=266872022.99..399792063.42 rows=2 width=8)
                                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                              ->  XN HashAggregate  (cost=10386128.07..10386128.07 rows=3233 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..10386119.99 rows=3233 width=4)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2880404 width=8)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
                                                                                      Filter: ((2002 = d_year) AND (d_moy <= 3) AND (d_moy >= 1))
                                                              ->  XN Hash  (cost=256485894.84..256485894.84 rows=30 width=4)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=256485894.54..256485894.84 rows=30 width=4)
                                                                          ->  XN HashAggregate  (cost=256485894.54..256485894.54 rows=30 width=4)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=251683644.16..256485894.46 rows=30 width=4)
                                                                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                      ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=4)
                                                                                      ->  XN Hash  (cost=251683644.09..251683644.09 rows=30 width=8)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=20723603.38..251683644.09 rows=30 width=8)
                                                                                                  Hash Cond: ("outer".ss_customer_sk = "inner".ws_bill_customer_sk)
                                                                                                  ->  XN HashAggregate  (cost=10386128.07..10386128.07 rows=3233 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..10386119.99 rows=3233 width=4)
                                                                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2880404 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
                                                                                                                          Filter: ((2002 = d_year) AND (d_moy <= 3) AND (d_moy >= 1))
                                                                                                  ->  XN Hash  (cost=10337473.18..10337473.18 rows=847 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..10337473.18 rows=847 width=4)
                                                                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
                                                                                                                          Filter: ((2002 = d_year) AND (d_moy <= 3) AND (d_moy >= 1))

XN Hash Join DS_BCAST_INNER  (cost=1278.57..10384459.55 rows=3084 width=4)
  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
  ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
        Filter: (ss_sold_date_sk IS NOT NULL)
  ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
              Filter: ((2002 = d_year) AND (d_moy <= 3) AND (d_moy >= 1))

XN Limit  (cost=1002591173405.37..1002591173405.62 rows=100 width=37)
  ->  XN Merge  (cost=1002591173405.37..1002591173406.91 rows=616 width=37)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
        ->  XN Network  (cost=1002591173405.37..1002591173406.91 rows=616 width=37)
              Send to leader
              ->  XN Sort  (cost=1002591173405.37..1002591173406.91 rows=616 width=37)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                    ->  XN HashAggregate  (cost=2591173372.21..2591173376.83 rows=616 width=37)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=2512170135.72..2591173359.89 rows=616 width=37)
                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=41)
                                ->  XN Hash  (cost=2512170134.07..2512170134.07 rows=658 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1117886403.17..2512170134.07 rows=658 width=4)
                                            Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1117885516.62..1957889085.54 rows=6907 width=8)
                                                  Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                  ->  XN Hash Left Join DS_BCAST_INNER  (cost=838404454.54..839966704.49 rows=99992 width=12)
                                                        Hash Cond: ("outer".oid = "inner".oid)
                                                        Filter: ("inner".oid IS NULL)
                                                        ->  XN Seq Scan on volt_tt_61938b251face  (cost=0.00..999.92 rows=99992 width=16)
                                                        ->  XN Hash  (cost=838404454.51..838404454.51 rows=13 width=4)
                                                              ->  XN Subquery Scan volt_dt_1  (cost=836121236.20..838404454.51 rows=13 width=4)
                                                                    ->  XN Unique  (cost=836121236.20..838404454.38 rows=13 width=4)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=836121236.20..838404454.34 rows=13 width=4)
                                                                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                                                                                ->  XN Hash  (cost=836121236.17..836121236.17 rows=14 width=8)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=834120303.42..836121236.17 rows=14 width=8)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=4619 width=4)
                                                                                                  Filter: (((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'IL'::text) OR ((ca_state)::text = 'OK'::text))
                                                                                            ->  XN Hash  (cost=834120303.40..834120303.40 rows=10 width=12)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=811078095.06..834120303.40 rows=10 width=12)
                                                                                                        Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                                                                                        ->  XN Seq Scan on volt_tt_61938b251face  (cost=0.00..999.92 rows=96560 width=16)
                                                                                                              Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                                                        ->  XN Hash  (cost=811078094.70..811078094.70 rows=144 width=8)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=513958005.92..811078094.70 rows=144 width=8)
                                                                                                                    Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                                                                                    ->  XN HashAggregate  (cost=1044.61..1044.61 rows=6987 width=4)
                                                                                                                          ->  XN Seq Scan on volt_tt_61938b2531ad1  (cost=0.00..835.69 rows=83569 width=4)
                                                                                                                    ->  XN Hash  (cost=513956960.94..513956960.94 rows=147 width=4)
                                                                                                                          ->  XN Subquery Scan volt_dt_2  (cost=513956959.47..513956960.94 rows=147 width=4)
                                                                                                                                ->  XN HashAggregate  (cost=513956959.47..513956959.47 rows=147 width=4)
                                                                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=490594707.80..513956959.10 rows=147 width=4)
                                                                                                                                            Hash Cond: ("outer".c_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                            ->  XN Seq Scan on volt_tt_61938b251face  (cost=0.00..999.92 rows=99992 width=4)
                                                                                                                                            ->  XN Hash  (cost=490594707.44..490594707.44 rows=146 width=8)
                                                                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=10354618.64..490594707.44 rows=146 width=8)
                                                                                                                                                        Hash Cond: ("outer".ss_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                                        ->  XN HashAggregate  (cost=1044.61..1044.61 rows=6987 width=4)
                                                                                                                                                              ->  XN Seq Scan on volt_tt_61938b2531ad1  (cost=0.00..835.69 rows=83569 width=4)
                                                                                                                                                        ->  XN Hash  (cost=10353569.85..10353569.85 rows=1673 width=4)
                                                                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..10353569.85 rows=1673 width=4)
                                                                                                                                                                    Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                                                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1428725 width=8)
                                                                                                                                                                          Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_ship_customer_sk IS NOT NULL))
                                                                                                                                                                    ->  XN Hash  (cost=1278.36..1278.36 rows=86 width=4)
                                                                                                                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=86 width=4)
                                                                                                                                                                                Filter: ((d_year = 2002) AND (d_moy <= 3) AND (d_moy >= 1))
                                                  ->  XN Hash  (cost=1044.61..1044.61 rows=6987 width=4)
                                                        ->  XN HashAggregate  (cost=1044.61..1044.61 rows=6987 width=4)
                                                              ->  XN Seq Scan on volt_tt_61938b2531ad1  (cost=0.00..835.69 rows=83569 width=4)
                                            ->  XN Hash  (cost=875.00..875.00 rows=4619 width=4)
                                                  ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=4619 width=4)
                                                        Filter: (((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'IL'::text) OR ((ca_state)::text = 'OK'::text))
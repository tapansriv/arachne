XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: ("substring"(("outer".ca_zip)::text, 1, 2) = "substring"(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: ("substring"((ca_zip)::text, 1, 5) = ANY ('{10670,10881,10959,11080,11943,12096,12111,12380,12430,12600,12762,13206,13377,13959,14154,14262,14373,14516,14640,15378,15465,15702,16389,16485,16801,16893,16932,17186,17660,17817,18297,18462,18856,19506,19675,19767,19905,20818,20894,21583,21640,22384,22456,22622,22750,22861,22929,22965,23000,23070,23515,23610,23636,23718,23929,24025,24798,25011,25178,25239,25291,25560,25771,25827,26185,26395,26700,26902,26954,27034,27573,28183,28676,29008,29163,29347,29741,29871,29886,30700,30837,30854,31832,32041,33092,33116,33125,33363,33842,34038,34104,34204,34460,34697,34812,34874,34908,35011,35116,35300,35404,35498,35829,35858,36082,36121,36159,36165,36734,37211,37295,37705,37830,37870,38100,38146,38666,39119,39638,39811,39834,39860,40199,40777,40845,40855,40988,41429,41450,41819,41837,41995,42035,42066,42068,42527,42549,42859,43002,43120,43597,43690,44306,44656,44703,44925,44930,45077,45161,45454,45714,46053,46083,46360,46487,47023,47341,47588,47618,47757,47884,47934,48233,48262,48535,49058,49327,50053,50058,50389,50712,50805,51139,51452,52002,52663,52775,53067,53076,53904,53955,54477,54552,54577,54733,54854,55293,55442,55581,56549,56871,57090,57247,57334,57669,57719,57951,58458,58800,58809,58867,58929,59213,59492,59585,59729,59984,60165,60273,60558,60658,60712,60812,60981,61211,61273,61280,61306,61387,61610,61873,61906,62173,62207,62991,63027,63236,63437,63537,63560,63683,64037,64128,64188,64191,64249,64327,64377,64458,65099,65330,65390,65415,65594,65598,65651,65820,65896,66112,66123,66337,66352,66539,67478,67927,68204,68250,68420,68569,68912,68923,69121,69418,69748,69880,69916,69920,70025,70199,70288,70328,70334,70586,71727,71891,72123,72165,72188,72347,72783,72991,73021,73199,73251,73451,74003,74033,74060,74410,74749,75577,75886,76197,76235,76440,76605,76928,76991,76999,77091,77164,77455,77501,77513,77552,77574,77664,78151,78278,78423,78865,79175,79272,79300,79523,79890,80499,81340,81445,81643,81723,81882,81942,82063,82285,82849,83027,83165,83424,83630,83994,84166,84182,84256,84454,84581,84648,84679,84979,85002,85586,85721,85831,86189,86492,86559,86639,87114,87326,87678,87728,87732,87917,88169,88372,88497,88912,89135,89523,89569,89819,89835,90008,90010,90061,90177,90309,90370,90382,90572,90602,91130,91298,91482,91822,91827,91912,92069,92480,93080,93251,93822,93869,93877,94409,94772,95866,95925,96122,96266,96330,96731,97786,98040,98322,98996,99109,99405,99471,99941}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
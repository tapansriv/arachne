XN Nested Loop DS_BCAST_INNER  (cost=3043745858.70..3044865858.85 rows=1 width=64)
  ->  XN Nested Loop DS_BCAST_INNER  (cost=2670477631.14..2671437631.27 rows=1 width=56)
        ->  XN Nested Loop DS_BCAST_INNER  (cost=2297209403.58..2298009403.69 rows=1 width=48)
              ->  XN Nested Loop DS_BCAST_INNER  (cost=1909541166.47..1910181166.56 rows=1 width=40)
                    ->  XN Nested Loop DS_BCAST_INNER  (cost=1536272938.91..1536752938.98 rows=1 width=32)
                          ->  XN Nested Loop DS_BCAST_INNER  (cost=1163004711.35..1163324711.40 rows=1 width=24)
                                ->  XN Nested Loop DS_BCAST_INNER  (cost=775336474.24..775496474.26 rows=1 width=16)
                                      ->  XN Subquery Scan s4  (cost=387668237.12..387668237.13 rows=1 width=8)
                                            ->  XN Aggregate  (cost=387668237.12..387668237.12 rows=1 width=0)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1484.22..387668235.19 rows=768 width=0)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1300.80..223387951.53 rows=4114 width=4)
                                                              Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                                          Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                                                Filter: ((s_store_name)::text = 'ese'::text)
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                                          Filter: ((t_hour = 10) AND (t_minute < 30))
                                                        ->  XN Hash  (cost=180.00..180.00 rows=1369 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1369 width=4)
                                                                    Filter: (((hd_dep_count = 3) AND (hd_vehicle_count <= 5)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
                                      ->  XN Subquery Scan s8  (cost=387668237.12..387668237.13 rows=1 width=8)
                                            ->  XN Aggregate  (cost=387668237.12..387668237.12 rows=1 width=0)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1484.22..387668235.19 rows=768 width=0)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1300.80..223387951.53 rows=4114 width=4)
                                                              Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                                          Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                                                Filter: ((s_store_name)::text = 'ese'::text)
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                                          Filter: ((t_hour = 12) AND (t_minute < 30))
                                                        ->  XN Hash  (cost=180.00..180.00 rows=1369 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1369 width=4)
                                                                    Filter: (((hd_dep_count = 3) AND (hd_vehicle_count <= 5)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
                                ->  XN Subquery Scan s2  (cost=387668237.12..387668237.13 rows=1 width=8)
                                      ->  XN Aggregate  (cost=387668237.12..387668237.12 rows=1 width=0)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1484.22..387668235.19 rows=768 width=0)
                                                  Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1300.80..223387951.53 rows=4114 width=4)
                                                        Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                              Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                                    Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                                    ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                                          Filter: ((s_store_name)::text = 'ese'::text)
                                                        ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                              ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                                    Filter: ((t_hour = 9) AND (t_minute < 30))
                                                  ->  XN Hash  (cost=180.00..180.00 rows=1369 width=4)
                                                        ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1369 width=4)
                                                              Filter: (((hd_dep_count = 3) AND (hd_vehicle_count <= 5)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
                          ->  XN Subquery Scan s7  (cost=373268227.56..373268227.57 rows=1 width=8)
                                ->  XN Aggregate  (cost=373268227.56..373268227.56 rows=1 width=0)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1483.92..373268225.76 rows=718 width=0)
                                            Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1300.50..208987948.57 rows=3848 width=4)
                                                  Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                        Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                              Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                              ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                                    Filter: ((s_store_name)::text = 'ese'::text)
                                                  ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                                        ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                                              Filter: ((t_hour = 11) AND (t_minute >= 30))
                                            ->  XN Hash  (cost=180.00..180.00 rows=1369 width=4)
                                                  ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1369 width=4)
                                                        Filter: (((hd_dep_count = 3) AND (hd_vehicle_count <= 5)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
                    ->  XN Subquery Scan s3  (cost=373268227.56..373268227.57 rows=1 width=8)
                          ->  XN Aggregate  (cost=373268227.56..373268227.56 rows=1 width=0)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1483.92..373268225.76 rows=718 width=0)
                                      Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1300.50..208987948.57 rows=3848 width=4)
                                            Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                  Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                  ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                        Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                        ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                              Filter: ((s_store_name)::text = 'ese'::text)
                                            ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                                  ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                                        Filter: ((t_hour = 9) AND (t_minute >= 30))
                                      ->  XN Hash  (cost=180.00..180.00 rows=1369 width=4)
                                            ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1369 width=4)
                                                  Filter: (((hd_dep_count = 3) AND (hd_vehicle_count <= 5)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
              ->  XN Subquery Scan s6  (cost=387668237.12..387668237.13 rows=1 width=8)
                    ->  XN Aggregate  (cost=387668237.12..387668237.12 rows=1 width=0)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1484.22..387668235.19 rows=768 width=0)
                                Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1300.80..223387951.53 rows=4114 width=4)
                                      Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                  Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                            ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                        Filter: ((s_store_name)::text = 'ese'::text)
                                      ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                            ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                  Filter: ((t_hour = 11) AND (t_minute < 30))
                                ->  XN Hash  (cost=180.00..180.00 rows=1369 width=4)
                                      ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1369 width=4)
                                            Filter: (((hd_dep_count = 3) AND (hd_vehicle_count <= 5)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
        ->  XN Subquery Scan s1  (cost=373268227.56..373268227.57 rows=1 width=8)
              ->  XN Aggregate  (cost=373268227.56..373268227.56 rows=1 width=0)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1483.92..373268225.76 rows=718 width=0)
                          Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1300.50..208987948.57 rows=3848 width=4)
                                Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                      Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                            Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                      ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                            ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                  Filter: ((s_store_name)::text = 'ese'::text)
                                ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                      ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                            Filter: ((t_hour = 8) AND (t_minute >= 30))
                          ->  XN Hash  (cost=180.00..180.00 rows=1369 width=4)
                                ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1369 width=4)
                                      Filter: (((hd_dep_count = 3) AND (hd_vehicle_count <= 5)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
  ->  XN Subquery Scan s5  (cost=373268227.56..373268227.57 rows=1 width=8)
        ->  XN Aggregate  (cost=373268227.56..373268227.56 rows=1 width=0)
              ->  XN Hash Join DS_BCAST_INNER  (cost=1483.92..373268225.76 rows=718 width=0)
                    Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1300.50..208987948.57 rows=3848 width=4)
                          Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                      Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                      ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                            Filter: ((s_store_name)::text = 'ese'::text)
                          ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                      Filter: ((t_hour = 10) AND (t_minute >= 30))
                    ->  XN Hash  (cost=180.00..180.00 rows=1369 width=4)
                          ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1369 width=4)
                                Filter: (((hd_dep_count = 3) AND (hd_vehicle_count <= 5)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
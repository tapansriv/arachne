XN CTE Scan on friend_shortest  (cost=50124382766.49..50124382766.76 rows=106 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..50124382766.49 rows=106 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=39850162329.93..50124357766.48 rows=105 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=39850162329.93..50124357765.43 rows=105 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=39850162329.93..39850162971.90 rows=64197 width=8)
                            ->  XN Hash Join DS_DIST_NONE  (cost=19924528368.27..39849135113.73 rows=64197 width=8)
                                  Hash Cond: ("outer".ss_item_sk = "inner".ss_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=25415.09..19924502673.69 rows=111796 width=8)
                                        Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                        ->  XN Seq Scan on store_sales  (cost=0.00..18070.31 rows=1445626 width=8)
                                              Filter: (ss_item_sk < 1000)
                                        ->  XN Hash  (cost=25000.00..25000.00 rows=166037 width=4)
                                              ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=166037 width=4)
                                                    Filter: ((c_last_name)::text ~~ 'M%'::text)
                                  ->  XN Hash  (cost=19924502673.69..19924502673.69 rows=111796 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=25415.09..19924502673.69 rows=111796 width=8)
                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                              ->  XN Seq Scan on store_sales  (cost=0.00..18070.31 rows=1445626 width=8)
                                                    Filter: (ss_item_sk < 1000)
                                              ->  XN Hash  (cost=25000.00..25000.00 rows=166037 width=4)
                                                    ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=166037 width=4)
                                                          Filter: ((c_last_name)::text ~~ 'M%'::text)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
XN CTE Scan on friend_shortest  (cost=103494473042.95..103494473044.57 rows=647 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..103494473042.95 rows=647 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=39859157319.78..103494448042.94 rows=646 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=39859157319.78..103494448036.48 rows=646 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=39859157319.78..39859161295.95 rows=397617 width=8)
                            ->  XN Hash Join DS_DIST_NONE  (cost=19926337483.38..39852795050.17 rows=397617 width=8)
                                  Hash Cond: ("outer".cs_item_sk = "inner".cs_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=25415.09..19926311372.72 rows=278229 width=8)
                                        Hash Cond: ("outer".cs_bill_customer_sk = "inner".c_customer_sk)
                                        ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=3456955 width=8)
                                              Filter: (cs_item_sk < 5000)
                                        ->  XN Hash  (cost=25000.00..25000.00 rows=166037 width=4)
                                              ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=166037 width=4)
                                                    Filter: ((c_last_name)::text ~~ 'M%'::text)
                                  ->  XN Hash  (cost=19926311372.72..19926311372.72 rows=278229 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=25415.09..19926311372.72 rows=278229 width=8)
                                              Hash Cond: ("outer".cs_bill_customer_sk = "inner".c_customer_sk)
                                              ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=3456955 width=8)
                                                    Filter: (cs_item_sk < 5000)
                                              ->  XN Hash  (cost=25000.00..25000.00 rows=166037 width=4)
                                                    ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=166037 width=4)
                                                          Filter: ((c_last_name)::text ~~ 'M%'::text)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
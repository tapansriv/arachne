XN CTE Scan on friend_shortest  (cost=151670853344.05..151670853345.74 rows=675 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..151670853344.05 rows=675 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=85315629353.84..151670828344.04 rows=674 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=85315629353.84..151670828337.30 rows=674 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=85315629353.84..85315633499.96 rows=414612 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=19925438298.69..85308995147.23 rows=414612 width=8)
                                  Hash Cond: ("outer".ws_item_sk = "inner".ws_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=25415.09..19925412173.31 rows=284113 width=8)
                                        Hash Cond: ("outer".ws_bill_customer_sk = "inner".c_customer_sk)
                                        ->  XN Seq Scan on web_sales  (cost=0.00..900015.50 rows=3512127 width=8)
                                              Filter: (ws_item_sk < 10000)
                                        ->  XN Hash  (cost=25000.00..25000.00 rows=166037 width=4)
                                              ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=166037 width=4)
                                                    Filter: ((c_last_name)::text ~~ 'M%'::text)
                                  ->  XN Hash  (cost=19925412173.31..19925412173.31 rows=284113 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=25415.09..19925412173.31 rows=284113 width=8)
                                              Hash Cond: ("outer".ws_bill_customer_sk = "inner".c_customer_sk)
                                              ->  XN Seq Scan on web_sales  (cost=0.00..900015.50 rows=3512127 width=8)
                                                    Filter: (ws_item_sk < 10000)
                                              ->  XN Hash  (cost=25000.00..25000.00 rows=166037 width=4)
                                                    ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=166037 width=4)
                                                          Filter: ((c_last_name)::text ~~ 'M%'::text)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
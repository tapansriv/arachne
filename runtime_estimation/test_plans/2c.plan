XN CTE Scan on friend_shortest  (cost=6984444511947.35..6984444512103.73 rows=62551 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..6984444511947.35 rows=62551 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=822678676475.76..6984444486947.34 rows=62550 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=822678676475.76..6984444486321.84 rows=62550 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=822678676475.76..822679061485.84 rows=38501008 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=192001191261.17..822062621846.76 rows=38501008 width=8)
                                  Hash Cond: ("outer".ws_item_sk = "inner".ws_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=29000.00..192001155416.61 rows=2737825 width=8)
                                        Hash Cond: ("outer".ws_bill_customer_sk = "inner".c_customer_sk)
                                        ->  XN Seq Scan on web_sales  (cost=0.00..900015.50 rows=3512127 width=8)
                                              Filter: (ws_item_sk < 10000)
                                        ->  XN Hash  (cost=25000.00..25000.00 rows=1600001 width=4)
                                              ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1600001 width=4)
                                                    Filter: ((c_first_name)::text ~~ '%ro%'::text)
                                  ->  XN Hash  (cost=192001155416.61..192001155416.61 rows=2737825 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=29000.00..192001155416.61 rows=2737825 width=8)
                                              Hash Cond: ("outer".ws_bill_customer_sk = "inner".c_customer_sk)
                                              ->  XN Seq Scan on web_sales  (cost=0.00..900015.50 rows=3512127 width=8)
                                                    Filter: (ws_item_sk < 10000)
                                              ->  XN Hash  (cost=25000.00..25000.00 rows=1600001 width=4)
                                                    ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1600001 width=4)
                                                          Filter: ((c_first_name)::text ~~ '%ro%'::text)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
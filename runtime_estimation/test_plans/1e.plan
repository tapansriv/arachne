XN CTE Scan on friend_shortest  (cost=18343961244.54..18343961244.69 rows=63 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..18343961244.54 rows=63 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=12292600445.17..18343936244.53 rows=62 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=12292600445.17..18343936243.91 rows=62 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=12292600445.17..12292600823.28 rows=37811 width=8)
                            ->  XN Hash Join DS_DIST_NONE  (cost=6146014503.82..12291995431.36 rows=37811 width=8)
                                  Hash Cond: ("outer".cs_item_sk = "inner".cs_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=25128.00..6145989161.32 rows=85798 width=8)
                                        Hash Cond: ("outer".cs_bill_customer_sk = "inner".c_customer_sk)
                                        ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=3456955 width=8)
                                              Filter: (cs_item_sk < 5000)
                                        ->  XN Hash  (cost=25000.00..25000.00 rows=51201 width=4)
                                              ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=51201 width=4)
                                                    Filter: ((c_birth_country)::text ~~ '%STAN'::text)
                                  ->  XN Hash  (cost=6145989161.32..6145989161.32 rows=85798 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=25128.00..6145989161.32 rows=85798 width=8)
                                              Hash Cond: ("outer".cs_bill_customer_sk = "inner".c_customer_sk)
                                              ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=3456955 width=8)
                                                    Filter: (cs_item_sk < 5000)
                                              ->  XN Hash  (cost=25000.00..25000.00 rows=51201 width=4)
                                                    ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=51201 width=4)
                                                          Filter: ((c_birth_country)::text ~~ '%STAN'::text)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
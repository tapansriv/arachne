XN CTE Scan on friend_shortest  (cost=67694407173.19..67694407173.75 rows=224 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..67694407173.19 rows=224 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=45824687256.08..67694382173.18 rows=223 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=45824687256.08..67694382170.95 rows=223 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=45824687256.08..45824688622.58 rows=136650 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=23268814352.93..45822500719.43 rows=136650 width=8)
                                  Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                  ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                  ->  XN Hash  (cost=23268814000.55..23268814000.55 rows=140953 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=4847591.02..23268814000.55 rows=140953 width=8)
                                              Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                              ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                              ->  XN Hash  (cost=4847227.54..4847227.54 rows=145392 width=8)
                                                    ->  XN Hash Join DS_DIST_NONE  (cost=1800384.01..4847227.54 rows=145392 width=8)
                                                          Hash Cond: ("outer".cs_item_sk = "inner".cs_item_sk)
                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=168244 width=8)
                                                                Filter: (cs_item_sk < 250)
                                                          ->  XN Hash  (cost=1799963.40..1799963.40 rows=168244 width=8)
                                                                ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=168244 width=8)
                                                                      Filter: (cs_item_sk < 250)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
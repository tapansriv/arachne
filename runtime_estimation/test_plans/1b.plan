XN CTE Scan on friend_shortest  (cost=4080815493.92..4080815493.95 rows=15 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..4080815493.92 rows=15 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=2763967566.80..4080790493.91 rows=14 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=2763967566.80..4080790493.77 rows=14 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=2763967566.80..2763967649.08 rows=8228 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=1405590828.29..2763835910.57 rows=8228 width=8)
                                  Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                  ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                  ->  XN Hash  (cost=1405590807.07..1405590807.07 rows=8487 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=4625722.20..1405590807.07 rows=8487 width=8)
                                              Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                              ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                              ->  XN Hash  (cost=4625700.32..4625700.32 rows=8754 width=8)
                                                    ->  XN Hash Join DS_DIST_NONE  (cost=2160059.29..4625700.32 rows=8754 width=8)
                                                          Hash Cond: ("outer".cs_item_sk = "inner".cs_item_sk)
                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..2159956.08 rows=41283 width=8)
                                                                Filter: ((cs_item_sk < 2000) AND (cs_sales_price < 100::double precision))
                                                          ->  XN Hash  (cost=2159956.08..2159956.08 rows=41283 width=8)
                                                                ->  XN Seq Scan on catalog_sales  (cost=0.00..2159956.08 rows=41283 width=8)
                                                                      Filter: ((cs_item_sk < 2000) AND (cs_sales_price < 100::double precision))
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
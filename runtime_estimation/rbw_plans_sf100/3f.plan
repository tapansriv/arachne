XN CTE Scan on friend_shortest  (cost=1858320023728.62..1858320023769.53 rows=16364 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..1858320023728.62 rows=16364 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=246447465361.69..1858319998728.61 rows=16363 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=246447465361.69..1858319998564.98 rows=16363 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=246447465361.69..246447566077.49 rows=10071580 width=8)
                            ->  XN Hash Join DS_DIST_NONE  (cost=123138175178.80..246286310010.11 rows=10071580 width=8)
                                  Hash Cond: ("outer".ss_item_sk = "inner".ss_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=27565.38..123138144112.69 rows=1400292 width=8)
                                        Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                        ->  XN Seq Scan on store_sales  (cost=0.00..36623.00 rows=2929840 width=8)
                                              Filter: (ss_item_sk < 2000)
                                        ->  XN Hash  (cost=25000.00..25000.00 rows=1026150 width=4)
                                              ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1026150 width=4)
                                                    Filter: ((c_salutation)::text ~~ 'M%s%'::text)
                                  ->  XN Hash  (cost=123138144112.69..123138144112.69 rows=1400292 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=27565.38..123138144112.69 rows=1400292 width=8)
                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                              ->  XN Seq Scan on store_sales  (cost=0.00..36623.00 rows=2929840 width=8)
                                                    Filter: (ss_item_sk < 2000)
                                              ->  XN Hash  (cost=25000.00..25000.00 rows=1026150 width=4)
                                                    ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1026150 width=4)
                                                          Filter: ((c_salutation)::text ~~ 'M%s%'::text)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
XN Aggregate  (cost=4649429708.92..4649429708.92 rows=1 width=0)
  ->  XN Hash Join DS_BCAST_INNER  (cost=4648664708.79..4649429708.92 rows=1 width=0)
        Hash Cond: ("outer".friendid = "inner".friendid)
        Join Filter: ("outer".personid < "inner".personid)
        ->  XN Subquery Scan p1  (cost=1549044902.85..1549569902.93 rows=3 width=8)
              ->  XN Unique  (cost=1549044902.85..1549569902.90 rows=3 width=8)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1549044902.85..1549569902.88 rows=3 width=8)
                          Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                          ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                          ->  XN Hash  (cost=1549044902.84..1549044902.84 rows=3 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1544243332.69..1549044902.84 rows=3 width=8)
                                      Hash Cond: ("outer".sr_customer_sk = "inner".c_customer_sk)
                                      ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                            Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1544243332.60..1544243332.60 rows=37 width=4)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=39042.17..1544243332.60 rows=37 width=4)
                                                  Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=24029.67..944228227.20 rows=7402 width=8)
                                                        Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                        ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                              Filter: (c_current_cdemo_sk IS NOT NULL)
                                                        ->  XN Hash  (cost=24010.00..24010.00 rows=7868 width=4)
                                                              ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=7868 width=4)
                                                                    Filter: ((cd_education_status)::text ~~ '%Degree'::text)
                                                  ->  XN Hash  (cost=15000.00..15000.00 rows=5000 width=4)
                                                        ->  XN Seq Scan on customer_address ca  (cost=0.00..15000.00 rows=5000 width=4)
                                                              Filter: (upper((ca_street_type)::text) ~~ 'ST%'::text)
        ->  XN Hash  (cost=3099619805.94..3099619805.94 rows=1 width=16)
              ->  XN Hash Join DS_BCAST_INNER  (cost=3098614805.79..3099619805.94 rows=1 width=16)
                    Hash Cond: ("outer".friendid = "inner".friendid)
                    Join Filter: ("outer".personid < "inner".personid)
                    ->  XN Subquery Scan p2  (cost=1549044902.85..1549569902.93 rows=3 width=8)
                          ->  XN Unique  (cost=1549044902.85..1549569902.90 rows=3 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1549044902.85..1549569902.88 rows=3 width=8)
                                      Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                      ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                                      ->  XN Hash  (cost=1549044902.84..1549044902.84 rows=3 width=8)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1544243332.69..1549044902.84 rows=3 width=8)
                                                  Hash Cond: ("outer".sr_customer_sk = "inner".c_customer_sk)
                                                  ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                                        Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=1544243332.60..1544243332.60 rows=37 width=4)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=39042.17..1544243332.60 rows=37 width=4)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=24029.67..944228227.20 rows=7402 width=8)
                                                                    Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                                    ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=24010.00..24010.00 rows=7868 width=4)
                                                                          ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=7868 width=4)
                                                                                Filter: ((cd_education_status)::text ~~ '%Degree'::text)
                                                              ->  XN Hash  (cost=15000.00..15000.00 rows=5000 width=4)
                                                                    ->  XN Seq Scan on customer_address ca  (cost=0.00..15000.00 rows=5000 width=4)
                                                                          Filter: (upper((ca_street_type)::text) ~~ 'ST%'::text)
                    ->  XN Hash  (cost=1549569902.93..1549569902.93 rows=3 width=8)
                          ->  XN Subquery Scan p3  (cost=1549044902.85..1549569902.93 rows=3 width=8)
                                ->  XN Unique  (cost=1549044902.85..1549569902.90 rows=3 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1549044902.85..1549569902.88 rows=3 width=8)
                                            Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                            ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                                            ->  XN Hash  (cost=1549044902.84..1549044902.84 rows=3 width=8)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1544243332.69..1549044902.84 rows=3 width=8)
                                                        Hash Cond: ("outer".sr_customer_sk = "inner".c_customer_sk)
                                                        ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                                              Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=1544243332.60..1544243332.60 rows=37 width=4)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=39042.17..1544243332.60 rows=37 width=4)
                                                                    Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=24029.67..944228227.20 rows=7402 width=8)
                                                                          Hash Cond: ("outer".c_current_cdemo_sk = "inner".cd_demo_sk)
                                                                          ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                                                Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                          ->  XN Hash  (cost=24010.00..24010.00 rows=7868 width=4)
                                                                                ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=7868 width=4)
                                                                                      Filter: ((cd_education_status)::text ~~ '%Degree'::text)
                                                                    ->  XN Hash  (cost=15000.00..15000.00 rows=5000 width=4)
                                                                          ->  XN Seq Scan on customer_address ca  (cost=0.00..15000.00 rows=5000 width=4)
                                                                                Filter: (upper((ca_street_type)::text) ~~ 'ST%'::text)
XN CTE Scan on friend_shortest  (cost=32618888453.72..32618888453.89 rows=66 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..32618888453.72 rows=66 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=26308900307.51..32618863453.71 rows=65 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=26308900307.51..32618863453.06 rows=65 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=26308900307.51..26308900701.78 rows=39427 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=6145115268.26..26308269436.08 rows=39427 width=8)
                                  Hash Cond: ("outer".ws_item_sk = "inner".ws_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=25128.00..6145089921.22 rows=87613 width=8)
                                        Hash Cond: ("outer".ws_bill_customer_sk = "inner".c_customer_sk)
                                        ->  XN Seq Scan on web_sales  (cost=0.00..900015.50 rows=3512127 width=8)
                                              Filter: (ws_item_sk < 10000)
                                        ->  XN Hash  (cost=25000.00..25000.00 rows=51201 width=4)
                                              ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=51201 width=4)
                                                    Filter: ((c_birth_country)::text ~~ '%STAN'::text)
                                  ->  XN Hash  (cost=6145089921.22..6145089921.22 rows=87613 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=25128.00..6145089921.22 rows=87613 width=8)
                                              Hash Cond: ("outer".ws_bill_customer_sk = "inner".c_customer_sk)
                                              ->  XN Seq Scan on web_sales  (cost=0.00..900015.50 rows=3512127 width=8)
                                                    Filter: (ws_item_sk < 10000)
                                              ->  XN Hash  (cost=25000.00..25000.00 rows=51201 width=4)
                                                    ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=51201 width=4)
                                                          Filter: ((c_birth_country)::text ~~ '%STAN'::text)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
XN Aggregate  (cost=70437566169.64..70437566169.64 rows=1 width=0)
  ->  XN Hash Join DS_BCAST_INNER  (cost=69875276886.56..70437566158.77 rows=4348 width=0)
        Hash Cond: ("outer".friendid = "inner".friendid)
        Join Filter: ("inner".personid < "outer".personid)
        ->  XN Hash Join DS_BCAST_INNER  (cost=46519929580.39..46896456054.95 rows=2247 width=16)
              Hash Cond: ("outer".friendid = "inner".friendid)
              Join Filter: ("outer".personid < "inner".personid)
              ->  XN Subquery Scan p2  (cost=23164582274.23..23355347303.26 rows=1161 width=8)
                    ->  XN Unique  (cost=23164582274.23..23355347291.65 rows=1161 width=8)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=23164582274.23..23355347285.85 rows=1161 width=8)
                                Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                                ->  XN Hash  (cost=23164582271.25..23164582271.25 rows=1192 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=21944353242.58..23164582271.25 rows=1192 width=8)
                                            Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                            ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=400540 width=4)
                                                  Filter: ((cd_marital_status)::text ~~ 'S'::text)
                                            ->  XN Hash  (cost=21944353227.33..21944353227.33 rows=6101 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=372895.67..21944353227.33 rows=6101 width=12)
                                                        Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=12630.84..6280377748.02 rows=99367 width=8)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=12500.00..12500.00 rows=52336 width=4)
                                                                    ->  XN Seq Scan on customer_address ca  (cost=0.00..12500.00 rows=52336 width=4)
                                                                          Filter: ((ca_zip)::text ~~ '9%'::text)
                                                        ->  XN Hash  (cost=359938.50..359938.50 rows=130530 width=4)
                                                              ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                                                    Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
              ->  XN Hash  (cost=23355347303.26..23355347303.26 rows=1161 width=8)
                    ->  XN Subquery Scan p3  (cost=23164582274.23..23355347303.26 rows=1161 width=8)
                          ->  XN Unique  (cost=23164582274.23..23355347291.65 rows=1161 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=23164582274.23..23355347285.85 rows=1161 width=8)
                                      Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                      ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                                      ->  XN Hash  (cost=23164582271.25..23164582271.25 rows=1192 width=8)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=21944353242.58..23164582271.25 rows=1192 width=8)
                                                  Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                  ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=400540 width=4)
                                                        Filter: ((cd_marital_status)::text ~~ 'S'::text)
                                                  ->  XN Hash  (cost=21944353227.33..21944353227.33 rows=6101 width=12)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=372895.67..21944353227.33 rows=6101 width=12)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=12630.84..6280377748.02 rows=99367 width=8)
                                                                    Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                    ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=12500.00..12500.00 rows=52336 width=4)
                                                                          ->  XN Seq Scan on customer_address ca  (cost=0.00..12500.00 rows=52336 width=4)
                                                                                Filter: ((ca_zip)::text ~~ '9%'::text)
                                                              ->  XN Hash  (cost=359938.50..359938.50 rows=130530 width=4)
                                                                    ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                                                          Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
        ->  XN Hash  (cost=23355347303.26..23355347303.26 rows=1161 width=8)
              ->  XN Subquery Scan p1  (cost=23164582274.23..23355347303.26 rows=1161 width=8)
                    ->  XN Unique  (cost=23164582274.23..23355347291.65 rows=1161 width=8)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=23164582274.23..23355347285.85 rows=1161 width=8)
                                Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                                ->  XN Hash  (cost=23164582271.25..23164582271.25 rows=1192 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=21944353242.58..23164582271.25 rows=1192 width=8)
                                            Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                            ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=400540 width=4)
                                                  Filter: ((cd_marital_status)::text ~~ 'S'::text)
                                            ->  XN Hash  (cost=21944353227.33..21944353227.33 rows=6101 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=372895.67..21944353227.33 rows=6101 width=12)
                                                        Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=12630.84..6280377748.02 rows=99367 width=8)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=12500.00..12500.00 rows=52336 width=4)
                                                                    ->  XN Seq Scan on customer_address ca  (cost=0.00..12500.00 rows=52336 width=4)
                                                                          Filter: ((ca_zip)::text ~~ '9%'::text)
                                                        ->  XN Hash  (cost=359938.50..359938.50 rows=130530 width=4)
                                                              ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                                                    Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
XN CTE Scan on friend_shortest  (cost=9919526927.51..9919526927.59 rows=34 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..9919526927.51 rows=34 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=6716107735.20..9919501927.50 rows=33 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=6716107735.20..9919501927.17 rows=33 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=6716107735.20..6716107935.36 rows=20016 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=3411942259.02..6715787459.18 rows=20016 width=8)
                                  Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                  ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                  ->  XN Hash  (cost=3411942207.41..3411942207.41 rows=20646 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=4077000.95..3411942207.41 rows=20646 width=8)
                                              Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                              ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                              ->  XN Hash  (cost=4076947.71..4076947.71 rows=21296 width=8)
                                                    ->  XN Hash Join DS_DIST_NONE  (cost=1800124.38..4076947.71 rows=21296 width=8)
                                                          Hash Cond: ("outer".cs_item_sk = "inner".cs_item_sk)
                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=64390 width=8)
                                                                Filter: (cs_item_sk < 100)
                                                          ->  XN Hash  (cost=1799963.40..1799963.40 rows=64390 width=8)
                                                                ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=64390 width=8)
                                                                      Filter: (cs_item_sk < 100)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
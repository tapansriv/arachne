XN CTE Scan on friend_shortest  (cost=255756785083.56..255756785085.84 rows=911 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..255756785083.56 rows=911 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=166208161507.15..255756760083.55 rows=910 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=166208161507.15..255756760074.45 rows=910 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=166208161507.15..166208167102.48 rows=559533 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=56693245582.08..166199208419.62 rows=559533 width=8)
                                  Hash Cond: ("outer".ss_item_sk = "inner".ss_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=78228.21..56693166528.73 rows=330052 width=8)
                                        Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                        ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                        ->  XN Hash  (cost=77342.43..77342.43 rows=354314 width=8)
                                              ->  XN Seq Scan on store_sales  (cost=0.00..77342.43 rows=354314 width=8)
                                                    Filter: ((ss_item_sk < 3500) AND (ss_sales_price < 200::double precision))
                                  ->  XN Hash  (cost=56693166528.73..56693166528.73 rows=330052 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=78228.21..56693166528.73 rows=330052 width=8)
                                              Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                              ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                              ->  XN Hash  (cost=77342.43..77342.43 rows=354314 width=8)
                                                    ->  XN Seq Scan on store_sales  (cost=0.00..77342.43 rows=354314 width=8)
                                                          Filter: ((ss_item_sk < 3500) AND (ss_sales_price < 200::double precision))
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
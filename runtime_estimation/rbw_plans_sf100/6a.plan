XN CTE Scan on friend_shortest  (cost=691889672465.31..691889672474.58 rows=3709 width=12)
  InitPlan
    ->  XN Recursive Union  (cost=0.00..691889672465.31 rows=3709 width=20)
          ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..25000.01 rows=1 width=4)
                ->  XN Seq Scan on customer  (cost=0.00..25000.00 rows=1 width=4)
                      Filter: (c_customer_sk = 1)
          ->  XN Subquery Scan "*SELECT* 2"  (cost=326695990619.17..691889647465.30 rows=3708 width=20)
                ->  XN Nested Loop DS_BCAST_INNER  (cost=326695990619.17..691889647428.22 rows=3708 width=20)
                      Join Filter: (("inner".c_customer_sk = "outer".friend) OR ("inner".c_customer_sk = "outer".friend))
                      ->  XN CTE Scan on friend_shortest f  (cost=0.00..25.00 rows=1667 width=12)
                            Filter: (hopcount < 3)
                      ->  XN Materialize  (cost=326695990619.17..326696013437.83 rows=2281866 width=8)
                            ->  XN Hash Join DS_BCAST_INNER  (cost=110007296695.91..326659478481.30 rows=2281866 width=8)
                                  Hash Cond: ("outer".cs_item_sk = "inner".cs_item_sk)
                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1801682.19..110005493347.41 rows=666523 width=8)
                                        Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                        ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                        ->  XN Hash  (cost=1799963.40..1799963.40 rows=687514 width=8)
                                              ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=687514 width=8)
                                                    Filter: (cs_item_sk < 1000)
                                  ->  XN Hash  (cost=110005493347.41..110005493347.41 rows=666523 width=8)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1801682.19..110005493347.41 rows=666523 width=8)
                                              Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                              ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=4)
                                              ->  XN Hash  (cost=1799963.40..1799963.40 rows=687514 width=8)
                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..1799963.40 rows=687514 width=8)
                                                          Filter: (cs_item_sk < 1000)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
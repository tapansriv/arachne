XN Aggregate  (cost=145703801190.78..145703801190.78 rows=1 width=0)
  ->  XN Hash Join DS_BCAST_INNER  (cost=143365450944.22..145703800408.76 rows=312807 width=0)
        Hash Cond: ("outer".friendid = "inner".friendid)
        Join Filter: ("inner".personid < "outer".personid)
        ->  XN Hash Join DS_BCAST_INNER  (cost=95312685585.21..96878195499.55 rows=38866 width=16)
              Hash Cond: ("outer".friendid = "inner".friendid)
              Join Filter: ("outer".personid < "inner".personid)
              ->  XN Subquery Scan p2  (cost=47259920226.20..48052765346.94 rows=4829 width=8)
                    ->  XN Unique  (cost=47259920226.20..48052765298.65 rows=4829 width=8)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=47259920226.20..48052765274.50 rows=4829 width=8)
                                Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                                ->  XN Hash  (cost=47259920213.82..47259920213.82 rows=4955 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=44101903677.33..47259920213.82 rows=4955 width=8)
                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                            ->  XN Seq Scan on customer_address ca  (cost=0.00..12500.00 rows=318955 width=4)
                                                  Filter: ((ca_location_type)::text ~~ 'condo'::text)
                                            ->  XN Hash  (cost=44101903637.85..44101903637.85 rows=15790 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=15664276052.80..44101903637.85 rows=15790 width=12)
                                                        Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                        ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=273372 width=4)
                                                              Filter: ((cd_education_status)::text ~~ 'College'::text)
                                                        ->  XN Hash  (cost=15664275756.58..15664275756.58 rows=118490 width=16)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=360264.83..15664275756.58 rows=118490 width=16)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                                    ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=359938.50..359938.50 rows=130530 width=4)
                                                                          ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                                                                Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
              ->  XN Hash  (cost=48052765346.94..48052765346.94 rows=4829 width=8)
                    ->  XN Subquery Scan p3  (cost=47259920226.20..48052765346.94 rows=4829 width=8)
                          ->  XN Unique  (cost=47259920226.20..48052765298.65 rows=4829 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=47259920226.20..48052765274.50 rows=4829 width=8)
                                      Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                      ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                                      ->  XN Hash  (cost=47259920213.82..47259920213.82 rows=4955 width=8)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=44101903677.33..47259920213.82 rows=4955 width=8)
                                                  Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                  ->  XN Seq Scan on customer_address ca  (cost=0.00..12500.00 rows=318955 width=4)
                                                        Filter: ((ca_location_type)::text ~~ 'condo'::text)
                                                  ->  XN Hash  (cost=44101903637.85..44101903637.85 rows=15790 width=12)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=15664276052.80..44101903637.85 rows=15790 width=12)
                                                              Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                              ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=273372 width=4)
                                                                    Filter: ((cd_education_status)::text ~~ 'College'::text)
                                                              ->  XN Hash  (cost=15664275756.58..15664275756.58 rows=118490 width=16)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=360264.83..15664275756.58 rows=118490 width=16)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                                          ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                                                Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                          ->  XN Hash  (cost=359938.50..359938.50 rows=130530 width=4)
                                                                                ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                                                                      Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
        ->  XN Hash  (cost=48052765346.94..48052765346.94 rows=4829 width=8)
              ->  XN Subquery Scan p1  (cost=47259920226.20..48052765346.94 rows=4829 width=8)
                    ->  XN Unique  (cost=47259920226.20..48052765298.65 rows=4829 width=8)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=47259920226.20..48052765274.50 rows=4829 width=8)
                                Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                ->  XN Seq Scan on customer c2  (cost=0.00..20000.00 rows=2000000 width=4)
                                ->  XN Hash  (cost=47259920213.82..47259920213.82 rows=4955 width=8)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=44101903677.33..47259920213.82 rows=4955 width=8)
                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                            ->  XN Seq Scan on customer_address ca  (cost=0.00..12500.00 rows=318955 width=4)
                                                  Filter: ((ca_location_type)::text ~~ 'condo'::text)
                                            ->  XN Hash  (cost=44101903637.85..44101903637.85 rows=15790 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=15664276052.80..44101903637.85 rows=15790 width=12)
                                                        Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                        ->  XN Seq Scan on customer_demographics cd  (cost=0.00..24010.00 rows=273372 width=4)
                                                              Filter: ((cd_education_status)::text ~~ 'College'::text)
                                                        ->  XN Hash  (cost=15664275756.58..15664275756.58 rows=118490 width=16)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=360264.83..15664275756.58 rows=118490 width=16)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                                                                    ->  XN Seq Scan on customer c1  (cost=0.00..20000.00 rows=1929881 width=12)
                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=359938.50..359938.50 rows=130530 width=4)
                                                                          ->  XN Seq Scan on store_returns sr  (cost=0.00..359938.50 rows=130530 width=4)
                                                                                Filter: ((sr_item_sk < 1000) AND (sr_customer_sk IS NOT NULL))
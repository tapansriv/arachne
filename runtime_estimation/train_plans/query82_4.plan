XN Limit  (cost=1013142229026.01..1013142229026.26 rows=100 width=76)
  ->  XN Merge  (cost=1013142229026.01..1013142229058.43 rows=12969 width=76)
        Merge Key: ss.ss_customer_sk, ss.ss_qty, ss.ss_wc, ss.ss_sp, (COALESCE(cs.cs_qty, 0::bigint) + COALESCE(ws.ws_qty, 0::bigint)), (COALESCE(cs.cs_wc, 0::double precision) + COALESCE(ws.ws_wc, 0::double precision)), (COALESCE(cs.cs_sp, 0::double precision) + COALESCE(ws.ws_sp, 0::double precision)), round(((ss.ss_qty / (COALESCE(cs.cs_qty, 0::bigint) + COALESCE(ws.ws_qty, 0::bigint))))::numeric, 2)
        ->  XN Network  (cost=1013142229026.01..1013142229058.43 rows=12969 width=76)
              Send to leader
              ->  XN Sort  (cost=1013142229026.01..1013142229058.43 rows=12969 width=76)
                    Sort Key: ss.ss_customer_sk, ss.ss_qty, ss.ss_wc, ss.ss_sp, (COALESCE(cs.cs_qty, 0::bigint) + COALESCE(ws.ws_qty, 0::bigint)), (COALESCE(cs.cs_wc, 0::double precision) + COALESCE(ws.ws_wc, 0::double precision)), (COALESCE(cs.cs_sp, 0::double precision) + COALESCE(ws.ws_sp, 0::double precision)), round(((ss.ss_qty / (COALESCE(cs.cs_qty, 0::bigint) + COALESCE(ws.ws_qty, 0::bigint))))::numeric, 2)
                    ->  XN Hash Left Join DS_DIST_NONE  (cost=11648031418.11..13142228140.04 rows=12969 width=76)
                          Hash Cond: (("outer".ss_customer_sk = "inner".cs_customer_sk) AND ("outer".ss_item_sk = "inner".cs_item_sk) AND ("outer".ss_sold_year = "inner".cs_sold_year))
                          Filter: ((COALESCE("inner".cs_qty, 0::bigint) > 0) OR (COALESCE("outer".ws_qty, 0::bigint) > 0))
                          ->  XN Hash Left Join DS_BCAST_INNER  (cost=11592730699.32..13086663307.40 rows=12969 width=60)
                                Hash Cond: (("outer".ss_customer_sk = "inner".ws_customer_sk) AND ("outer".ss_item_sk = "inner".ws_item_sk) AND ("outer".ss_sold_year = "inner".ws_sold_year))
                                ->  XN Subquery Scan ss  (cost=55399980.22..55400207.18 rows=12969 width=36)
                                      ->  XN HashAggregate  (cost=55399980.22..55400077.49 rows=12969 width=32)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=5226.69..55399785.69 rows=12969 width=32)
                                                  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                  ->  XN Hash Left Join DS_DIST_NONE  (cost=4312.71..162736.97 rows=2880404 width=32)
                                                        Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_item_sk = "inner".sr_item_sk))
                                                        Filter: ("inner".sr_ticket_number IS NULL)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2880404 width=36)
                                                        ->  XN Hash  (cost=2875.14..2875.14 rows=287514 width=8)
                                                              ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=287514 width=8)
                                                  ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                        ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                              Filter: (d_year = 1999)
                                ->  XN Hash  (cost=11537330693.64..11537330693.64 rows=3395 width=36)
                                      ->  XN Subquery Scan ws  (cost=11537330634.23..11537330693.64 rows=3395 width=36)
                                            ->  XN HashAggregate  (cost=11537330634.23..11537330659.69 rows=3395 width=32)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1990.42..11537330583.30 rows=3395 width=32)
                                                        Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Hash Left Join DS_BCAST_INNER  (cost=1076.44..11482120643.08 rows=719384 width=32)
                                                              Hash Cond: (("outer".ws_order_number = "inner".wr_order_number) AND ("outer".ws_item_sk = "inner".wr_item_sk))
                                                              Filter: ("inner".wr_order_number IS NULL)
                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=36)
                                                              ->  XN Hash  (cost=717.63..717.63 rows=71763 width=8)
                                                                    ->  XN Seq Scan on web_returns  (cost=0.00..717.63 rows=71763 width=8)
                                                        ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                              ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                    Filter: (d_year = 1999)
                          ->  XN Hash  (cost=55300668.01..55300668.01 rows=6771 width=36)
                                ->  XN Subquery Scan cs  (cost=55300549.52..55300668.01 rows=6771 width=36)
                                      ->  XN HashAggregate  (cost=55300549.52..55300600.30 rows=6771 width=32)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=3074.98..55300447.95 rows=6771 width=32)
                                                  Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                  ->  XN Hash Left Join DS_DIST_NONE  (cost=2161.01..81446.92 rows=1441548 width=32)
                                                        Hash Cond: (("outer".cs_order_number = "inner".cr_order_number) AND ("outer".cs_item_sk = "inner".cr_item_sk))
                                                        Filter: ("inner".cr_order_number IS NULL)
                                                        ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1441548 width=36)
                                                        ->  XN Hash  (cost=1440.67..1440.67 rows=144067 width=8)
                                                              ->  XN Seq Scan on catalog_returns  (cost=0.00..1440.67 rows=144067 width=8)
                                                  ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                        ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                              Filter: (d_year = 1999)
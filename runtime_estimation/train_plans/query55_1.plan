XN Limit  (cost=3000104479062.71..3000104479076.21 rows=100 width=40)
  ->  XN Merge  (cost=3000104479062.71..3000104479588.76 rows=3897 width=40)
        Merge Key: item_sk, d_date
        ->  XN Network  (cost=3000104479062.71..3000104479588.76 rows=3897 width=40)
              Send to leader
              ->  XN Subquery Scan y  (cost=3000104479062.71..3000104479588.76 rows=3897 width=40)
                    Filter: (store_cumulative < web_cumulative)
                    ->  XN Window  (cost=3000104479062.71..3000104479442.63 rows=11690 width=32)
                          Partition: CASE WHEN (web.item_sk IS NOT NULL) THEN web.item_sk ELSE store.item_sk END
                          Order: CASE WHEN (web.d_date IS NOT NULL) THEN web.d_date ELSE store.d_date END
                          ->  XN Sort  (cost=3000104479062.71..3000104479091.93 rows=11690 width=32)
                                Sort Key: CASE WHEN (web.item_sk IS NOT NULL) THEN web.item_sk ELSE store.item_sk END, CASE WHEN (web.d_date IS NOT NULL) THEN web.d_date ELSE store.d_date END
                                ->  XN Network  (cost=2000104402892.22..2000104478272.87 rows=11690 width=32)
                                      Distribute
                                      ->  XN Hash Full Join DS_DIST_NONE  (cost=2000104402892.22..2000104478272.87 rows=11690 width=32)
                                            Hash Cond: (("outer".d_date = "inner".d_date) AND ("outer".item_sk = "inner".item_sk))
                                            ->  XN Subquery Scan store  (cost=1000052225270.32..1000052225533.35 rows=11690 width=16)
                                                  ->  XN Window  (cost=1000052225270.32..1000052225416.45 rows=11690 width=16)
                                                        Partition: store_sales.ss_item_sk
                                                        Order: date_dim.d_date
                                                        ->  XN Sort  (cost=1000052225270.32..1000052225299.55 rows=11690 width=16)
                                                              Sort Key: store_sales.ss_item_sk, date_dim.d_date
                                                              ->  XN HashAggregate  (cost=52224451.27..52224480.49 rows=11690 width=16)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.55..52224363.59 rows=11690 width=16)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=16)
                                                                                Filter: (ss_sold_date_sk IS NOT NULL)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=326 width=8)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=326 width=8)
                                                                                      Filter: ((d_month_seq <= 1194) AND (d_month_seq >= 1183))
                                            ->  XN Hash  (cost=1000052177605.86..1000052177605.86 rows=3208 width=16)
                                                  ->  XN Subquery Scan web  (cost=1000052177533.68..1000052177605.86 rows=3208 width=16)
                                                        ->  XN Window  (cost=1000052177533.68..1000052177573.78 rows=3208 width=16)
                                                              Partition: web_sales.ws_item_sk
                                                              Order: date_dim.d_date
                                                              ->  XN Sort  (cost=1000052177533.68..1000052177541.70 rows=3208 width=16)
                                                                    Sort Key: web_sales.ws_item_sk, date_dim.d_date
                                                                    ->  XN Network  (cost=52177338.83..52177346.85 rows=3208 width=16)
                                                                          Distribute
                                                                          ->  XN HashAggregate  (cost=52177338.83..52177346.85 rows=3208 width=16)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.55..52177314.77 rows=3208 width=16)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=326 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=326 width=8)
                                                                                                  Filter: ((d_month_seq <= 1194) AND (d_month_seq >= 1183))
XN Seq Scan on item  (cost=0.00..225.00 rows=1727 width=4)
  Filter: ((i_category)::text = 'Books'::text)

XN Limit  (cost=1000097436506.78..1000097436506.79 rows=3 width=12)
  ->  XN Merge  (cost=1000097436506.78..1000097436506.79 rows=3 width=12)
        Merge Key: sum(total_sales)
        ->  XN Network  (cost=1000097436506.78..1000097436506.79 rows=3 width=12)
              Send to leader
              ->  XN Sort  (cost=1000097436506.78..1000097436506.79 rows=3 width=12)
                    Sort Key: sum(total_sales)
                    ->  XN HashAggregate  (cost=97436506.75..97436506.76 rows=3 width=12)
                          ->  XN Subquery Scan tmp1  (cost=32503742.45..97436506.74 rows=3 width=12)
                                ->  XN Append  (cost=32503742.45..97436506.71 rows=3 width=12)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=32503742.45..32503742.47 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=32503742.45..32503742.46 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3423733.46..32503742.45 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=21.66..21.66 rows=717 width=4)
                                                              ->  XN Seq Scan on volt_tt_618d8c9401867  (cost=0.00..17.33 rows=1733 width=4)
                                                        ->  XN Hash  (cost=3423711.80..3423711.80 rows=2 width=12)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=3423306.78..3423711.80 rows=2 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=8)
                                                                    ->  XN Hash  (cost=3423306.77..3423306.77 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3423306.77 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..182210.31 rows=52 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2622460 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=27 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=27 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 2))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=32274421.25..32274421.26 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=32274421.25..32274421.25 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3394412.27..32274421.24 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=21.66..21.66 rows=717 width=4)
                                                              ->  XN Seq Scan on volt_tt_618d8c9401867  (cost=0.00..17.33 rows=1733 width=4)
                                                        ->  XN Hash  (cost=3394390.60..3394390.60 rows=1 width=12)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=3393985.58..3394390.60 rows=1 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=8)
                                                                    ->  XN Hash  (cost=3393985.58..3393985.58 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3393985.58 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..152889.39 rows=30 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1427889 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=27 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=27 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 2))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=32658342.97..32658342.98 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=32658342.97..32658342.97 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3578333.98..32658342.97 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=21.66..21.66 rows=717 width=4)
                                                              ->  XN Seq Scan on volt_tt_618d8c9401867  (cost=0.00..17.33 rows=1733 width=4)
                                                        ->  XN Hash  (cost=3578312.31..3578312.31 rows=2 width=12)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=3377907.29..3578312.31 rows=2 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=8)
                                                                    ->  XN Hash  (cost=3377907.29..3377907.29 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3377907.29 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..136811.29 rows=15 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=20)
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=27 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=27 width=4)
                                                                                            Filter: ((d_year = 2001) AND (d_moy = 2))
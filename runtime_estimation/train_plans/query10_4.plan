XN Limit  (cost=1001575203892.34..1001575203892.40 rows=22 width=49)
  ->  XN Merge  (cost=1001575203892.34..1001575203892.40 rows=22 width=49)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
        ->  XN Network  (cost=1001575203892.34..1001575203892.40 rows=22 width=49)
              Send to leader
              ->  XN Sort  (cost=1001575203892.34..1001575203892.40 rows=22 width=49)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                    ->  XN HashAggregate  (cost=1575203891.52..1575203891.85 rows=22 width=49)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1061923838.53..1575203890.75 rows=22 width=49)
                                Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                ->  XN HashAggregate  (cost=13984480.79..13984480.79 rows=4160 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13984470.39 rows=4160 width=4)
                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                            ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                        Filter: ((d_year = 2002) AND (d_moy <= 7) AND (d_moy >= 4))
                                ->  XN Hash  (cost=1047939356.39..1047939356.39 rows=542 width=53)
                                      ->  XN Hash Left Join DS_BCAST_INNER  (cost=141826298.81..1047939356.39 rows=542 width=53)
                                            Hash Cond: ("outer".c_customer_sk = "inner".rhs_col_1)
                                            Filter: (("outer".witness IS NOT NULL) OR ("inner".witness_1 IS NOT NULL))
                                            ->  XN Hash Right Join DS_DIST_BOTH  (cost=127888802.61..851281235.47 rows=542 width=57)
                                                  Outer Dist Key: derived_table1.rhs_col
                                                  Inner Dist Key: c.c_customer_sk
                                                  Hash Cond: ("outer".rhs_col = "inner".c_customer_sk)
                                                  ->  XN Subquery Scan derived_table1  (cost=1278.65..13953683.05 rows=2266 width=8)
                                                        ->  XN Unique  (cost=1278.65..13953660.39 rows=2266 width=4)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13953649.06 rows=2266 width=4)
                                                                    Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=8)
                                                                          Filter: (cs_sold_date_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                                                Filter: ((d_year = 2002) AND (d_moy <= 7) AND (d_moy >= 4))
                                                  ->  XN Hash  (cost=127887522.61..127887522.61 rows=542 width=53)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=35044299.19..127887522.61 rows=542 width=53)
                                                              Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                              ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=53)
                                                              ->  XN Hash  (cost=35044297.74..35044297.74 rows=580 width=8)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1125.73..35044297.74 rows=580 width=8)
                                                                          Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                          ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=96276 width=12)
                                                                                Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                          ->  XN Hash  (cost=1125.00..1125.00 rows=292 width=4)
                                                                                ->  XN Seq Scan on customer_address ca  (cost=0.00..1125.00 rows=292 width=4)
                                                                                      Filter: (((ca_county)::text = 'Grant County'::text) OR ((ca_county)::text = 'Dawson County'::text) OR ((ca_county)::text = 'Plaquemines Parish'::text) OR ((ca_county)::text = 'Rice County'::text) OR ((ca_county)::text = 'Treutlen County'::text))
                                            ->  XN Hash  (cost=13937493.34..13937493.34 rows=1142 width=8)
                                                  ->  XN Subquery Scan derived_table2  (cost=1278.65..13937493.34 rows=1142 width=8)
                                                        ->  XN Unique  (cost=1278.65..13937481.92 rows=1142 width=4)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13937476.21 rows=1142 width=4)
                                                                    Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                                    ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                                                Filter: ((d_year = 2002) AND (d_moy <= 7) AND (d_moy >= 4))
XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2001) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10324,10419,10444,10763,11195,11407,11433,11835,11988,12003,12015,12608,12804,13011,13148,13442,13512,13526,14084,14343,14463,14636,14734,15025,15100,15291,15633,15745,15766,15859,15911,16011,16401,17259,17519,17649,17654,17709,18253,18292,18527,18576,18948,19116,19153,19192,19229,19655,19763,19897,20143,20204,20266,20555,20685,21074,22227,22455,22497,22597,23024,23406,23655,23706,23891,24305,24690,24701,24844,24883,25521,25732,25911,25955,26002,26087,26305,26763,26914,27473,27609,27697,28124,28194,28585,29084,29226,29248,29374,29750,29989,30592,30976,31162,31990,32017,32354,32536,32561,32920,33472,33553,33707,33872,33923,34084,34217,34310,34586,34673,35062,35102,35115,35476,35920,36293,36447,36644,36723,36822,37185,37354,37696,37758,37777,37797,37988,38017,38153,38411,38526,38595,38802,39974,39987,40205,40270,40334,40476,40552,41161,41187,41278,41395,41719,41900,41940,42740,42801,43355,43503,43637,43651,43731,44149,44228,44407,44771,45188,45380,45471,46108,46297,46326,46768,47013,47087,47111,47160,47661,48517,48737,48872,48897,49236,49527,49727,49957,50060,50076,50538,50603,50631,51042,51074,51404,51617,51992,52205,52303,52434,53270,53623,54011,54013,54096,54679,54695,54724,54817,54875,54924,54965,55041,55109,55139,55421,55851,56032,56179,56321,57337,57706,57941,58668,58681,58890,59332,59416,59424,59438,59467,59644,59920,60065,60340,60883,61111,61549,61586,61615,61781,62135,62316,62534,62732,62815,63110,63229,63297,63962,64183,64476,65034,65629,65984,66233,66485,66651,66807,67011,67110,67760,67766,68175,68595,68888,69028,69058,69182,69585,69840,69872,70173,70176,70453,70793,70813,70832,71161,71291,71443,71863,72433,72436,72455,72674,72745,72780,73213,73263,73694,74143,74333,74548,74786,74998,75791,75828,75927,76201,76295,76318,76690,76847,76862,77363,77424,77517,77535,77751,78017,78153,78239,78419,78921,78931,78960,79426,79738,79758,80408,80508,80620,81119,81349,81390,81541,81948,82021,82366,82733,82870,83060,83193,83981,83986,83999,84037,84388,84814,85096,85528,85772,85902,85998,86013,86083,86646,86895,86899,87006,87020,87346,87488,87510,87991,88272,88504,88605,88667,88726,88795,88961,89261,89315,89676,90715,90749,90839,91074,91145,91750,91824,91910,92603,92738,92846,93024,93424,93591,94080,94299,94358,94603,94710,94756,95150,95629,95839,95863,95985,95994,96062,96078,96393,96409,96410,97335,97765,97888,97915,99185,99210,99225,99294,99362,99499,99558,99951}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
XN Limit  (cost=1001325366682.62..1001325366682.72 rows=41 width=49)
  ->  XN Merge  (cost=1001325366682.62..1001325366682.72 rows=41 width=49)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
        ->  XN Network  (cost=1001325366682.62..1001325366682.72 rows=41 width=49)
              Send to leader
              ->  XN Sort  (cost=1001325366682.62..1001325366682.72 rows=41 width=49)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count
                    ->  XN HashAggregate  (cost=1325366680.91..1325366681.52 rows=41 width=49)
                          ->  XN Hash IN Join DS_BCAST_INNER  (cost=107399971.82..1325366679.47 rows=41 width=49)
                                Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                ->  XN Hash Left Join DS_BCAST_INNER  (cost=93415491.04..812182185.63 rows=1012 width=53)
                                      Hash Cond: ("outer".c_customer_sk = "inner".rhs_col_1)
                                      Filter: (("outer".witness IS NOT NULL) OR ("inner".witness_1 IS NOT NULL))
                                      ->  XN Hash Left Join DS_BCAST_INNER  (cost=79477994.84..615523522.98 rows=1012 width=57)
                                            Hash Cond: ("outer".c_customer_sk = "inner".rhs_col)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=65524306.12..239007534.25 rows=1012 width=53)
                                                  Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                  ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=53)
                                                  ->  XN Hash  (cost=65524303.41..65524303.41 rows=1084 width=8)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1126.37..65524303.41 rows=1084 width=8)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=96276 width=12)
                                                                    Filter: (c_current_cdemo_sk IS NOT NULL)
                                                              ->  XN Hash  (cost=1125.00..1125.00 rows=546 width=4)
                                                                    ->  XN Seq Scan on customer_address ca  (cost=0.00..1125.00 rows=546 width=4)
                                                                          Filter: (((ca_county)::text = 'Washington County'::text) OR ((ca_county)::text = 'DeKalb County'::text) OR ((ca_county)::text = 'Middlesex County'::text) OR ((ca_county)::text = 'Saunders County'::text) OR ((ca_county)::text = 'Wells County'::text))
                                            ->  XN Hash  (cost=13953683.05..13953683.05 rows=2266 width=8)
                                                  ->  XN Subquery Scan derived_table1  (cost=1278.65..13953683.05 rows=2266 width=8)
                                                        ->  XN Unique  (cost=1278.65..13953660.39 rows=2266 width=4)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13953649.06 rows=2266 width=4)
                                                                    Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=8)
                                                                          Filter: (cs_sold_date_sk IS NOT NULL)
                                                                    ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                                                Filter: ((d_year = 2000) AND (d_moy <= 7) AND (d_moy >= 4))
                                      ->  XN Hash  (cost=13937493.34..13937493.34 rows=1142 width=8)
                                            ->  XN Subquery Scan derived_table2  (cost=1278.65..13937493.34 rows=1142 width=8)
                                                  ->  XN Unique  (cost=1278.65..13937481.92 rows=1142 width=4)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13937476.21 rows=1142 width=4)
                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                                          Filter: ((d_year = 2000) AND (d_moy <= 7) AND (d_moy >= 4))
                                ->  XN Hash  (cost=13984470.39..13984470.39 rows=4160 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1278.65..13984470.39 rows=4160 width=4)
                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                            ->  XN Hash  (cost=1278.36..1278.36 rows=116 width=4)
                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=116 width=4)
                                                        Filter: ((d_year = 2000) AND (d_moy <= 7) AND (d_moy >= 4))
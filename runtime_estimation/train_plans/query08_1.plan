XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1999) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10141,10541,10818,10824,10843,10939,10985,11074,11372,11400,11404,11426,11456,11581,11582,11620,11669,11711,11752,11865,11954,12348,12510,12766,13143,13300,13365,13559,13818,13852,13935,14057,14487,14532,14621,14835,14870,14934,15079,15159,15267,15277,15515,15650,15772,15791,15879,16272,16327,16572,16579,16609,16670,16853,17798,18549,18793,18797,18871,18884,19402,19516,19612,19616,19715,20102,20139,20592,20761,20842,21063,21220,21369,21633,22045,22054,22127,22163,22299,22334,22483,22585,22771,22855,22962,22968,23247,23553,23766,23819,23885,24085,24103,24300,24353,24624,24712,24959,25050,25077,25300,25312,25583,25601,26210,26661,26706,26961,27069,27150,27487,27683,27731,27852,28230,28259,28625,29776,30034,30176,30610,30667,30992,30996,31004,31100,31395,31749,31929,32290,32394,33087,33323,33453,33499,33695,33696,33992,34111,34534,35002,35071,35161,35781,35802,36110,36117,36120,36464,36634,36905,37030,37107,37281,37341,37570,37913,37914,37962,38025,38241,38574,38712,38837,39097,39224,39244,39431,39612,40106,40169,40333,40914,40954,41277,41333,41396,41414,41422,41602,42004,42037,42208,42308,42348,42807,43237,43390,43437,43557,43613,43653,43820,43876,43954,43994,44283,44333,44766,44847,44943,45091,45186,45287,45900,46259,46552,46855,46893,47930,48066,48162,48387,48779,49188,49210,49718,49875,50262,50823,50891,51005,51100,51778,52008,52391,52453,52568,52682,52830,53342,53616,54463,54996,55658,55924,56101,56192,56360,56402,56493,56574,57089,57530,57759,57792,58111,59425,60294,60502,60772,60775,60822,60872,60962,61463,61656,61782,61865,62179,62387,62408,62578,62765,63156,63233,63794,64163,64263,64792,65135,65190,65259,65395,65901,66155,66424,66745,66886,67598,67757,67796,68077,68328,68589,69468,69949,70470,70582,70667,71584,71760,71783,72041,72442,72460,72486,72631,72719,72789,73025,73118,73862,73872,74164,74330,74852,75062,75183,75532,76021,76088,76118,76338,76606,77701,77788,77789,78472,78525,78911,78986,80369,80602,80613,80783,81083,81094,81098,81482,81693,81764,81874,81979,82066,82101,82278,82489,82677,82885,83847,83940,84146,84226,84568,84605,84630,84915,84989,85052,85259,85371,85452,86483,86502,86632,86650,87417,87501,87709,88084,88111,88472,88520,88951,89076,89731,90050,90135,90414,90645,90937,91008,91277,91480,91603,91842,92050,92082,92549,92599,92714,93051,93219,93234,94121,94226,94883,95217,95233,95892,96147,96364,96881,97178,97420,97453,97473,98060,99461}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
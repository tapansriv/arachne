XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10136,10219,10469,10479,10645,11020,11590,11697,12270,12293,12484,12959,13179,13345,13544,14202,14301,14306,14377,14614,14693,14724,14899,14908,14939,15299,15385,15535,15550,15568,16276,16839,17262,17667,17998,18321,18774,18863,18940,19263,19483,19484,19490,19520,20306,20464,20640,20659,21148,21337,21350,21357,21813,21904,21907,22292,22570,23087,24200,24518,24928,24987,25559,25592,25925,26335,26444,27101,27245,27521,27618,27926,28147,28296,28457,28518,28573,28687,28872,29080,29293,29363,29365,29481,29626,29791,29806,31414,31883,32131,32244,32352,32361,32450,32526,32573,32813,32962,33192,33615,33801,33854,33901,33906,33985,34401,34573,34978,35174,35646,36255,36307,36672,36952,37199,37448,37512,37580,37743,37935,38155,38333,38448,38575,38797,38828,39070,39245,39589,39826,39872,39929,39949,40210,40634,41110,41247,41317,41707,41918,41939,42025,42055,42225,42626,42707,42923,43039,43632,43767,43779,43956,44083,44628,44714,44777,44928,45109,45205,45276,45278,45345,45370,45931,46416,46625,46814,47011,47064,47261,47328,47715,47975,48305,48451,48461,48737,48755,48787,49116,49544,49857,50179,50246,50431,50438,50674,50926,50940,51388,51732,51770,51864,52067,52174,52341,52555,52753,53223,53384,53415,53732,53805,54020,54025,54112,54241,54600,55044,55479,56123,56321,56600,56640,56670,56736,57117,57174,57259,57998,58779,58993,59003,59168,59244,59353,59860,60121,60736,61201,61364,61459,61597,61642,61767,61873,61899,62095,62193,62250,62307,62491,62634,63136,63558,63591,64554,65048,65329,65740,66057,66063,66125,66172,66352,67110,67148,67366,67492,67645,67717,67944,68440,69526,69539,69599,69744,70094,70482,70853,71411,71495,71650,71764,72077,72401,72475,72519,73037,73156,73678,73852,73959,74341,74473,74564,74649,74668,74784,74801,75530,76181,76414,76460,76992,77156,77626,77777,77866,78276,78344,78508,78723,78851,78919,79007,79489,79586,79798,79921,79953,80077,80081,80287,80532,80965,81224,81247,81460,81492,81507,81579,81822,82475,82797,82942,83049,83504,83664,83756,83940,83964,83970,84027,84209,84393,84668,85140,85315,85897,85988,86158,86383,86418,86689,86928,87079,87331,87490,87541,88731,88871,88968,89020,89108,89584,89810,89925,90488,90517,90565,91383,91744,91856,92004,92139,92195,92502,92526,92586,92676,92744,92821,92882,92912,92913,92950,93080,93452,94130,94799,95279,95428,95899,96037,96387,96408,96903,97619,97772,97907,97970,98032,98157,99140,99703,99788,99855,99931,99988}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
XN Merge  (cost=1008708544685.97..1008708544686.72 rows=299 width=115)
  Merge Key: (ss3.store_sales / ss2.store_sales)
  ->  XN Network  (cost=1008708544685.97..1008708544686.72 rows=299 width=115)
        Send to leader
        ->  XN Sort  (cost=1008708544685.97..1008708544686.72 rows=299 width=115)
              Sort Key: (ss3.store_sales / ss2.store_sales)
              ->  XN Hash Join DS_BCAST_INNER  (cost=4857176822.56..8708544673.68 rows=299 width=115)
                    Hash Cond: ((("outer".ca_county)::text = ("inner".ca_county)::text) AND ("outer".d_year = "inner".d_year))
                    Join Filter: (CASE WHEN ("inner".store_sales > 0::double precision) THEN ("outer".store_sales / "inner".store_sales) ELSE NULL::double precision END < CASE WHEN ("inner".web_sales > 0::double precision) THEN ("outer".web_sales / "inner".web_sales) ELSE NULL::double precision END)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=2972609532.32..5270376332.82 rows=533 width=300)
                          Hash Cond: ((("outer".ca_county)::text = ("inner".ca_county)::text) AND ("outer".d_year = "inner".d_year))
                          Join Filter: (CASE WHEN ("inner".store_sales > 0::double precision) THEN ("outer".store_sales / "inner".store_sales) ELSE NULL::double precision END < CASE WHEN ("inner".web_sales > 0::double precision) THEN ("outer".web_sales / "inner".web_sales) ELSE NULL::double precision END)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1108402354.60..1884567285.38 rows=971 width=150)
                                Hash Cond: (("outer".d_qoy = "inner".d_qoy) AND ("outer".d_year = "inner".d_year) AND (("outer".ca_county)::text = ("inner".ca_county)::text))
                                ->  XN Subquery Scan ss3  (cost=851303901.53..851303924.44 rows=1833 width=79)
                                      ->  XN HashAggregate  (cost=851303901.53..851303906.11 rows=1833 width=33)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=17462717.97..851303872.25 rows=2928 width=33)
                                                  Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                  ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=21)
                                                  ->  XN Hash  (cost=17462710.52..17462710.52 rows=2978 width=20)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..17462710.52 rows=2978 width=20)
                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2622460 width=16)
                                                                    Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=12)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=12)
                                                                          Filter: ((d_year = 2000) AND (d_qoy = 3))
                                ->  XN Hash  (cost=257098446.46..257098446.46 rows=882 width=79)
                                      ->  XN Subquery Scan ws3  (cost=257098435.43..257098446.46 rows=882 width=79)
                                            ->  XN HashAggregate  (cost=257098435.43..257098437.64 rows=882 width=33)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=17417292.79..257098426.61 rows=882 width=33)
                                                        Hash Cond: ("outer".ca_address_sk = "inner".ws_bill_addr_sk)
                                                        ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=21)
                                                        ->  XN Hash  (cost=17417290.65..17417290.65 rows=856 width=20)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..17417290.65 rows=856 width=20)
                                                                    Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=12)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=12)
                                                                                Filter: ((d_year = 2000) AND (d_qoy = 3))
                          ->  XN Hash  (cost=1864207172.97..1864207172.97 rows=951 width=150)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095962353.04..1864207172.97 rows=951 width=150)
                                      Hash Cond: (("outer".d_qoy = "inner".d_qoy) AND ("outer".d_year = "inner".d_year) AND (("outer".ca_county)::text = ("inner".ca_county)::text))
                                      ->  XN Subquery Scan ss2  (cost=841583900.44..841583923.09 rows=1812 width=79)
                                            ->  XN HashAggregate  (cost=841583900.44..841583904.97 rows=1812 width=33)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=17262717.54..841583871.49 rows=2895 width=33)
                                                        Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                        ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=21)
                                                        ->  XN Hash  (cost=17262710.18..17262710.18 rows=2944 width=20)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..17262710.18 rows=2944 width=20)
                                                                    Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2622460 width=16)
                                                                          Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=12)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=12)
                                                                                Filter: ((d_year = 2000) AND (d_qoy = 2))
                                      ->  XN Hash  (cost=254378446.05..254378446.05 rows=873 width=79)
                                            ->  XN Subquery Scan ws2  (cost=254378435.14..254378446.05 rows=873 width=79)
                                                  ->  XN HashAggregate  (cost=254378435.14..254378437.32 rows=873 width=33)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=17217292.68..254378426.41 rows=873 width=33)
                                                              Hash Cond: ("outer".ca_address_sk = "inner".ws_bill_addr_sk)
                                                              ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=21)
                                                              ->  XN Hash  (cost=17217290.56..17217290.56 rows=847 width=20)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..17217290.56 rows=847 width=20)
                                                                          Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=12)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=12)
                                                                                      Filter: ((d_year = 2000) AND (d_qoy = 2))
                    ->  XN Hash  (cost=1884567285.38..1884567285.38 rows=971 width=150)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1108402354.60..1884567285.38 rows=971 width=150)
                                Hash Cond: ((("outer".ca_county)::text = ("inner".ca_county)::text) AND ("outer".d_qoy = "inner".d_qoy) AND ("outer".d_year = "inner".d_year))
                                ->  XN Subquery Scan ss1  (cost=851303901.53..851303924.44 rows=1833 width=79)
                                      ->  XN HashAggregate  (cost=851303901.53..851303906.11 rows=1833 width=33)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=17462717.97..851303872.25 rows=2928 width=33)
                                                  Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                  ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=21)
                                                  ->  XN Hash  (cost=17462710.52..17462710.52 rows=2978 width=20)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..17462710.52 rows=2978 width=20)
                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2622460 width=16)
                                                                    Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=12)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=12)
                                                                          Filter: ((d_year = 2000) AND (d_qoy = 1))
                                ->  XN Hash  (cost=257098446.46..257098446.46 rows=882 width=79)
                                      ->  XN Subquery Scan ws1  (cost=257098435.43..257098446.46 rows=882 width=79)
                                            ->  XN HashAggregate  (cost=257098435.43..257098437.64 rows=882 width=33)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=17417292.79..257098426.61 rows=882 width=33)
                                                        Hash Cond: ("outer".ca_address_sk = "inner".ws_bill_addr_sk)
                                                        ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=21)
                                                        ->  XN Hash  (cost=17417290.65..17417290.65 rows=856 width=20)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..17417290.65 rows=856 width=20)
                                                                    Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=16)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=12)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=12)
                                                                                Filter: ((d_year = 2000) AND (d_qoy = 1))
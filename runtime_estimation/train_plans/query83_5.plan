XN Limit  (cost=1002903285272.91..1002903285273.16 rows=100 width=147)
  ->  XN Merge  (cost=1002903285272.91..1002903285277.51 rows=1838 width=147)
        Merge Key: customer.c_last_name, customer.c_first_name, substr((ms.s_city)::text, 1, 30), ms.profit
        ->  XN Network  (cost=1002903285272.91..1002903285277.51 rows=1838 width=147)
              Send to leader
              ->  XN Sort  (cost=1002903285272.91..1002903285277.51 rows=1838 width=147)
                    Sort Key: customer.c_last_name, customer.c_first_name, substr((ms.s_city)::text, 1, 30), ms.profit
                    ->  XN Hash Join DS_BCAST_INNER  (cost=366301900.28..2903285173.25 rows=1838 width=147)
                          Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                          ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=23)
                          ->  XN Hash  (cost=366301895.75..366301895.75 rows=1812 width=132)
                                ->  XN Subquery Scan ms  (cost=366301868.57..366301895.75 rows=1812 width=132)
                                      ->  XN HashAggregate  (cost=366301868.57..366301877.63 rows=1812 width=38)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1576.76..366301841.39 rows=1812 width=38)
                                                  Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1576.55..363421799.37 rows=1895 width=32)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1461.35..17821556.58 rows=4828 width=36)
                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2499433 width=40)
                                                                    Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=1460.98..1460.98 rows=148 width=4)
                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1460.98 rows=148 width=4)
                                                                          Filter: (((d_year = 2000) OR (d_year = 2001) OR (d_year = 1999)) AND (d_dow = 1))
                                                        ->  XN Hash  (cost=108.00..108.00 rows=2880 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..108.00 rows=2880 width=4)
                                                                    Filter: ((hd_vehicle_count > 2) OR (hd_dep_count = 7))
                                                  ->  XN Hash  (cost=0.18..0.18 rows=12 width=14)
                                                        ->  XN Seq Scan on store  (cost=0.00..0.18 rows=12 width=14)
                                                              Filter: ((s_number_employees <= 295) AND (s_number_employees >= 200))
XN Limit  (cost=1000083262844.29..1000083262844.30 rows=1 width=47)
  ->  XN Merge  (cost=1000083262844.29..1000083262844.30 rows=1 width=47)
        Merge Key: store.s_store_name, store.s_store_id, sum(CASE WHEN ((date_dim.d_day_name)::text = 'Sunday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Monday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Tuesday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Wednesday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Thursday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Friday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Saturday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END)
        ->  XN Network  (cost=1000083262844.29..1000083262844.30 rows=1 width=47)
              Send to leader
              ->  XN Sort  (cost=1000083262844.29..1000083262844.30 rows=1 width=47)
                    Sort Key: store.s_store_name, store.s_store_id, sum(CASE WHEN ((date_dim.d_day_name)::text = 'Sunday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Monday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Tuesday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Wednesday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Thursday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Friday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END), sum(CASE WHEN ((date_dim.d_day_name)::text = 'Saturday'::text) THEN store_sales.ss_sales_price ELSE NULL::double precision END)
                    ->  XN HashAggregate  (cost=83262844.25..83262844.28 rows=1 width=47)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=914.13..83262823.05 rows=942 width=47)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..82862665.67 rows=11825 width=23)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=15)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=15)
                                                  Filter: (d_year = 2002)
                                ->  XN Hash  (cost=0.15..0.15 rows=1 width=32)
                                      ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=32)
                                            Filter: (s_gmt_offset = -5::double precision)
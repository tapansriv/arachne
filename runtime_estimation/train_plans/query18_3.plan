XN Limit  (cost=1000031487153.42..1000031487153.43 rows=1 width=141)
  ->  XN Merge  (cost=1000031487153.42..1000031487153.43 rows=1 width=141)
        Merge Key: item.i_item_id, item.i_item_desc, store.s_state
        ->  XN Network  (cost=1000031487153.42..1000031487153.43 rows=1 width=141)
              Send to leader
              ->  XN Sort  (cost=1000031487153.42..1000031487153.43 rows=1 width=141)
                    Sort Key: item.i_item_id, item.i_item_desc, store.s_state
                    ->  XN HashAggregate  (cost=31487153.34..31487153.41 rows=1 width=141)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=31086748.28..31487153.30 rows=1 width=141)
                                Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=127)
                                ->  XN Hash  (cost=31086748.27..31086748.27 rows=1 width=30)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=30645466.63..31086748.27 rows=1 width=30)
                                            Hash Cond: ("outer".d_date_sk = "inner".cs_sold_date_sk)
                                            ->  XN Seq Scan on date_dim d3  (cost=0.00..1278.36 rows=262 width=4)
                                                  Filter: (((d_quarter_name)::text = '2001Q1'::text) OR ((d_quarter_name)::text = '2001Q2'::text) OR ((d_quarter_name)::text = '2001Q3'::text))
                                            ->  XN Hash  (cost=30645466.63..30645466.63 rows=1 width=34)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=30195347.94..30645466.63 rows=1 width=34)
                                                        Hash Cond: (("outer".cs_bill_customer_sk = "inner".sr_customer_sk) AND ("outer".cs_item_sk = "inner".sr_item_sk))
                                                        ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1428128 width=16)
                                                              Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=30195347.93..30195347.93 rows=1 width=30)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=29835347.65..30195347.93 rows=1 width=30)
                                                                    Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                                                    ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=10)
                                                                    ->  XN Hash  (cost=29835347.65..29835347.65 rows=1 width=28)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=10634066.01..29835347.65 rows=1 width=28)
                                                                                Hash Cond: ("outer".d_date_sk = "inner".sr_returned_date_sk)
                                                                                ->  XN Seq Scan on date_dim d2  (cost=0.00..1278.36 rows=262 width=4)
                                                                                      Filter: (((d_quarter_name)::text = '2001Q1'::text) OR ((d_quarter_name)::text = '2001Q2'::text) OR ((d_quarter_name)::text = '2001Q3'::text))
                                                                                ->  XN Hash  (cost=10634065.89..10634065.89 rows=48 width=32)
                                                                                      ->  XN Hash Join DS_DIST_NONE  (cost=10621117.38..10634065.89 rows=48 width=32)
                                                                                            Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_customer_sk = "inner".ss_customer_sk) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                                            ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=268623 width=20)
                                                                                                  Filter: ((sr_customer_sk IS NOT NULL) AND (sr_returned_date_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=10621095.77..10621095.77 rows=2881 width=20)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=913.33..10621095.77 rows=2881 width=20)
                                                                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2507967 width=24)
                                                                                                              Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                                                        ->  XN Hash  (cost=913.11..913.11 rows=88 width=4)
                                                                                                              ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=88 width=4)
                                                                                                                    Filter: ((d_quarter_name)::text = '2001Q1'::text)
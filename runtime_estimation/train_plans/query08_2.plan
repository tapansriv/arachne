XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2001) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10541,10621,10665,10768,11007,11150,11398,11475,11704,11870,11876,12024,12111,12540,12556,12560,13364,13399,13408,13654,13725,14206,14233,14296,14694,14703,14881,15039,15200,16526,16888,17016,17061,17315,17335,17360,17550,17938,18677,18697,19029,19150,19335,19477,20116,20281,20349,20692,20693,21303,21418,21610,21660,22224,22629,22840,23062,23220,23233,23386,23456,23672,23930,24182,24385,24433,24676,25019,25035,25131,25337,25427,25575,25721,25724,25805,25949,26059,26116,26386,26418,26812,26819,26925,27058,27342,27413,27721,27753,27845,27879,28356,28398,28508,29323,29796,29822,30047,30317,30375,30386,30613,30719,30730,30784,30997,31186,31652,32285,33087,33252,33347,33874,33977,33993,34050,34337,34467,34487,34548,35215,35805,36035,36339,36539,36592,36786,37364,38537,38607,38629,38678,38685,38711,38807,38986,39104,39390,39675,39785,40231,40353,41381,41477,41560,41805,42053,42058,42345,42946,43085,43324,44483,45002,45081,45163,45248,45665,45694,45738,45937,45978,46004,46047,46077,46412,46656,46829,46839,47187,47192,47471,47487,47538,47707,48104,48120,48217,48631,49137,49364,49408,49686,49775,50230,50275,50707,50933,51064,51110,51329,51527,51664,51964,52136,52263,52303,52494,52509,52528,52548,52589,52776,52855,52883,52964,53031,54055,54200,54561,54811,54976,55106,55171,55293,55480,55505,55839,55919,55940,56083,56184,56340,56709,56897,57080,57530,57925,58023,58157,58257,58293,58509,58531,58937,59033,59196,59534,59753,60234,60268,60698,60894,61138,61259,61363,61854,61886,62318,62748,62909,62985,62993,63181,63584,63620,63902,64240,64756,64778,64872,65028,65177,65228,65309,65611,65787,66078,66418,66659,66996,67102,67369,67373,67600,67625,68261,68442,68667,68777,69057,69914,69971,70281,70616,70855,71804,72293,72462,72713,72997,73006,73223,73444,73549,73622,73723,73749,73991,74119,74369,74841,74887,74909,75368,75690,76914,76925,77040,77054,77086,77447,77698,77724,77924,78205,78387,78473,78498,78697,79237,79461,79518,79952,80208,80269,80364,80879,80983,81213,81595,81649,82046,82273,83049,83269,83455,83634,83672,84017,84359,84536,85022,85323,85450,85721,86033,87080,87082,87085,87564,87837,88160,88543,89088,89253,89263,89430,89468,89761,89922,90041,90190,90441,90515,90791,90864,90992,91213,91390,91722,92165,92228,92450,92525,92652,92698,93048,93160,93262,93265,93426,94029,94081,94736,94769,95300,95380,95416,95471,95966,96355,96586,96597,96708,96839,97437,98498,98737,99688}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
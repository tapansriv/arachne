XN Limit  (cost=1000010331829.51..1000010331829.54 rows=12 width=101)
  ->  XN Merge  (cost=1000010331829.51..1000010331829.54 rows=12 width=101)
        Merge Key: store.s_store_name, store.s_company_id, store.s_street_number, store.s_street_name, store.s_street_type, store.s_suite_number, store.s_city, store.s_county, store.s_state, store.s_zip
        ->  XN Network  (cost=1000010331829.51..1000010331829.54 rows=12 width=101)
              Send to leader
              ->  XN Sort  (cost=1000010331829.51..1000010331829.54 rows=12 width=101)
                    Sort Key: store.s_store_name, store.s_company_id, store.s_street_number, store.s_street_name, store.s_street_type, store.s_suite_number, store.s_city, store.s_county, store.s_state, store.s_zip
                    ->  XN HashAggregate  (cost=10331828.67..10331829.30 rows=12 width=101)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=7131827.28..10331828.07 rows=16 width=101)
                                Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=97)
                                ->  XN Hash  (cost=7131827.24..7131827.24 rows=16 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=3730183.47..7131827.24 rows=16 width=12)
                                            Hash Cond: ("outer".d_date_sk = "inner".ss_sold_date_sk)
                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..730.49 rows=73049 width=4)
                                            ->  XN Hash  (cost=3730183.42..3730183.42 rows=17 width=12)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=3607330.61..3730183.42 rows=17 width=12)
                                                        Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_customer_sk = "inner".sr_customer_sk) AND ("outer".ss_item_sk = "inner".sr_item_sk))
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2507967 width=20)
                                                              Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=3607329.81..3607329.81 rows=107 width=16)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..3607329.81 rows=107 width=16)
                                                                    Hash Cond: ("outer".sr_returned_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=268623 width=16)
                                                                          Filter: ((sr_customer_sk IS NOT NULL) AND (sr_returned_date_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=30 width=4)
                                                                          ->  XN Seq Scan on date_dim d2  (cost=0.00..1095.73 rows=30 width=4)
                                                                                Filter: ((d_year = 2002) AND (d_moy = 8))
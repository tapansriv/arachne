XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10601,10651,10802,11784,11917,11998,12287,12351,13034,13281,13343,13605,14100,14171,14245,14765,15087,15127,15226,15728,16159,16345,16347,16392,16405,16774,16909,17018,17053,17340,17357,17483,17726,18178,18787,18825,18944,19420,19540,19824,19850,19966,20041,20289,20449,20597,21314,21401,21661,21704,22061,22490,22543,23012,23301,23470,23559,23850,24434,24435,24542,24596,24621,24810,24881,25466,25854,26203,26641,26750,27361,27496,27555,27608,27818,28072,28579,29008,29121,29231,29419,29543,29737,29831,30005,30319,30503,30566,30863,31213,31305,31502,32041,32282,32331,32389,32494,32503,32701,32717,33011,33186,33309,33724,33794,33963,34063,34579,34672,34879,35295,35694,35712,36059,36113,36141,36302,36471,36631,36689,36750,37014,37075,37483,37547,37713,37962,38448,38631,38853,39245,39414,39560,39662,39740,40266,40429,40500,40517,40847,40962,41393,41596,41798,42095,42193,42220,42974,43083,43170,43198,43251,43733,44143,44496,44543,44632,44889,45122,45234,45275,45712,45728,45761,46005,46388,46468,46508,46563,47353,47721,47855,47919,48209,48243,48545,48638,48850,48899,49184,49563,49834,49951,50018,50169,50245,50736,51373,51555,51687,51784,51930,52376,52710,52960,53085,53146,53300,53346,53391,53619,53815,54525,54998,55154,55271,55289,55290,55475,55542,55816,56309,56404,56407,56490,56527,56571,56678,56715,57026,57047,57517,58020,58576,58659,58669,58737,58809,58879,58965,59480,59876,59907,60344,60456,60708,60749,61539,61658,61732,62677,62700,63129,63193,63196,63267,63274,63962,64257,64654,65677,65859,66151,66442,66446,66463,66500,66670,66881,67080,67187,67229,67270,67279,67308,67806,67967,68044,68872,68956,68999,69030,69097,69609,70215,70396,70609,70687,71718,71849,71889,72015,72056,72118,72209,72356,72433,72894,72941,73001,73297,73679,74136,74182,74208,74651,74920,75138,75558,75791,75803,75843,75910,76203,76382,76834,76995,77035,77129,77246,77391,77664,77741,78109,78148,78424,78579,78953,79094,79336,80068,80504,80539,80590,81002,81134,81437,82531,82611,82930,83597,83608,83868,85122,85139,85319,85424,85436,85720,85755,85764,85769,85891,85969,86518,86953,86998,87128,87323,87330,87588,88056,88058,88657,88745,89002,89242,89455,89665,90466,90740,91037,91176,91348,91877,92064,92097,92710,93049,93417,93562,93653,94094,94275,94346,94399,94414,94560,94591,94715,94771,94884,95051,95152,95470,95924,95944,96004,96106,96468,96699,96939,97009,97473,97736,97873,98850,98933,99238,99288}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
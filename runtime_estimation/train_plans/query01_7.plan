XN HashAggregate  (cost=41407285.77..41407288.95 rows=1269 width=16)
  ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41407276.26 rows=1269 width=16)
        Hash Cond: ("outer".sr_returned_date_sk = "inner".d_date_sk)
        ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=277956 width=20)
              Filter: (sr_returned_date_sk IS NOT NULL)
        ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
              ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                    Filter: (2001 = d_year)

XN Limit  (cost=1000189023885.10..1000189023885.35 rows=100 width=20)
  ->  XN Merge  (cost=1000189023885.10..1000189023927.08 rows=16794 width=20)
        Merge Key: customer.c_customer_id
        ->  XN Network  (cost=1000189023885.10..1000189023927.08 rows=16794 width=20)
              Send to leader
              ->  XN Sort  (cost=1000189023885.10..1000189023927.08 rows=16794 width=20)
                    Sort Key: customer.c_customer_id
                    ->  XN Hash Join DS_BCAST_INNER  (cost=69740446.43..189022706.52 rows=16794 width=20)
                          Hash Cond: ("outer".c_customer_sk = "inner".sr_customer_sk)
                          ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=24)
                          ->  XN Hash  (cost=69740443.95..69740443.95 rows=994 width=4)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=66858696.01..69740443.95 rows=994 width=4)
                                      Hash Cond: ("outer".sr_store_sk = "inner".s_store_sk)
                                      Join Filter: ("inner".col0 < "outer".col2)
                                      ->  XN Seq Scan on volt_tt_618d8ac6ce1cb  (cost=0.00..500.90 rows=50090 width=16)
                                      ->  XN Hash  (cost=66858695.98..66858695.98 rows=12 width=16)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=65418690.36..66858695.98 rows=12 width=16)
                                                  Hash Cond: ("outer".sr_store_sk = "inner".s_store_sk)
                                                  ->  XN Subquery Scan volt_dt_0  (cost=65418690.18..65418693.18 rows=200 width=12)
                                                        ->  XN HashAggregate  (cost=65418690.18..65418691.18 rows=200 width=12)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=41407300.96..65418441.82 rows=49673 width=12)
                                                                    Hash Cond: ("outer".sr_store_sk = "inner".sr_store_sk)
                                                                    ->  XN Seq Scan on volt_tt_618d8ac6ce1cb  (cost=0.00..500.90 rows=50090 width=12)
                                                                    ->  XN Hash  (cost=41407300.46..41407300.46 rows=200 width=4)
                                                                          ->  XN Subquery Scan volt_dt_1  (cost=41407282.60..41407300.46 rows=200 width=4)
                                                                                ->  XN Unique  (cost=41407282.60..41407298.46 rows=200 width=4)
                                                                                      ->  XN Subquery Scan ctr1  (cost=41407282.60..41407295.29 rows=1269 width=4)
                                                                                            ->  XN HashAggregate  (cost=41407282.60..41407282.60 rows=1269 width=8)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..41407276.26 rows=1269 width=8)
                                                                                                        Hash Cond: ("outer".sr_returned_date_sk = "inner".d_date_sk)
                                                                                                        ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=277956 width=12)
                                                                                                              Filter: (sr_returned_date_sk IS NOT NULL)
                                                                                                        ->  XN Hash  (cost=913.11..913.11 rows=345 width=4)
                                                                                                              ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=4)
                                                                                                                    Filter: (d_year = 2001)
                                                  ->  XN Hash  (cost=0.15..0.15 rows=12 width=4)
                                                        ->  XN Seq Scan on store  (cost=0.00..0.15 rows=12 width=4)
                                                              Filter: ((s_state)::text = 'TN'::text)
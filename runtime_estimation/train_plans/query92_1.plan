XN Nested Loop DS_BCAST_INNER  (cost=2836385842.64..2837505842.79 rows=1 width=64)
  ->  XN Nested Loop DS_BCAST_INNER  (cost=2474637607.57..2475597607.70 rows=1 width=56)
        ->  XN Nested Loop DS_BCAST_INNER  (cost=2127289381.98..2128089382.09 rows=1 width=48)
              ->  XN Nested Loop DS_BCAST_INNER  (cost=1779941156.38..1780581156.47 rows=1 width=40)
                    ->  XN Nested Loop DS_BCAST_INNER  (cost=1432592930.79..1433072930.86 rows=1 width=32)
                          ->  XN Nested Loop DS_BCAST_INNER  (cost=1085244705.19..1085564705.24 rows=1 width=24)
                                ->  XN Nested Loop DS_BCAST_INNER  (cost=723496470.13..723656470.16 rows=1 width=16)
                                      ->  XN Subquery Scan s4  (cost=361748235.06..361748235.07 rows=1 width=8)
                                            ->  XN Aggregate  (cost=361748235.06..361748235.06 rows=1 width=0)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1483.68..361748233.44 rows=647 width=0)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1300.80..223387951.53 rows=4114 width=4)
                                                              Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                                          Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                                                Filter: ((s_store_name)::text = 'ese'::text)
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                                          Filter: ((t_hour = 10) AND (t_minute < 30))
                                                        ->  XN Hash  (cost=180.00..180.00 rows=1153 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1153 width=4)
                                                                    Filter: (((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
                                      ->  XN Subquery Scan s8  (cost=361748235.06..361748235.07 rows=1 width=8)
                                            ->  XN Aggregate  (cost=361748235.06..361748235.06 rows=1 width=0)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1483.68..361748233.44 rows=647 width=0)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1300.80..223387951.53 rows=4114 width=4)
                                                              Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                                          Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                                                Filter: ((s_store_name)::text = 'ese'::text)
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                                          Filter: ((t_hour = 12) AND (t_minute < 30))
                                                        ->  XN Hash  (cost=180.00..180.00 rows=1153 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1153 width=4)
                                                                    Filter: (((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
                                ->  XN Subquery Scan s2  (cost=361748235.06..361748235.07 rows=1 width=8)
                                      ->  XN Aggregate  (cost=361748235.06..361748235.06 rows=1 width=0)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1483.68..361748233.44 rows=647 width=0)
                                                  Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1300.80..223387951.53 rows=4114 width=4)
                                                        Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                              Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                                    Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                                    ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                                          Filter: ((s_store_name)::text = 'ese'::text)
                                                        ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                                              ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                                                    Filter: ((t_hour = 9) AND (t_minute < 30))
                                                  ->  XN Hash  (cost=180.00..180.00 rows=1153 width=4)
                                                        ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1153 width=4)
                                                              Filter: (((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
                          ->  XN Subquery Scan s7  (cost=347348225.60..347348225.61 rows=1 width=8)
                                ->  XN Aggregate  (cost=347348225.60..347348225.60 rows=1 width=0)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1483.38..347348224.08 rows=605 width=0)
                                            Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1300.50..208987948.57 rows=3848 width=4)
                                                  Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                        Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                              Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                              ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                                    Filter: ((s_store_name)::text = 'ese'::text)
                                                  ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                                        ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                                              Filter: ((t_hour = 11) AND (t_minute >= 30))
                                            ->  XN Hash  (cost=180.00..180.00 rows=1153 width=4)
                                                  ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1153 width=4)
                                                        Filter: (((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
                    ->  XN Subquery Scan s3  (cost=347348225.60..347348225.61 rows=1 width=8)
                          ->  XN Aggregate  (cost=347348225.60..347348225.60 rows=1 width=0)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1483.38..347348224.08 rows=605 width=0)
                                      Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1300.50..208987948.57 rows=3848 width=4)
                                            Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                                  Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                  ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                        Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                        ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                              Filter: ((s_store_name)::text = 'ese'::text)
                                            ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                                  ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                                        Filter: ((t_hour = 9) AND (t_minute >= 30))
                                      ->  XN Hash  (cost=180.00..180.00 rows=1153 width=4)
                                            ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1153 width=4)
                                                  Filter: (((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
              ->  XN Subquery Scan s5  (cost=347348225.60..347348225.61 rows=1 width=8)
                    ->  XN Aggregate  (cost=347348225.60..347348225.60 rows=1 width=0)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1483.38..347348224.08 rows=605 width=0)
                                Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1300.50..208987948.57 rows=3848 width=4)
                                      Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                                  Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                            ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                        Filter: ((s_store_name)::text = 'ese'::text)
                                      ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                            ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                                  Filter: ((t_hour = 10) AND (t_minute >= 30))
                                ->  XN Hash  (cost=180.00..180.00 rows=1153 width=4)
                                      ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1153 width=4)
                                            Filter: (((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
        ->  XN Subquery Scan s1  (cost=347348225.60..347348225.61 rows=1 width=8)
              ->  XN Aggregate  (cost=347348225.60..347348225.60 rows=1 width=0)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1483.38..347348224.08 rows=605 width=0)
                          Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1300.50..208987948.57 rows=3848 width=4)
                                Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                      Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                            Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                      ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                            ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                                  Filter: ((s_store_name)::text = 'ese'::text)
                                ->  XN Hash  (cost=1296.00..1296.00 rows=1740 width=4)
                                      ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1740 width=4)
                                            Filter: ((t_hour = 8) AND (t_minute >= 30))
                          ->  XN Hash  (cost=180.00..180.00 rows=1153 width=4)
                                ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1153 width=4)
                                      Filter: (((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
  ->  XN Subquery Scan s6  (cost=361748235.06..361748235.07 rows=1 width=8)
        ->  XN Aggregate  (cost=361748235.06..361748235.06 rows=1 width=0)
              ->  XN Hash Join DS_BCAST_INNER  (cost=1483.68..361748233.44 rows=647 width=0)
                    Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1300.80..223387951.53 rows=4114 width=4)
                          Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..182119.28 rows=199576 width=8)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2505546 width=12)
                                      Filter: ((ss_hdemo_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL))
                                ->  XN Hash  (cost=0.15..0.15 rows=1 width=4)
                                      ->  XN Seq Scan on store  (cost=0.00..0.15 rows=1 width=4)
                                            Filter: ((s_store_name)::text = 'ese'::text)
                          ->  XN Hash  (cost=1296.00..1296.00 rows=1860 width=4)
                                ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1860 width=4)
                                      Filter: ((t_hour = 11) AND (t_minute < 30))
                    ->  XN Hash  (cost=180.00..180.00 rows=1153 width=4)
                          ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1153 width=4)
                                Filter: (((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)) OR ((hd_dep_count = -1) AND (hd_vehicle_count <= 1)))
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
XN HashAggregate  (cost=38704448.73..38704477.60 rows=11546 width=16)
  ->  XN Hash Join DS_BCAST_INNER  (cost=1096.54..38704362.14 rows=11546 width=16)
        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=20)
              Filter: (ss_sold_date_sk IS NOT NULL)
        ->  XN Hash  (cost=1095.73..1095.73 rows=322 width=4)
              ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=322 width=4)
                    Filter: ((d_month_seq >= 1186) AND (d_month_seq <= 1197))

XN Limit  (cost=1005052644290.90..1005052644291.15 rows=100 width=155)
  ->  XN Merge  (cost=1005052644290.90..1005052644314.00 rows=9240 width=155)
        Merge Key: store.s_store_name, item.i_item_desc
        ->  XN Network  (cost=1005052644290.90..1005052644314.00 rows=9240 width=155)
              Send to leader
              ->  XN Sort  (cost=1005052644290.90..1005052644314.00 rows=9240 width=155)
                    Sort Key: store.s_store_name, item.i_item_desc
                    ->  XN Hash Join DS_BCAST_INNER  (cost=3122732.48..5052643682.27 rows=9240 width=155)
                          Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                          ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=143)
                          ->  XN Hash  (cost=3122687.40..3122687.40 rows=18034 width=20)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1200912.91..3122687.40 rows=18034 width=20)
                                      Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                      Join Filter: ("outer".col2 <= ("inner".ave * 0.10000000000000001::double precision))
                                      ->  XN Seq Scan on volt_tt_618d8943dc5dc  (cost=0.00..608.32 rows=60832 width=16)
                                      ->  XN Hash  (cost=1200912.90..1200912.90 rows=6 width=24)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=912.57..1200912.90 rows=6 width=24)
                                                  Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=12)
                                                  ->  XN Hash  (cost=912.56..912.56 rows=6 width=12)
                                                        ->  XN Subquery Scan sb  (cost=912.48..912.56 rows=6 width=12)
                                                              ->  XN HashAggregate  (cost=912.48..912.50 rows=6 width=12)
                                                                    ->  XN Seq Scan on volt_tt_618d8943dc5dc  (cost=0.00..608.32 rows=60832 width=12)
XN Limit  (cost=1003834294872.24..1003834294872.49 rows=100 width=56)
  ->  XN Merge  (cost=1003834294872.24..1003834294876.64 rows=1759 width=56)
        Merge Key: (curr_yr.sales_cnt - prev_yr.sales_cnt), (curr_yr.sales_amt - prev_yr.sales_amt)
        ->  XN Network  (cost=1003834294872.24..1003834294876.64 rows=1759 width=56)
              Send to leader
              ->  XN Sort  (cost=1003834294872.24..1003834294876.64 rows=1759 width=56)
                    Sort Key: (curr_yr.sales_cnt - prev_yr.sales_cnt), (curr_yr.sales_amt - prev_yr.sales_amt)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1619233157.31..3834294777.43 rows=1759 width=56)
                          Hash Cond: (("outer".i_brand_id = "inner".i_brand_id) AND ("outer".i_category_id = "inner".i_category_id) AND ("outer".i_class_id = "inner".i_class_id) AND ("outer".i_manufact_id = "inner".i_manufact_id))
                          Join Filter: (((("outer".sales_cnt)::numeric)::numeric(17,2) / (("inner".sales_cnt)::numeric)::numeric(17,2)) < 0.900000000000000000)
                          ->  XN Subquery Scan curr_yr  (cost=809616515.73..809616591.24 rows=5034 width=36)
                                ->  XN HashAggregate  (cost=809616515.73..809616540.90 rows=5034 width=32)
                                      ->  XN Subquery Scan sales_detail  (cost=55233719.98..809615634.85 rows=50336 width=32)
                                            ->  XN Unique  (cost=55233719.98..809615131.49 rows=50336 width=44)
                                                  ->  XN Append  (cost=55233719.98..809614250.61 rows=50336 width=44)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=55233719.98..55238978.44 rows=14407 width=44)
                                                              ->  XN Hash Right Join DS_DIST_NONE  (cost=55233719.98..55238834.37 rows=14407 width=44)
                                                                    Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                                                    ->  XN Seq Scan on catalog_returns  (cost=0.00..1440.67 rows=144067 width=20)
                                                                    ->  XN Hash  (cost=55233716.66..55233716.66 rows=663 width=40)
                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=1143.29..55233716.66 rows=663 width=40)
                                                                                Hash Cond: ("outer".cs_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55233329.11 rows=6738 width=24)
                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=24)
                                                                                            Filter: (cs_sold_date_sk IS NOT NULL)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 1999)
                                                                                ->  XN Hash  (cost=225.00..225.00 rows=1727 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1727 width=20)
                                                                                            Filter: ((i_category)::text = 'Books'::text)
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=55264713.75..55275208.03 rows=28752 width=44)
                                                              ->  XN Hash Right Join DS_DIST_NONE  (cost=55264713.75..55274920.51 rows=28752 width=44)
                                                                    Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                    ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=287514 width=20)
                                                                    ->  XN Hash  (cost=55264707.66..55264707.66 rows=1217 width=40)
                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=1143.29..55264707.66 rows=1217 width=40)
                                                                                Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55264187.83 rows=12371 width=24)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=24)
                                                                                            Filter: (ss_sold_date_sk IS NOT NULL)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 1999)
                                                                                ->  XN Hash  (cost=225.00..225.00 rows=1727 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1727 width=20)
                                                                                            Filter: ((i_category)::text = 'Books'::text)
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=538777444.78..699100064.15 rows=7177 width=44)
                                                              ->  XN Hash Right Join DS_DIST_INNER  (cost=538777444.78..699099992.38 rows=7177 width=44)
                                                                    Inner Dist Key: web_sales.ws_order_number
                                                                    Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                    ->  XN Seq Scan on web_returns  (cost=0.00..717.63 rows=71763 width=20)
                                                                    ->  XN Hash  (cost=538777443.11..538777443.11 rows=334 width=40)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1143.29..538777443.11 rows=334 width=40)
                                                                                Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55217134.06 rows=3395 width=24)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=24)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 1999)
                                                                                ->  XN Hash  (cost=225.00..225.00 rows=1727 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1727 width=20)
                                                                                            Filter: ((i_category)::text = 'Books'::text)
                          ->  XN Hash  (cost=809616591.24..809616591.24 rows=5034 width=36)
                                ->  XN Subquery Scan prev_yr  (cost=809616515.73..809616591.24 rows=5034 width=36)
                                      ->  XN HashAggregate  (cost=809616515.73..809616540.90 rows=5034 width=32)
                                            ->  XN Subquery Scan sales_detail  (cost=55233719.98..809615634.85 rows=50336 width=32)
                                                  ->  XN Unique  (cost=55233719.98..809615131.49 rows=50336 width=44)
                                                        ->  XN Append  (cost=55233719.98..809614250.61 rows=50336 width=44)
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=55233719.98..55238978.44 rows=14407 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_NONE  (cost=55233719.98..55238834.37 rows=14407 width=44)
                                                                          Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                                                          ->  XN Seq Scan on catalog_returns  (cost=0.00..1440.67 rows=144067 width=20)
                                                                          ->  XN Hash  (cost=55233716.66..55233716.66 rows=663 width=40)
                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=1143.29..55233716.66 rows=663 width=40)
                                                                                      Hash Cond: ("outer".cs_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55233329.11 rows=6738 width=24)
                                                                                            Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=24)
                                                                                                  Filter: (cs_sold_date_sk IS NOT NULL)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 1998)
                                                                                      ->  XN Hash  (cost=225.00..225.00 rows=1727 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1727 width=20)
                                                                                                  Filter: ((i_category)::text = 'Books'::text)
                                                              ->  XN Subquery Scan "*SELECT* 2"  (cost=55264713.75..55275208.03 rows=28752 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_NONE  (cost=55264713.75..55274920.51 rows=28752 width=44)
                                                                          Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                          ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=287514 width=20)
                                                                          ->  XN Hash  (cost=55264707.66..55264707.66 rows=1217 width=40)
                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=1143.29..55264707.66 rows=1217 width=40)
                                                                                      Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55264187.83 rows=12371 width=24)
                                                                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=24)
                                                                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 1998)
                                                                                      ->  XN Hash  (cost=225.00..225.00 rows=1727 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1727 width=20)
                                                                                                  Filter: ((i_category)::text = 'Books'::text)
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=538777444.78..699100064.15 rows=7177 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_INNER  (cost=538777444.78..699099992.38 rows=7177 width=44)
                                                                          Inner Dist Key: web_sales.ws_order_number
                                                                          Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                          ->  XN Seq Scan on web_returns  (cost=0.00..717.63 rows=71763 width=20)
                                                                          ->  XN Hash  (cost=538777443.11..538777443.11 rows=334 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1143.29..538777443.11 rows=334 width=40)
                                                                                      Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55217134.06 rows=3395 width=24)
                                                                                            Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=24)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 1998)
                                                                                      ->  XN Hash  (cost=225.00..225.00 rows=1727 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1727 width=20)
                                                                                                  Filter: ((i_category)::text = 'Books'::text)
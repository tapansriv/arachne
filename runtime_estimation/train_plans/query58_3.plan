XN Limit  (cost=1000012561468.11..1000012561468.11 rows=1 width=4)
  ->  XN Merge  (cost=1000012561468.11..1000012561468.11 rows=1 width=4)
        Merge Key: segment, count(*)
        ->  XN Network  (cost=1000012561468.11..1000012561468.11 rows=1 width=4)
              Send to leader
              ->  XN Sort  (cost=1000012561468.11..1000012561468.11 rows=1 width=4)
                    Sort Key: segment, count(*)
                    ->  XN HashAggregate  (cost=12561468.09..12561468.10 rows=1 width=4)
                          ->  XN Subquery Scan segments  (cost=12561468.07..12561468.09 rows=1 width=4)
                                ->  XN HashAggregate  (cost=12561468.07..12561468.08 rows=1 width=12)
                                      InitPlan
                                        ->  XN Unique  (cost=0.00..1095.88 rows=2 width=4)
                                              ->  XN Seq Scan on date_dim  (cost=0.00..1095.81 rows=30 width=4)
                                                    Filter: ((d_year = 2002) AND (d_moy = 5))
                                        ->  XN Unique  (cost=0.00..1095.88 rows=2 width=4)
                                              ->  XN Seq Scan on date_dim  (cost=0.00..1095.81 rows=30 width=4)
                                                    Filter: ((d_year = 2002) AND (d_moy = 5))
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=5838175.98..12559276.30 rows=1 width=12)
                                            Hash Cond: ("outer".d_date_sk = "inner".ss_sold_date_sk)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=366 width=4)
                                                  Filter: ((d_month_seq <= $0) AND (d_month_seq >= $1))
                                            ->  XN Hash  (cost=5838175.91..5838175.91 rows=28 width=16)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=5656573.66..5838175.91 rows=28 width=16)
                                                        Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2623834 width=16)
                                                              Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=5656573.66..5656573.66 rows=1 width=4)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=5296573.23..5656573.66 rows=1 width=4)
                                                                    Hash Cond: ((("outer".s_county)::text = ("inner".ca_county)::text) AND (("outer".s_state)::text = ("inner".ca_state)::text))
                                                                    ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=27)
                                                                    ->  XN Hash  (cost=5296573.22..5296573.22 rows=1 width=27)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=5135484.33..5296573.22 rows=1 width=27)
                                                                                Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=47111 width=27)
                                                                                      Filter: ((ca_state IS NOT NULL) AND (ca_county IS NOT NULL))
                                                                                ->  XN Hash  (cost=5135484.32..5135484.32 rows=1 width=8)
                                                                                      ->  XN Subquery Scan my_customers  (cost=5013234.29..5135484.32 rows=1 width=8)
                                                                                            ->  XN Unique  (cost=5013234.29..5135484.31 rows=1 width=8)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=5013234.29..5135484.31 rows=1 width=8)
                                                                                                        Hash Cond: ("outer".c_customer_sk = "inner".customer_sk)
                                                                                                        ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=8)
                                                                                                        ->  XN Hash  (cost=5013234.29..5013234.29 rows=1 width=4)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1365.84..5013234.29 rows=1 width=4)
                                                                                                                    Hash Cond: ("outer".item_sk = "inner".i_item_sk)
                                                                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1095.81..3692944.29 rows=887 width=8)
                                                                                                                          Hash Cond: ("outer".sold_date_sk = "inner".d_date_sk)
                                                                                                                          ->  XN Subquery Scan cs_or_ws_sales  (cost=0.00..64827.96 rows=2160932 width=12)
                                                                                                                                ->  XN Multi Scan  (cost=0.00..43218.64 rows=2160932 width=12)
                                                                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1441548 width=12)
                                                                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=12)
                                                                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=30 width=4)
                                                                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                                                                                                                                      Filter: ((d_year = 2002) AND (d_moy = 5))
                                                                                                                    ->  XN Hash  (cost=270.00..270.00 rows=11 width=4)
                                                                                                                          ->  XN Seq Scan on item  (cost=0.00..270.00 rows=11 width=4)
                                                                                                                                Filter: (((i_class)::text = 'earings'::text) AND ((i_category)::text = 'Jewelry'::text))
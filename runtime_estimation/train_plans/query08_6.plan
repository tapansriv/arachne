XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1999) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10281,10554,10582,10726,10901,10915,11300,11302,11328,11665,12111,12198,12402,12665,12666,13233,13383,14057,14229,14374,14574,15111,15118,15309,15566,15608,15633,15640,15990,16379,16453,16668,16682,16713,16982,17321,17396,17490,17508,17537,18449,18585,19034,19180,19976,20097,20325,20398,20903,21040,21213,21496,21732,21872,22353,22952,23139,23369,23449,23883,23955,24410,24499,25032,25252,25550,26089,26897,27362,27655,27719,28124,28571,28770,28879,29243,29282,29458,29857,29952,30036,30719,30962,31189,31332,31852,31952,32027,32102,32139,32473,32497,32545,32736,33142,33261,33526,33694,34443,34649,35303,35390,35466,35670,35700,36097,36517,36629,36763,37022,37047,37426,37488,37586,38072,38392,38485,38548,39016,39336,39412,39731,39850,39852,39873,40045,40195,40418,40873,41168,41777,41950,42006,42306,43047,43509,43644,44137,44160,44318,44493,44594,44657,44831,45153,45217,45319,45432,45527,45886,46163,46423,46437,46558,46807,46937,46955,47087,47202,47225,47386,47687,48338,48417,48467,48698,48853,49133,49147,49341,49513,49790,50052,50068,50793,51137,51224,51309,51393,51549,51772,51813,52033,52341,52573,52647,52808,52872,52946,52962,53829,54395,54470,54909,55237,55429,55560,56220,56318,56451,56723,56741,57185,57501,57774,57904,58046,58287,58357,58365,58470,58606,59064,59614,59631,59652,59820,60106,60121,61620,61794,62246,62681,62695,63233,63588,63794,64233,64488,64559,64617,64697,64888,65246,65282,65404,65879,65892,66061,66066,66114,66294,66356,66553,66568,66583,66635,67353,67922,67979,68339,68424,68690,68733,69381,69494,69528,69730,70087,70548,70565,70588,70672,70783,71046,71333,71372,71547,71571,71932,71968,72081,72092,72133,72973,73027,73099,73146,73404,73434,73584,73675,73798,73973,74460,74520,74608,74787,75120,75161,75228,75437,75960,76403,76561,77065,77215,77279,77328,77435,77505,77921,77946,78921,79073,79188,79328,79407,79706,79796,79921,79955,80061,80289,80303,80398,80646,81011,81071,81072,81225,81327,81466,81513,81532,81751,81984,82148,82214,82252,82334,82358,82501,82750,83261,83293,83323,84154,84690,84868,85606,85729,85829,85880,86321,86338,86684,86690,86765,86801,86840,86944,87300,87446,88391,88995,89330,89335,89426,89625,89712,89720,89919,89986,90170,90430,90468,90700,90974,91051,91191,91368,91499,91862,92183,92280,92343,92844,92878,93133,93182,93367,93453,94163,94573,94811,95059,95115,95431,95672,96173,96287,96500,96666,97144,98468,99109,99616,99746,99855}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
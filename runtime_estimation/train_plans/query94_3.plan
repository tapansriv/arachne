XN Nested Loop DS_BCAST_INNER  (cost=721491022.69..721651022.74 rows=1 width=16)
  ->  XN Subquery Scan "at"  (cost=388825648.01..388825648.02 rows=1 width=8)
        ->  XN Aggregate  (cost=388825648.01..388825648.01 rows=1 width=0)
              ->  XN Hash Join DS_BCAST_INNER  (cost=86784296.44..388825647.69 rows=126 width=0)
                    Hash Cond: ("outer".t_time_sk = "inner".ws_sold_time_sk)
                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=4320 width=4)
                          Filter: ((t_hour <= 8) AND (t_hour >= 7))
                    ->  XN Hash  (cost=86784290.14..86784290.14 rows=2517 width=4)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=92.71..86784290.14 rows=2517 width=4)
                                Hash Cond: ("outer".ws_ship_hdemo_sk = "inner".hd_demo_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=0.90..263624.66 rows=24378 width=8)
                                      Hash Cond: ("outer".ws_web_page_sk = "inner".wp_web_page_sk)
                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=12)
                                      ->  XN Hash  (cost=0.90..0.90 rows=2 width=4)
                                            ->  XN Seq Scan on web_page  (cost=0.00..0.90 rows=2 width=4)
                                                  Filter: ((wp_char_count >= 5000) AND (wp_char_count <= 5200))
                                ->  XN Hash  (cost=90.00..90.00 rows=721 width=4)
                                      ->  XN Seq Scan on household_demographics  (cost=0.00..90.00 rows=721 width=4)
                                            Filter: (hd_dep_count = 1)
  ->  XN Subquery Scan pt  (cost=332665374.68..332665374.69 rows=1 width=8)
        ->  XN Aggregate  (cost=332665374.68..332665374.68 rows=1 width=0)
              ->  XN Hash Join DS_BCAST_INNER  (cost=259465274.88..332665374.52 rows=63 width=0)
                    Hash Cond: ("outer".hd_demo_sk = "inner".ws_ship_hdemo_sk)
                    ->  XN Seq Scan on household_demographics  (cost=0.00..90.00 rows=721 width=4)
                          Filter: (hd_dep_count = 1)
                    ->  XN Hash  (cost=259465273.35..259465273.35 rows=610 width=4)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1302.31..259465273.35 rows=610 width=4)
                                Hash Cond: ("outer".ws_web_page_sk = "inner".wp_web_page_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1301.40..259224861.37 rows=17999 width=8)
                                      Hash Cond: ("outer".ws_sold_time_sk = "inner".t_time_sk)
                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=12)
                                      ->  XN Hash  (cost=1296.00..1296.00 rows=2160 width=4)
                                            ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=2160 width=4)
                                                  Filter: ((t_hour >= 18) AND (t_hour <= 19))
                                ->  XN Hash  (cost=0.90..0.90 rows=2 width=4)
                                      ->  XN Seq Scan on web_page  (cost=0.00..0.90 rows=2 width=4)
                                            Filter: ((wp_char_count >= 5000) AND (wp_char_count <= 5200))
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
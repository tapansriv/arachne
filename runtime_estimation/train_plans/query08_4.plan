XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 1998) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10183,10312,10529,10643,10805,11600,12081,12271,12637,13033,13133,13215,13990,14125,14248,14249,14316,14364,15162,15713,16525,16976,17148,17485,17941,17955,18060,18124,18203,18623,19084,19308,19419,19468,19506,19700,19798,19913,19944,20319,20898,20980,21139,21192,21245,21344,21498,21883,22072,22215,22454,23039,23255,23288,23594,23598,23707,24293,24474,24638,24928,25173,25434,25475,25599,25730,25793,25811,26256,26310,26362,26446,26649,26698,27072,27412,27418,27687,27708,27777,28046,28062,28308,29384,30236,30444,30535,30812,31238,31376,31801,31909,31947,32210,32356,32451,32478,32730,33164,33289,33314,33360,33607,33729,33766,33876,34061,34088,34292,34489,34864,34870,35004,35151,35212,35446,35692,35844,35885,35942,36152,36154,36579,36715,36813,37096,37212,37342,37430,37476,37553,37601,37607,37620,37731,37780,37906,37942,38014,38051,38158,38537,38583,39150,39490,39492,39617,39679,40053,40177,40470,40562,40739,40914,41042,41196,41222,42230,42477,42715,42893,43165,43195,43205,43713,43725,43919,44096,44296,44308,44326,44632,45031,45516,46046,46722,47537,47597,48163,48496,48734,48881,49132,49144,49300,49561,49580,50046,50135,50441,50957,51417,51821,52400,52462,52471,52909,53261,53708,53971,54162,54495,55580,55646,55652,55672,56185,56232,56464,56565,56605,56761,56774,56807,57131,57233,57336,57369,57418,57443,57519,57910,57933,58123,58783,59054,59880,60338,60886,60901,61098,61187,61242,61297,61495,61750,61757,61959,62510,62634,62723,63564,63580,64022,64403,64737,64890,65136,65185,65245,65275,65660,65938,66097,66140,66561,67248,67495,67564,68022,68375,69289,69369,69421,69686,69720,70086,70178,70404,70531,70850,70897,71284,71496,71777,71980,72418,72569,73171,73184,73501,74271,74406,74451,74583,74609,74726,75257,75283,75296,75297,75761,76277,76666,76675,76678,76815,77041,77723,77912,77954,78004,78165,78176,78313,78392,78548,79010,79017,79055,79396,79407,79464,80050,80055,80305,80430,80618,80998,81074,81312,81567,81637,81828,81865,82622,82804,83684,83824,83827,83859,84161,84204,84366,84642,84798,85354,85388,85391,85567,85675,85958,86046,86284,86342,86423,86506,86607,87340,87457,87661,87862,87871,88439,88514,88960,88974,89634,90009,90067,90482,90549,90861,91027,91135,91182,91399,91746,92241,92397,93091,93220,93243,93590,93692,93954,94258,94263,94995,95502,95636,95804,96145,96618,97126,97285,97289,97524,97968,98060,98132,98655,98808,98950,99147,99254,99350,99600,99666,99674}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
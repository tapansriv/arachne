XN Limit  (cost=1003861174874.16..1003861174874.41 rows=100 width=56)
  ->  XN Merge  (cost=1003861174874.16..1003861174878.56 rows=1759 width=56)
        Merge Key: (curr_yr.sales_cnt - prev_yr.sales_cnt), (curr_yr.sales_amt - prev_yr.sales_amt)
        ->  XN Network  (cost=1003861174874.16..1003861174878.56 rows=1759 width=56)
              Send to leader
              ->  XN Sort  (cost=1003861174874.16..1003861174878.56 rows=1759 width=56)
                    Sort Key: (curr_yr.sales_cnt - prev_yr.sales_cnt), (curr_yr.sales_amt - prev_yr.sales_amt)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1646113159.23..3861174779.35 rows=1759 width=56)
                          Hash Cond: (("outer".i_brand_id = "inner".i_brand_id) AND ("outer".i_category_id = "inner".i_category_id) AND ("outer".i_class_id = "inner".i_class_id) AND ("outer".i_manufact_id = "inner".i_manufact_id))
                          Join Filter: (((("outer".sales_cnt)::numeric)::numeric(17,2) / (("inner".sales_cnt)::numeric)::numeric(17,2)) < 0.900000000000000000)
                          ->  XN Subquery Scan curr_yr  (cost=823056516.69..823056592.20 rows=5034 width=36)
                                ->  XN HashAggregate  (cost=823056516.69..823056541.86 rows=5034 width=32)
                                      ->  XN Subquery Scan sales_detail  (cost=55233720.28..823055635.81 rows=50336 width=32)
                                            ->  XN Unique  (cost=55233720.28..823055132.45 rows=50336 width=44)
                                                  ->  XN Append  (cost=55233720.28..823054251.57 rows=50336 width=44)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=55233720.28..55238978.74 rows=14407 width=44)
                                                              ->  XN Hash Right Join DS_DIST_NONE  (cost=55233720.28..55238834.67 rows=14407 width=44)
                                                                    Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                                                    ->  XN Seq Scan on catalog_returns  (cost=0.00..1440.67 rows=144067 width=20)
                                                                    ->  XN Hash  (cost=55233716.89..55233716.89 rows=677 width=40)
                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=1143.38..55233716.89 rows=677 width=40)
                                                                                Hash Cond: ("outer".cs_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55233329.11 rows=6738 width=24)
                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=24)
                                                                                            Filter: (cs_sold_date_sk IS NOT NULL)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2000)
                                                                                ->  XN Hash  (cost=225.00..225.00 rows=1763 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1763 width=20)
                                                                                            Filter: ((i_category)::text = 'Sports'::text)
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=55264714.21..55275208.49 rows=28752 width=44)
                                                              ->  XN Hash Right Join DS_DIST_NONE  (cost=55264714.21..55274920.97 rows=28752 width=44)
                                                                    Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                    ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=287514 width=20)
                                                                    ->  XN Hash  (cost=55264708.00..55264708.00 rows=1242 width=40)
                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=1143.38..55264708.00 rows=1242 width=40)
                                                                                Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55264187.83 rows=12371 width=24)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=24)
                                                                                            Filter: (ss_sold_date_sk IS NOT NULL)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2000)
                                                                                ->  XN Hash  (cost=225.00..225.00 rows=1763 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1763 width=20)
                                                                                            Filter: ((i_category)::text = 'Sports'::text)
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=548857444.98..712540064.35 rows=7177 width=44)
                                                              ->  XN Hash Right Join DS_DIST_INNER  (cost=548857444.98..712539992.58 rows=7177 width=44)
                                                                    Inner Dist Key: web_sales.ws_order_number
                                                                    Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                    ->  XN Seq Scan on web_returns  (cost=0.00..717.63 rows=71763 width=20)
                                                                    ->  XN Hash  (cost=548857443.27..548857443.27 rows=341 width=40)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1143.38..548857443.27 rows=341 width=40)
                                                                                Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55217134.06 rows=3395 width=24)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=24)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2000)
                                                                                ->  XN Hash  (cost=225.00..225.00 rows=1763 width=20)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1763 width=20)
                                                                                            Filter: ((i_category)::text = 'Sports'::text)
                          ->  XN Hash  (cost=823056592.20..823056592.20 rows=5034 width=36)
                                ->  XN Subquery Scan prev_yr  (cost=823056516.69..823056592.20 rows=5034 width=36)
                                      ->  XN HashAggregate  (cost=823056516.69..823056541.86 rows=5034 width=32)
                                            ->  XN Subquery Scan sales_detail  (cost=55233720.28..823055635.81 rows=50336 width=32)
                                                  ->  XN Unique  (cost=55233720.28..823055132.45 rows=50336 width=44)
                                                        ->  XN Append  (cost=55233720.28..823054251.57 rows=50336 width=44)
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=55233720.28..55238978.74 rows=14407 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_NONE  (cost=55233720.28..55238834.67 rows=14407 width=44)
                                                                          Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                                                          ->  XN Seq Scan on catalog_returns  (cost=0.00..1440.67 rows=144067 width=20)
                                                                          ->  XN Hash  (cost=55233716.89..55233716.89 rows=677 width=40)
                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=1143.38..55233716.89 rows=677 width=40)
                                                                                      Hash Cond: ("outer".cs_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55233329.11 rows=6738 width=24)
                                                                                            Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1434582 width=24)
                                                                                                  Filter: (cs_sold_date_sk IS NOT NULL)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 1999)
                                                                                      ->  XN Hash  (cost=225.00..225.00 rows=1763 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1763 width=20)
                                                                                                  Filter: ((i_category)::text = 'Sports'::text)
                                                              ->  XN Subquery Scan "*SELECT* 2"  (cost=55264714.21..55275208.49 rows=28752 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_NONE  (cost=55264714.21..55274920.97 rows=28752 width=44)
                                                                          Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                                                          ->  XN Seq Scan on store_returns  (cost=0.00..2875.14 rows=287514 width=20)
                                                                          ->  XN Hash  (cost=55264708.00..55264708.00 rows=1242 width=40)
                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=1143.38..55264708.00 rows=1242 width=40)
                                                                                      Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55264187.83 rows=12371 width=24)
                                                                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=24)
                                                                                                  Filter: (ss_sold_date_sk IS NOT NULL)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 1999)
                                                                                      ->  XN Hash  (cost=225.00..225.00 rows=1763 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1763 width=20)
                                                                                                  Filter: ((i_category)::text = 'Sports'::text)
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=548857444.98..712540064.35 rows=7177 width=44)
                                                                    ->  XN Hash Right Join DS_DIST_INNER  (cost=548857444.98..712539992.58 rows=7177 width=44)
                                                                          Inner Dist Key: web_sales.ws_order_number
                                                                          Hash Cond: (("outer".wr_order_number = "inner".ws_order_number) AND ("outer".wr_item_sk = "inner".ws_item_sk))
                                                                          ->  XN Seq Scan on web_returns  (cost=0.00..717.63 rows=71763 width=20)
                                                                          ->  XN Hash  (cost=548857443.27..548857443.27 rows=341 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1143.38..548857443.27 rows=341 width=40)
                                                                                      Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55217134.06 rows=3395 width=24)
                                                                                            Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=24)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 1999)
                                                                                      ->  XN Hash  (cost=225.00..225.00 rows=1763 width=20)
                                                                                            ->  XN Seq Scan on item  (cost=0.00..225.00 rows=1763 width=20)
                                                                                                  Filter: ((i_category)::text = 'Sports'::text)
XN Seq Scan on item  (cost=0.00..315.00 rows=666 width=20)
  Filter: (((i_color)::text = 'smoke'::text) OR ((i_color)::text = 'cornflower'::text) OR ((i_color)::text = 'forest'::text))

XN Limit  (cost=1000312316452.48..1000312316452.49 rows=3 width=40)
  ->  XN Merge  (cost=1000312316452.48..1000312316452.49 rows=3 width=40)
        Merge Key: sum(total_sales), i_item_id
        ->  XN Network  (cost=1000312316452.48..1000312316452.49 rows=3 width=40)
              Send to leader
              ->  XN Sort  (cost=1000312316452.48..1000312316452.49 rows=3 width=40)
                    Sort Key: sum(total_sales), i_item_id
                    ->  XN HashAggregate  (cost=312316452.45..312316452.45 rows=3 width=40)
                          ->  XN Subquery Scan tmp1  (cost=104183724.35..312316452.43 rows=3 width=40)
                                ->  XN Append  (cost=104183724.35..312316452.40 rows=3 width=28)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=104183724.35..104183724.36 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=104183724.35..104183724.35 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3663718.09..104183724.34 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=6.29..6.29 rows=499 width=20)
                                                              ->  XN Seq Scan on volt_tt_618d88c82fea9  (cost=0.00..5.03 rows=503 width=20)
                                                        ->  XN Hash  (cost=3663711.80..3663711.80 rows=2 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=3663306.78..3663711.80 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                                    ->  XN Hash  (cost=3663306.78..3663306.78 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3663306.78 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..182210.31 rows=52 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2622460 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -6::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 2000) AND (d_moy = 3))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=103794403.15..103794403.17 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=103794403.15..103794403.16 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3634396.90..103794403.15 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=6.29..6.29 rows=499 width=20)
                                                              ->  XN Seq Scan on volt_tt_618d88c82fea9  (cost=0.00..5.03 rows=503 width=20)
                                                        ->  XN Hash  (cost=3634390.61..3634390.61 rows=1 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=3633985.59..3634390.61 rows=1 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                                    ->  XN Hash  (cost=3633985.59..3633985.59 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3633985.59 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..152889.39 rows=30 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1427889 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -6::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 2000) AND (d_moy = 3))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=104338324.86..104338324.88 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=104338324.86..104338324.87 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=3818318.61..104338324.86 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=6.29..6.29 rows=499 width=20)
                                                              ->  XN Seq Scan on volt_tt_618d88c82fea9  (cost=0.00..5.03 rows=503 width=20)
                                                        ->  XN Hash  (cost=3818312.32..3818312.32 rows=2 width=28)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=3617907.30..3818312.32 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..180.00 rows=18000 width=24)
                                                                    ->  XN Hash  (cost=3617907.30..3617907.30 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1720.81..3617907.30 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=625.00..136811.29 rows=15 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=20)
                                                                                      ->  XN Hash  (cost=625.00..625.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..625.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -6::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 2000) AND (d_moy = 3))
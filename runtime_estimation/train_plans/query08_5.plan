XN Limit  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
  ->  XN Merge  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026223168.53..1000026223168.55 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26223168.39..26223168.41 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26223097.94 rows=14090 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10382758.87 rows=2948 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=86 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=86 width=4)
                                                  Filter: ((d_year = 2002) AND (d_qoy = 2))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10557,10889,10988,11164,11357,11646,12056,12253,12446,13537,13618,13627,13945,14263,14431,14681,14753,14972,15275,15336,15341,15632,15729,16397,17127,17447,17666,17955,18186,18324,18375,18538,18831,18849,19081,19330,19475,19532,19884,19921,20320,20521,20648,20730,21406,21477,21526,21790,21926,21934,22052,22544,22608,22815,23020,23040,23750,23800,24118,24626,24895,24930,25026,25563,25737,25740,25801,25820,26188,26234,26312,26727,27045,27223,27231,28499,29670,29711,29873,30156,30185,30217,30718,30994,31127,31466,31495,31835,31915,33351,33436,33638,33853,34391,34431,34444,35078,35195,35449,35514,35680,35730,36095,36303,36394,36554,36616,36673,36768,37024,37232,37636,37710,37907,37930,38517,38847,38865,39200,39226,39480,39979,40079,40188,40191,40328,40855,41621,41737,41918,42177,42275,42380,42565,42925,43230,43378,43658,43893,43907,43909,44514,44535,44573,44824,44880,44907,44991,45503,45766,46002,46048,46279,46494,46609,46652,46671,48014,48045,48093,48094,48168,48600,48643,48666,48853,48973,49404,49781,49899,49919,50026,50490,50692,51215,51249,51326,51827,51842,52372,52475,52719,52766,52984,52993,53171,53234,53488,53797,53817,53868,54115,54130,54503,54525,54700,55091,55198,55412,55792,55816,56087,56303,56335,56934,57097,57115,57191,57542,57921,58020,58186,58401,58507,58570,58977,59236,59545,59709,59995,60125,60283,60602,60664,60696,60744,60931,60970,61442,61722,61979,62063,62314,62345,62443,62519,62581,62763,63240,63248,63260,63798,63935,64019,64220,64295,64340,64363,64669,64691,64713,64961,65449,66103,66194,66203,66346,67083,67100,67292,67537,67789,67954,68139,68363,68499,68572,68679,68838,69479,69727,69862,70094,70579,70810,71119,71190,71237,71967,72184,72255,72335,72534,72565,73190,73597,73609,73754,73838,73953,74094,74236,74428,74814,74857,75058,75166,75177,75304,75489,75606,75909,77059,77383,77504,77533,77737,77754,78092,78150,79200,79790,79975,80377,80445,80510,80667,80729,81090,81104,81149,81395,81692,81917,82025,82135,82451,82542,82553,82836,82843,83120,83438,83481,83586,83661,83930,84474,84981,85015,85169,85292,85333,85667,85869,86151,86247,86686,86853,87106,87688,87751,88762,88883,89263,89416,89488,89724,90088,90091,90176,90541,90791,90892,91200,91297,91665,91717,91986,92427,92458,92888,92936,93081,93608,94345,94473,94589,94643,95315,95346,96242,96310,96508,96515,96532,96589,96595,97221,97496,97825,97838,98034,98466,98728,98835,98990,99176,99404,99825}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
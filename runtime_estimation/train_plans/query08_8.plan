XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2000) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10131,10419,10424,10631,10748,10988,11168,11237,12058,12272,12316,12498,13015,14493,14805,14924,15421,16065,16102,16533,16571,16617,16694,16785,16974,17108,17213,17473,17813,17903,18176,18414,19129,19231,19338,19376,19418,20053,20077,20080,20121,20191,20542,21187,22644,22673,22933,23165,23340,23353,23460,23485,23564,23665,23874,24303,24607,24733,24992,25788,26125,26289,26407,26489,26515,26758,27537,27661,27674,27741,27819,27894,27972,28718,29065,29469,29709,30260,30553,31177,31361,31646,32000,32052,32577,32631,32818,33004,33043,33094,33211,33257,33261,33498,34060,34269,34309,34327,34395,34532,34598,34861,34920,34982,35169,35259,35303,35696,35700,35847,35914,36148,36262,36361,36399,36602,36830,37028,37074,37375,37534,37672,37740,37868,37924,38077,38093,38122,38277,38852,38979,39159,39353,39366,39472,39717,39798,40085,40482,41170,41406,41481,41521,41666,41768,42018,42048,42144,42332,42363,42687,42837,43038,43093,43119,43224,43381,43403,43693,44000,44053,44232,44258,44474,44510,44521,44558,44633,44756,45450,45501,45631,45851,45961,46152,46259,46521,46551,46661,46781,46816,47220,47292,47422,47460,47950,48548,48906,49285,49385,50182,51373,51402,51693,51820,51825,52131,52664,52850,53324,53686,54020,54054,54339,54615,55103,55384,55601,55633,55654,56229,56263,56393,56591,56596,56869,56885,57468,57917,58277,58696,59029,59122,59130,59153,59637,59747,59924,60691,60913,61010,61276,61346,61622,61674,61832,62104,62565,63199,63268,63373,63419,63644,64587,64953,65273,65396,65450,65890,66010,66082,66134,66511,68224,68299,68494,68530,68978,69667,69696,70000,70328,70499,70579,70598,71416,71915,72458,72511,72522,72531,72620,73124,73607,74195,74281,74712,74773,74775,74844,75146,75249,75267,75350,75557,75635,75716,75953,76115,76143,76398,76639,77192,77225,77238,77472,77521,77539,77775,77838,77870,77874,78302,78498,79117,79305,79499,79625,79725,80010,80243,80244,80639,80652,80764,80949,81123,81557,81958,82369,82481,82567,82689,82700,82725,82797,82834,83422,83714,83769,83855,84065,84693,84842,85002,85191,85314,85734,85750,85918,86618,86732,86953,87051,87357,87364,87565,88056,88094,88516,89264,89463,89657,89891,90047,90161,90450,91025,91262,91320,91477,91552,92017,92027,92114,92530,92926,93041,93057,93336,93349,94353,94650,94903,95823,96114,96247,96284,96638,96651,96838,97757,97811,97859,97929,98207,98368,98760,98867,98980,99082,99112,99141,99194,99256,99380,99682,99726,99764,99821}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
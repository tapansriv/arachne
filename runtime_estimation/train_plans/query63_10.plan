XN HashAggregate  (cost=20453869190.31..20453871240.85 rows=58587 width=27)
  ->  XN Hash Join DS_BCAST_INNER  (cost=913.11..20453810256.19 rows=2619294 width=27)
        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
        ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=16)
              Filter: (ss_sold_date_sk IS NOT NULL)
        ->  XN Hash  (cost=730.49..730.49 rows=73049 width=19)
              ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=19)

XN Limit  (cost=1000078322414.57..1000078322414.57 rows=1 width=144)
  ->  XN Merge  (cost=1000078322414.57..1000078322414.57 rows=1 width=144)
        Merge Key: store.s_store_name, store.s_store_id, volt_tt_618d89fabb638.d_week_seq
        ->  XN Network  (cost=1000078322414.57..1000078322414.57 rows=1 width=144)
              Send to leader
              ->  XN Sort  (cost=1000078322414.57..1000078322414.57 rows=1 width=144)
                    Sort Key: store.s_store_name, store.s_store_id, volt_tt_618d89fabb638.d_week_seq
                    ->  XN Hash Join DS_DIST_NONE  (cost=78322414.11..78322414.55 rows=1 width=144)
                          Hash Cond: (("outer".s_store_sk = "inner".ss_store_sk) AND (("outer".s_store_id)::text = ("inner".s_store_id)::text))
                          ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=32)
                          ->  XN Hash  (cost=78322414.10..78322414.10 rows=1 width=140)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=77002413.82..78322414.10 rows=1 width=140)
                                      Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                      ->  XN Seq Scan on store volt_dt_1  (cost=0.00..0.12 rows=12 width=24)
                                      ->  XN Hash  (cost=77002413.82..77002413.82 rows=1 width=124)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=75482372.54..77002413.82 rows=1 width=124)
                                                  Hash Cond: ("outer".d_week_seq = "inner".d_week_seq)
                                                  ->  XN Seq Scan on volt_tt_618d89fabb638  (cost=0.00..18.34 rows=1834 width=64)
                                                  ->  XN Hash  (cost=75482372.54..75482372.54 rows=2 width=68)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=2193.04..75482372.54 rows=2 width=68)
                                                              Hash Cond: (("outer".d_week_seq - 52) = "inner".d_week_seq)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.52..37561266.73 rows=57 width=64)
                                                                    Hash Cond: ("outer".d_week_seq = "inner".d_week_seq)
                                                                    ->  XN Seq Scan on volt_tt_618d89fabb638 volt_dt_2  (cost=0.00..18.34 rows=1834 width=64)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=313 width=4)
                                                                          ->  XN Seq Scan on date_dim volt_dt_0  (cost=0.00..1095.73 rows=313 width=4)
                                                                                Filter: ((d_month_seq >= 1202) AND (d_month_seq <= 1213))
                                                              ->  XN Hash  (cost=1095.73..1095.73 rows=316 width=4)
                                                                    ->  XN Seq Scan on date_dim d  (cost=0.00..1095.73 rows=316 width=4)
                                                                          Filter: ((d_month_seq >= 1190) AND (d_month_seq <= 1201))
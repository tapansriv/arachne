XN Limit  (cost=1028255920698.43..1028255920698.68 rows=100 width=128)
  ->  XN Merge  (cost=1028255920698.43..1028255924064.11 rows=1346272 width=128)
        Merge Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
        ->  XN Network  (cost=1028255920698.43..1028255924064.11 rows=1346272 width=128)
              Send to leader
              ->  XN Sort  (cost=1028255920698.43..1028255924064.11 rows=1346272 width=128)
                    Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
                    ->  XN Hash Join DS_BCAST_INNER  (cost=21370802155.91..28255783644.32 rows=1346272 width=128)
                          Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                          Join Filter: (CASE WHEN ("outer".year_total > 0::double precision) THEN ("outer".year_total / "outer".year_total) ELSE NULL::double precision END > CASE WHEN ("outer".year_total > 0::double precision) THEN ("inner".year_total / "outer".year_total) ELSE NULL::double precision END)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=19685982522.23..24774891114.96 rows=676551 width=288)
                                Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                                ->  XN Hash Join DS_BCAST_INNER  (cost=18001162889.38..22568242355.40 rows=389644 width=256)
                                      Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                                      Join Filter: (CASE WHEN ("outer".year_total > 0::double precision) THEN ("inner".year_total / "outer".year_total) ELSE NULL::double precision END > CASE WHEN ("outer".year_total > 0::double precision) THEN ("outer".year_total / "outer".year_total) ELSE NULL::double precision END)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=14726086900.19..15768295550.30 rows=99553 width=228)
                                            Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=11451010936.80..11972063469.16 rows=57335 width=184)
                                                  Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                                                  ->  XN Subquery Scan t_s_secyear  (cost=5725505285.47..5725505657.43 rows=11444 width=140)
                                                        ->  XN Append  (cost=5725505285.47..5725505542.99 rows=11444 width=160)
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=5725505285.47..5725505542.91 rows=11442 width=160)
                                                                    ->  XN HashAggregate  (cost=5725505285.47..5725505428.49 rows=11442 width=160)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=55262663.60..5725505028.02 rows=11442 width=160)
                                                                                Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                                                ->  XN Hash  (cost=55262634.07..55262634.07 rows=11813 width=40)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55262634.07 rows=11813 width=40)
                                                                                            Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2623834 width=40)
                                                                                                  Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 2000)
                                                              ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                                  ->  XN Hash  (cost=5725505648.83..5725505648.83 rows=1002 width=44)
                                                        ->  XN Subquery Scan t_s_firstyear  (cost=5725505314.07..5725505648.83 rows=1002 width=44)
                                                              ->  XN Append  (cost=5725505314.07..5725505638.81 rows=1002 width=160)
                                                                    ->  XN Subquery Scan "*SELECT* 1"  (cost=5725505314.07..5725505638.73 rows=1000 width=160)
                                                                          ->  XN HashAggregate  (cost=5725505314.07..5725505628.73 rows=1000 width=160)
                                                                                Filter: (sum(((ss_ext_sales_price + ((ss_ext_list_price - ss_ext_wholesale_cost) - ss_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=55262663.60..5725505028.02 rows=11442 width=160)
                                                                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                      ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                                                      ->  XN Hash  (cost=55262634.07..55262634.07 rows=11813 width=40)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55262634.07 rows=11813 width=40)
                                                                                                  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                  ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2623834 width=40)
                                                                                                        Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                                  ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                        ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                              Filter: (d_year = 1999)
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                                          ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                            Distribute Round Robin
                                                                                            ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                                  One-Time Filter: false
                                                                    ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                                          ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                            Distribute Round Robin
                                                                                            ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                                  One-Time Filter: false
                                            ->  XN Hash  (cost=3275075958.38..3275075958.38 rows=1002 width=44)
                                                  ->  XN Subquery Scan t_c_firstyear  (cost=0.03..3275075958.38 rows=1002 width=44)
                                                        ->  XN Append  (cost=0.03..3275075948.36 rows=1002 width=160)
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                                              ->  XN Subquery Scan "*SELECT* 2"  (cost=3275075751.99..3275075948.28 rows=1000 width=160)
                                                                    ->  XN HashAggregate  (cost=3275075751.99..3275075938.28 rows=1000 width=160)
                                                                          Filter: (sum(((cs_ext_sales_price + ((cs_ext_list_price - cs_ext_wholesale_cost) - cs_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=55233264.91..3275075582.64 rows=6774 width=160)
                                                                                Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                                                ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                                                ->  XN Hash  (cost=55233248.13..55233248.13 rows=6708 width=40)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55233248.13 rows=6708 width=40)
                                                                                            Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1428128 width=40)
                                                                                                  Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                        Filter: (d_year = 1999)
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                      ->  XN Hash  (cost=3275075955.31..3275075955.31 rows=6776 width=44)
                                            ->  XN Subquery Scan t_c_secyear  (cost=0.03..3275075955.31 rows=6776 width=44)
                                                  ->  XN Append  (cost=0.03..3275075887.55 rows=6776 width=160)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=3275075735.06..3275075887.47 rows=6774 width=160)
                                                              ->  XN HashAggregate  (cost=3275075735.06..3275075819.73 rows=6774 width=160)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=55233264.91..3275075582.64 rows=6774 width=160)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                                          ->  XN Hash  (cost=55233248.13..55233248.13 rows=6708 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55233248.13 rows=6708 width=40)
                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1428128 width=40)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                                  Filter: (d_year = 2000)
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                ->  XN Hash  (cost=1684819627.84..1684819627.84 rows=1002 width=44)
                                      ->  XN Subquery Scan t_w_firstyear  (cost=0.03..1684819627.84 rows=1002 width=44)
                                            ->  XN Append  (cost=0.03..1684819617.82 rows=1002 width=160)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 3"  (cost=1684819513.06..1684819617.74 rows=1000 width=160)
                                                        ->  XN HashAggregate  (cost=1684819513.06..1684819607.74 rows=1000 width=160)
                                                              Filter: (sum(((ws_ext_sales_price + ((ws_ext_list_price - ws_ext_wholesale_cost) - ws_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=55217142.55..1684819426.98 rows=3443 width=160)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                                    ->  XN Hash  (cost=55217134.06..55217134.06 rows=3395 width=40)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55217134.06 rows=3395 width=40)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=40)
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                            Filter: (d_year = 1999)
                          ->  XN Hash  (cost=1684819616.45..1684819616.45 rows=3445 width=44)
                                ->  XN Subquery Scan t_w_secyear  (cost=0.03..1684819616.45 rows=3445 width=44)
                                      ->  XN Append  (cost=0.03..1684819582.00 rows=3445 width=160)
                                            ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                  ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                        ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                              ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                    Distribute Round Robin
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          One-Time Filter: false
                                            ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                  ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                        ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                              ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                    Distribute Round Robin
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          One-Time Filter: false
                                            ->  XN Subquery Scan "*SELECT* 3"  (cost=1684819504.45..1684819581.92 rows=3443 width=160)
                                                  ->  XN HashAggregate  (cost=1684819504.45..1684819547.49 rows=3443 width=160)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=55217142.55..1684819426.98 rows=3443 width=160)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..1000.00 rows=100000 width=128)
                                                              ->  XN Hash  (cost=55217134.06..55217134.06 rows=3395 width=40)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=913.98..55217134.06 rows=3395 width=40)
                                                                          Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=40)
                                                                          ->  XN Hash  (cost=913.11..913.11 rows=345 width=8)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=345 width=8)
                                                                                      Filter: (d_year = 2000)
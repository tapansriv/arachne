XN Limit  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
  ->  XN Merge  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
        Merge Key: store.s_store_name
        ->  XN Network  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
              Send to leader
              ->  XN Sort  (cost=1000026343173.10..1000026343173.12 rows=8 width=16)
                    Sort Key: store.s_store_name
                    ->  XN HashAggregate  (cost=26343172.96..26343172.98 rows=8 width=16)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=3841139.35..26343101.69 rows=14255 width=16)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1095.95..10502759.21 rows=2982 width=12)
                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2626352 width=16)
                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                      ->  XN Hash  (cost=1095.73..1095.73 rows=87 width=4)
                                            ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=87 width=4)
                                                  Filter: ((d_year = 2001) AND (d_qoy = 1))
                                ->  XN Hash  (cost=3840043.25..3840043.25 rows=60 width=12)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=0.15..3840043.25 rows=60 width=12)
                                            Hash Cond: (substr(("outer".ca_zip)::text, 1, 2) = substr(("inner".s_zip)::text, 1, 2))
                                            ->  XN Subquery Scan a2  (cost=0.00..10.00 rows=1000 width=32)
                                                  ->  XN Hash Intersect Distinct DS_DIST_NONE  (cost=0.00..0.00 rows=1000 width=32)
                                                        Hash Cond: ("outer".ca_zip = "inner".ca_zip)
                                                        Join Filter: (("outer".ca_zip = "inner".ca_zip) OR (("inner".ca_zip IS NULL) AND ("outer".ca_zip IS NULL)))
                                                        ->  XN Network  (cost=0.00..2187.50 rows=25000 width=9)
                                                              Distribute
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.00..2187.50 rows=25000 width=9)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..1937.50 rows=25000 width=9)
                                                                          Filter: (substr((ca_zip)::text, 1, 5) = ANY ('{10103,10123,10811,11025,11255,11375,11710,11742,12251,12436,12509,12612,12693,12795,12936,13281,13310,13452,13834,15475,15602,15762,15776,16131,16414,16565,16645,16688,16772,16876,17263,17639,18001,18519,18578,18748,18948,19176,19489,19745,19888,19911,20537,20810,20947,21234,21389,21583,21740,21838,21906,22274,22449,22462,22615,22751,22771,23028,23323,24056,24398,24554,25551,25798,25945,26022,26125,26387,27483,27981,28105,28260,28440,28980,29242,29695,29837,29907,30115,30201,30829,30838,31069,31333,31418,31736,32197,32354,32451,32564,32787,33206,33298,33523,33735,33743,33794,34045,34050,34070,34211,34375,34399,34894,34927,35071,35273,35377,35434,35766,35887,36155,36313,36707,36710,36728,37000,37328,37855,38058,38351,38572,38766,38864,38927,40175,40659,40686,40695,40709,41217,41299,41717,41835,41878,41992,42220,42407,42445,43148,43437,43520,43607,43717,44260,44328,44535,44566,44811,44821,45348,45417,46001,46728,46865,46877,46933,47024,47317,47376,47427,47649,47814,47927,48006,48680,48783,48843,49528,49687,49918,50207,50292,50346,50453,51142,51410,51535,51955,52054,52183,52459,52524,52610,52731,52742,52750,52900,53221,54224,54957,55185,55220,55340,55655,56143,56231,56241,56458,56489,56613,57023,57323,57396,57517,57726,57903,58361,58495,58748,58948,59307,59492,59594,59852,60020,60615,60883,61233,61282,61373,61499,61680,61760,62502,63520,63590,63623,63631,63705,63802,63954,64031,64055,64139,64307,64544,64615,64623,64625,64634,64808,64814,65035,65097,65219,65354,65670,65746,65874,65941,66027,66036,66136,66918,67116,67802,68293,68390,68559,68656,68687,68694,68956,69238,69250,69257,69667,69915,70056,70156,70294,70451,70551,70581,70587,71271,71337,71499,71834,71913,71918,72880,72982,73018,73042,73084,73323,73469,73965,74171,74217,74228,74267,74577,74800,74909,75062,75542,75966,76070,76142,76855,77061,77068,77402,78226,78353,78422,79162,79371,79551,79887,79930,79998,80502,80803,80845,81127,81530,81876,81977,81991,82140,82528,82672,82755,83317,83346,84066,84200,84430,84909,85041,85547,86084,86206,86385,86740,86915,86942,87076,87780,87913,88251,88322,88482,88571,88716,88770,89094,89336,89411,89523,89525,89571,89651,89772,89941,90312,90459,90612,90736,90763,90873,90955,91056,91510,91964,92158,92189,92243,92728,92852,93175,93385,93695,93718,94216,94356,95086,95807,95822,96227,96471,96539,96705,96732,97030,97403,97685,97729,97743,98019,98966,98986,99405,99686,99855,99872}'::text[]))
                                                        ->  XN Hash  (cost=5632084265.23..5632084265.23 rows=1000 width=32)
                                                              ->  XN Network  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                    Distribute
                                                                    ->  XN Subquery Scan "*SELECT* 2"  (cost=5632084217.57..5632084265.23 rows=1000 width=32)
                                                                          ->  XN Subquery Scan a1  (cost=5632084217.57..5632084255.23 rows=1000 width=32)
                                                                                ->  XN HashAggregate  (cost=5632084217.57..5632084245.23 rows=1000 width=9)
                                                                                      Filter: (count(*) > 10)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1367.34..5632083975.82 rows=48349 width=9)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..500.00 rows=50000 width=13)
                                                                                            ->  XN Hash  (cost=1250.00..1250.00 rows=46934 width=4)
                                                                                                  ->  XN Seq Scan on customer  (cost=0.00..1250.00 rows=46934 width=4)
                                                                                                        Filter: ((c_preferred_cust_flag)::text = 'Y'::text)
                                            ->  XN Hash  (cost=0.12..0.12 rows=12 width=21)
                                                  ->  XN Seq Scan on store  (cost=0.00..0.12 rows=12 width=21)
XN Hash Left Join DS_BCAST_INNER  (cost=405198449.28..405320699.29 rows=100000 width=12)
  Hash Cond: ("outer".oid = "inner".oid)
  Filter: ("inner".oid IS NULL)
  ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=16)
  ->  XN Hash  (cost=405198449.28..405198449.28 rows=1 width=4)
        ->  XN Subquery Scan volt_dt_0  (cost=404995231.26..405198449.28 rows=1 width=4)
              ->  XN Unique  (cost=404995231.26..405198449.27 rows=1 width=4)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=404995231.26..405198449.27 rows=1 width=4)
                          Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                          ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                          ->  XN Hash  (cost=404995231.25..404995231.25 rows=1 width=8)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=404594315.47..404995231.25 rows=1 width=8)
                                      Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                      ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=3262 width=4)
                                            Filter: (((ca_state)::text = 'IL'::text) OR ((ca_state)::text = 'MN'::text) OR ((ca_state)::text = 'SC'::text))
                                      ->  XN Hash  (cost=404594315.46..404594315.46 rows=2 width=12)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=404272065.44..404594315.46 rows=2 width=12)
                                                  Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                  ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=16)
                                                  ->  XN Hash  (cost=404272065.44..404272065.44 rows=2 width=8)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=269832024.53..404272065.44 rows=2 width=8)
                                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                              ->  XN HashAggregate  (cost=10506128.55..10506128.55 rows=3271 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.58..10506120.38 rows=3271 width=4)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2880404 width=8)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=87 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=87 width=4)
                                                                                      Filter: ((2000 = d_year) AND (d_moy <= 5) AND (d_moy >= 3))
                                                              ->  XN Hash  (cost=259325895.91..259325895.91 rows=30 width=4)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=259325895.60..259325895.91 rows=30 width=4)
                                                                          ->  XN HashAggregate  (cost=259325895.60..259325895.60 rows=30 width=4)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=254523645.23..259325895.53 rows=30 width=4)
                                                                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                      ->  XN Seq Scan on customer c  (cost=0.00..1000.00 rows=100000 width=4)
                                                                                      ->  XN Hash  (cost=254523645.16..254523645.16 rows=30 width=8)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=20963603.97..254523645.16 rows=30 width=8)
                                                                                                  Hash Cond: ("outer".ss_customer_sk = "inner".ws_bill_customer_sk)
                                                                                                  ->  XN HashAggregate  (cost=10506128.55..10506128.55 rows=3271 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.58..10506120.38 rows=3271 width=4)
                                                                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2880404 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=87 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=87 width=4)
                                                                                                                          Filter: ((2000 = d_year) AND (d_moy <= 5) AND (d_moy >= 3))
                                                                                                  ->  XN Hash  (cost=10457473.28..10457473.28 rows=856 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.58..10457473.28 rows=856 width=4)
                                                                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on web_sales  (cost=0.00..7193.84 rows=719384 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=87 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=87 width=4)
                                                                                                                          Filter: ((2000 = d_year) AND (d_moy <= 5) AND (d_moy >= 3))

XN Hash Join DS_BCAST_INNER  (cost=1278.58..10504459.91 rows=3120 width=4)
  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
  ->  XN Seq Scan on store_sales  (cost=0.00..28804.04 rows=2747688 width=8)
        Filter: (ss_sold_date_sk IS NOT NULL)
  ->  XN Hash  (cost=1278.36..1278.36 rows=87 width=4)
        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=87 width=4)
              Filter: ((2000 = d_year) AND (d_moy <= 5) AND (d_moy >= 3))

XN Limit  (cost=1002429173231.44..1002429173231.69 rows=100 width=37)
  ->  XN Merge  (cost=1002429173231.44..1002429173232.55 rows=442 width=37)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
        ->  XN Network  (cost=1002429173231.44..1002429173232.55 rows=442 width=37)
              Send to leader
              ->  XN Sort  (cost=1002429173231.44..1002429173232.55 rows=442 width=37)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                    ->  XN HashAggregate  (cost=2429173208.70..2429173212.02 rows=442 width=37)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=2372489977.43..2429173199.86 rows=442 width=37)
                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=41)
                                ->  XN Hash  (cost=2372489976.26..2372489976.26 rows=472 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1131566243.63..2372489976.26 rows=472 width=4)
                                            Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1131565360.47..1981048930.50 rows=7017 width=8)
                                                  Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                  ->  XN Hash Left Join DS_BCAST_INNER  (cost=848804345.24..850006595.18 rows=99993 width=12)
                                                        Hash Cond: ("outer".oid = "inner".oid)
                                                        Filter: ("inner".oid IS NULL)
                                                        ->  XN Seq Scan on volt_tt_618d8b3426649  (cost=0.00..999.93 rows=99993 width=16)
                                                        ->  XN Hash  (cost=848804345.21..848804345.21 rows=10 width=4)
                                                              ->  XN Subquery Scan volt_dt_1  (cost=847161126.99..848804345.21 rows=10 width=4)
                                                                    ->  XN Unique  (cost=847161126.99..848804345.11 rows=10 width=4)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=847161126.99..848804345.09 rows=10 width=4)
                                                                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                                                                                ->  XN Hash  (cost=847161126.96..847161126.96 rows=10 width=8)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=844960211.18..847161126.96 rows=10 width=8)
                                                                                            Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                            ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=3262 width=4)
                                                                                                  Filter: (((ca_state)::text = 'IL'::text) OR ((ca_state)::text = 'MN'::text) OR ((ca_state)::text = 'SC'::text))
                                                                                            ->  XN Hash  (cost=844960211.15..844960211.15 rows=11 width=12)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=821278003.48..844960211.15 rows=11 width=12)
                                                                                                        Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                                                                                        ->  XN Seq Scan on volt_tt_618d8b3426649  (cost=0.00..999.93 rows=96503 width=16)
                                                                                                              Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                                                        ->  XN Hash  (cost=821278003.11..821278003.11 rows=148 width=8)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=520397913.27..821278003.11 rows=148 width=8)
                                                                                                                    Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                                                                                    ->  XN HashAggregate  (cost=997.56..997.56 rows=7069 width=4)
                                                                                                                          ->  XN Seq Scan on volt_tt_618d8b34396a9  (cost=0.00..798.05 rows=79805 width=4)
                                                                                                                    ->  XN Hash  (cost=520396915.33..520396915.33 rows=151 width=4)
                                                                                                                          ->  XN Subquery Scan volt_dt_2  (cost=520396913.82..520396915.33 rows=151 width=4)
                                                                                                                                ->  XN HashAggregate  (cost=520396913.82..520396913.82 rows=151 width=4)
                                                                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=496394662.08..520396913.44 rows=151 width=4)
                                                                                                                                            Hash Cond: ("outer".c_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                            ->  XN Seq Scan on volt_tt_618d8b3426649  (cost=0.00..999.93 rows=99993 width=4)
                                                                                                                                            ->  XN Hash  (cost=496394661.70..496394661.70 rows=150 width=8)
                                                                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=10474571.84..496394661.70 rows=150 width=8)
                                                                                                                                                        Hash Cond: ("outer".ss_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                                        ->  XN HashAggregate  (cost=997.56..997.56 rows=7069 width=4)
                                                                                                                                                              ->  XN Seq Scan on volt_tt_618d8b34396a9  (cost=0.00..798.05 rows=79805 width=4)
                                                                                                                                                        ->  XN Hash  (cost=10473570.05..10473570.05 rows=1693 width=4)
                                                                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1278.58..10473570.05 rows=1693 width=4)
                                                                                                                                                                    Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                                                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..14415.48 rows=1428725 width=8)
                                                                                                                                                                          Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_ship_customer_sk IS NOT NULL))
                                                                                                                                                                    ->  XN Hash  (cost=1278.36..1278.36 rows=87 width=4)
                                                                                                                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=87 width=4)
                                                                                                                                                                                Filter: ((d_year = 2000) AND (d_moy <= 5) AND (d_moy >= 3))
                                                  ->  XN Hash  (cost=997.56..997.56 rows=7069 width=4)
                                                        ->  XN HashAggregate  (cost=997.56..997.56 rows=7069 width=4)
                                                              ->  XN Seq Scan on volt_tt_618d8b34396a9  (cost=0.00..798.05 rows=79805 width=4)
                                            ->  XN Hash  (cost=875.00..875.00 rows=3262 width=4)
                                                  ->  XN Seq Scan on customer_address ca  (cost=0.00..875.00 rows=3262 width=4)
                                                        Filter: (((ca_state)::text = 'IL'::text) OR ((ca_state)::text = 'MN'::text) OR ((ca_state)::text = 'SC'::text))
XN Subquery Scan results_rollup  (cost=5000235219010.36..5000235219011.61 rows=100 width=136)
  ->  XN Limit  (cost=5000235219010.36..5000235219010.61 rows=100 width=70)
        ->  XN Merge  (cost=5000235219010.36..5000235219011.36 rows=401 width=70)
              Merge Key: qoh, i_product_name, i_brand, i_class, i_category
              ->  XN Network  (cost=5000235219010.36..5000235219011.36 rows=401 width=70)
                    Send to leader
                    ->  XN Sort  (cost=5000235219010.36..5000235219011.36 rows=401 width=70)
                          Sort Key: qoh, i_product_name, i_brand, i_class, i_category
                          ->  XN Append  (cost=1000047056071.59..4000235218993.02 rows=401 width=70)
                                ->  XN Subquery Scan "*SELECT* 1"  (cost=1000047056071.59..1000047056072.84 rows=100 width=70)
                                      ->  XN Limit  (cost=1000047056071.59..1000047056071.84 rows=100 width=70)
                                            ->  XN Sort  (cost=1000047056071.59..1000047056576.34 rows=201902 width=70)
                                                  Sort Key: avg(inventory.inv_quantity_on_hand), item.i_product_name, item.i_brand, item.i_class, item.i_category
                                                  ->  XN HashAggregate  (cost=47037775.94..47038280.69 rows=201902 width=70)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3646.68..47016238.80 rows=1722971 width=70)
                                                              Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.67..46959461.81 rows=1644323 width=8)
                                                                    Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.49..45122464.36 rows=1644323 width=12)
                                                                          Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on inventory  (cost=0.00..3993299.84 rows=399329984 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=301 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=301 width=4)
                                                                                      Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=15 width=4)
                                                                          ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=4)
                                                              ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=70)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=70)
                                ->  XN Subquery Scan "*SELECT* 2"  (cost=1000047051764.16..1000047051765.41 rows=100 width=61)
                                      ->  XN Limit  (cost=1000047051764.16..1000047051764.41 rows=100 width=61)
                                            ->  XN Sort  (cost=1000047051764.16..1000047052268.91 rows=201902 width=61)
                                                  Sort Key: avg(inventory.inv_quantity_on_hand), item.i_product_name, item.i_brand, item.i_class
                                                  ->  XN HashAggregate  (cost=47033468.51..47033973.26 rows=201902 width=61)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3646.68..47016238.80 rows=1722971 width=61)
                                                              Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.67..46959461.81 rows=1644323 width=8)
                                                                    Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.49..45122464.36 rows=1644323 width=12)
                                                                          Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on inventory  (cost=0.00..3993299.84 rows=399329984 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=301 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=301 width=4)
                                                                                      Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=15 width=4)
                                                                          ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=4)
                                                              ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=61)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=61)
                                ->  XN Subquery Scan "*SELECT* 3"  (cost=1000047047456.73..1000047047457.98 rows=100 width=50)
                                      ->  XN Limit  (cost=1000047047456.73..1000047047456.98 rows=100 width=50)
                                            ->  XN Sort  (cost=1000047047456.73..1000047047961.49 rows=201902 width=50)
                                                  Sort Key: avg(inventory.inv_quantity_on_hand), item.i_product_name, item.i_brand
                                                  ->  XN HashAggregate  (cost=47029161.08..47029665.84 rows=201902 width=50)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3646.68..47016238.80 rows=1722971 width=50)
                                                              Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.67..46959461.81 rows=1644323 width=8)
                                                                    Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.49..45122464.36 rows=1644323 width=12)
                                                                          Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on inventory  (cost=0.00..3993299.84 rows=399329984 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=301 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=301 width=4)
                                                                                      Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=15 width=4)
                                                                          ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=4)
                                                              ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=50)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=50)
                                ->  XN Subquery Scan "*SELECT* 4"  (cost=1000047043149.30..1000047043150.55 rows=100 width=30)
                                      ->  XN Limit  (cost=1000047043149.30..1000047043149.55 rows=100 width=30)
                                            ->  XN Sort  (cost=1000047043149.30..1000047043654.06 rows=201902 width=30)
                                                  Sort Key: avg(inventory.inv_quantity_on_hand), item.i_product_name
                                                  ->  XN HashAggregate  (cost=47024853.65..47025358.41 rows=201902 width=30)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3646.68..47016238.80 rows=1722971 width=30)
                                                              Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.67..46959461.81 rows=1644323 width=8)
                                                                    Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1096.49..45122464.36 rows=1644323 width=12)
                                                                          Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on inventory  (cost=0.00..3993299.84 rows=399329984 width=16)
                                                                          ->  XN Hash  (cost=1095.73..1095.73 rows=301 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=301 width=4)
                                                                                      Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                    ->  XN Hash  (cost=0.15..0.15 rows=15 width=4)
                                                                          ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=4)
                                                              ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=30)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=30)
                                ->  XN Network  (cost=47020546.23..47020546.24 rows=1 width=4)
                                      Distribute Round Robin
                                      ->  XN Subquery Scan "*SELECT* 5"  (cost=47020546.23..47020546.24 rows=1 width=4)
                                            ->  XN Aggregate  (cost=47020546.23..47020546.23 rows=1 width=4)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=3646.68..47016238.80 rows=1722971 width=4)
                                                        Hash Cond: ("outer".inv_item_sk = "inner".i_item_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1096.67..46959461.81 rows=1644323 width=8)
                                                              Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.49..45122464.36 rows=1644323 width=12)
                                                                    Hash Cond: ("outer".inv_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on inventory  (cost=0.00..3993299.84 rows=399329984 width=16)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=301 width=4)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=301 width=4)
                                                                                Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                              ->  XN Hash  (cost=0.15..0.15 rows=15 width=4)
                                                                    ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=4)
                                                        ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=4)
                                                              ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=4)
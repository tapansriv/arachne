XN Nested Loop DS_BCAST_INNER  (cost=3525211915.80..3526331915.95 rows=1 width=64)
  ->  XN Nested Loop DS_BCAST_INNER  (cost=3084560426.32..3085520426.45 rows=1 width=56)
        ->  XN Nested Loop DS_BCAST_INNER  (cost=2643908936.85..2644708936.96 rows=1 width=48)
              ->  XN Nested Loop DS_BCAST_INNER  (cost=2203257447.38..2203897447.47 rows=1 width=40)
                    ->  XN Nested Loop DS_BCAST_INNER  (cost=1762605957.90..1763085957.97 rows=1 width=32)
                          ->  XN Nested Loop DS_BCAST_INNER  (cost=1321954468.42..1322274468.47 rows=1 width=24)
                                ->  XN Nested Loop DS_BCAST_INNER  (cost=881302978.95..881462978.98 rows=1 width=16)
                                      ->  XN Subquery Scan s4  (cost=440651489.47..440651489.48 rows=1 width=8)
                                            ->  XN Aggregate  (cost=440651489.47..440651489.47 rows=1 width=0)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1490.06..440651102.32 rows=154860 width=0)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1305.66..229794883.18 rows=643829 width=4)
                                                              Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=5.17..13059976.54 rows=32318571 width=8)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250945234 width=12)
                                                                          Filter: ((ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=5.03..5.03 rows=56 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..5.03 rows=56 width=4)
                                                                                Filter: ((s_store_name)::text = 'ese'::text)
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=1800 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1800 width=4)
                                                                          Filter: ((t_hour = 10) AND (t_minute < 30))
                                                        ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                                    Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
                                      ->  XN Subquery Scan s8  (cost=440651489.47..440651489.48 rows=1 width=8)
                                            ->  XN Aggregate  (cost=440651489.47..440651489.47 rows=1 width=0)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1490.06..440651102.32 rows=154860 width=0)
                                                        Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1305.66..229794883.18 rows=643829 width=4)
                                                              Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=5.17..13059976.54 rows=32318571 width=8)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250945234 width=12)
                                                                          Filter: ((ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=5.03..5.03 rows=56 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..5.03 rows=56 width=4)
                                                                                Filter: ((s_store_name)::text = 'ese'::text)
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=1800 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1800 width=4)
                                                                          Filter: ((t_hour = 12) AND (t_minute < 30))
                                                        ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                                              ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                                    Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
                                ->  XN Subquery Scan s3  (cost=440651489.47..440651489.48 rows=1 width=8)
                                      ->  XN Aggregate  (cost=440651489.47..440651489.47 rows=1 width=0)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1490.06..440651102.32 rows=154860 width=0)
                                                  Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1305.66..229794883.18 rows=643829 width=4)
                                                        Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=5.17..13059976.54 rows=32318571 width=8)
                                                              Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250945234 width=12)
                                                                    Filter: ((ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=5.03..5.03 rows=56 width=4)
                                                                    ->  XN Seq Scan on store  (cost=0.00..5.03 rows=56 width=4)
                                                                          Filter: ((s_store_name)::text = 'ese'::text)
                                                        ->  XN Hash  (cost=1296.00..1296.00 rows=1800 width=4)
                                                              ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1800 width=4)
                                                                    Filter: ((t_hour = 9) AND (t_minute >= 30))
                                                  ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                                        ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                              Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
                          ->  XN Subquery Scan s7  (cost=440651489.47..440651489.48 rows=1 width=8)
                                ->  XN Aggregate  (cost=440651489.47..440651489.47 rows=1 width=0)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1490.06..440651102.32 rows=154860 width=0)
                                            Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=1305.66..229794883.18 rows=643829 width=4)
                                                  Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=5.17..13059976.54 rows=32318571 width=8)
                                                        Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250945234 width=12)
                                                              Filter: ((ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=5.03..5.03 rows=56 width=4)
                                                              ->  XN Seq Scan on store  (cost=0.00..5.03 rows=56 width=4)
                                                                    Filter: ((s_store_name)::text = 'ese'::text)
                                                  ->  XN Hash  (cost=1296.00..1296.00 rows=1800 width=4)
                                                        ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1800 width=4)
                                                              Filter: ((t_hour = 11) AND (t_minute >= 30))
                                            ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                                  ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                        Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
                    ->  XN Subquery Scan s2  (cost=440651489.47..440651489.48 rows=1 width=8)
                          ->  XN Aggregate  (cost=440651489.47..440651489.47 rows=1 width=0)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1490.06..440651102.32 rows=154860 width=0)
                                      Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=1305.66..229794883.18 rows=643829 width=4)
                                            Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=5.17..13059976.54 rows=32318571 width=8)
                                                  Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                  ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250945234 width=12)
                                                        Filter: ((ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=5.03..5.03 rows=56 width=4)
                                                        ->  XN Seq Scan on store  (cost=0.00..5.03 rows=56 width=4)
                                                              Filter: ((s_store_name)::text = 'ese'::text)
                                            ->  XN Hash  (cost=1296.00..1296.00 rows=1800 width=4)
                                                  ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1800 width=4)
                                                        Filter: ((t_hour = 9) AND (t_minute < 30))
                                      ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                            ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                                  Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
              ->  XN Subquery Scan s6  (cost=440651489.47..440651489.48 rows=1 width=8)
                    ->  XN Aggregate  (cost=440651489.47..440651489.47 rows=1 width=0)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1490.06..440651102.32 rows=154860 width=0)
                                Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1305.66..229794883.18 rows=643829 width=4)
                                      Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=5.17..13059976.54 rows=32318571 width=8)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250945234 width=12)
                                                  Filter: ((ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                            ->  XN Hash  (cost=5.03..5.03 rows=56 width=4)
                                                  ->  XN Seq Scan on store  (cost=0.00..5.03 rows=56 width=4)
                                                        Filter: ((s_store_name)::text = 'ese'::text)
                                      ->  XN Hash  (cost=1296.00..1296.00 rows=1800 width=4)
                                            ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1800 width=4)
                                                  Filter: ((t_hour = 11) AND (t_minute < 30))
                                ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                      ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                            Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
        ->  XN Subquery Scan s1  (cost=440651489.47..440651489.48 rows=1 width=8)
              ->  XN Aggregate  (cost=440651489.47..440651489.47 rows=1 width=0)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1490.06..440651102.32 rows=154860 width=0)
                          Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1305.66..229794883.18 rows=643829 width=4)
                                Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=5.17..13059976.54 rows=32318571 width=8)
                                      Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                      ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250945234 width=12)
                                            Filter: ((ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                      ->  XN Hash  (cost=5.03..5.03 rows=56 width=4)
                                            ->  XN Seq Scan on store  (cost=0.00..5.03 rows=56 width=4)
                                                  Filter: ((s_store_name)::text = 'ese'::text)
                                ->  XN Hash  (cost=1296.00..1296.00 rows=1800 width=4)
                                      ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1800 width=4)
                                            Filter: ((t_hour = 8) AND (t_minute >= 30))
                          ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                                ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                      Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
  ->  XN Subquery Scan s5  (cost=440651489.47..440651489.48 rows=1 width=8)
        ->  XN Aggregate  (cost=440651489.47..440651489.47 rows=1 width=0)
              ->  XN Hash Join DS_BCAST_INNER  (cost=1490.06..440651102.32 rows=154860 width=0)
                    Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                    ->  XN Hash Join DS_BCAST_INNER  (cost=1305.66..229794883.18 rows=643829 width=4)
                          Hash Cond: ("outer".ss_sold_time_sk = "inner".t_time_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=5.17..13059976.54 rows=32318571 width=8)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250945234 width=12)
                                      Filter: ((ss_store_sk IS NOT NULL) AND (ss_sold_time_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                ->  XN Hash  (cost=5.03..5.03 rows=56 width=4)
                                      ->  XN Seq Scan on store  (cost=0.00..5.03 rows=56 width=4)
                                            Filter: ((s_store_name)::text = 'ese'::text)
                          ->  XN Hash  (cost=1296.00..1296.00 rows=1800 width=4)
                                ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=1800 width=4)
                                      Filter: ((t_hour = 10) AND (t_minute >= 30))
                    ->  XN Hash  (cost=180.00..180.00 rows=1757 width=4)
                          ->  XN Seq Scan on household_demographics  (cost=0.00..180.00 rows=1757 width=4)
                                Filter: (((hd_dep_count = 2) AND (hd_vehicle_count <= 4)) OR ((hd_dep_count = 4) AND (hd_vehicle_count <= 6)) OR ((hd_dep_count = 0) AND (hd_vehicle_count <= 2)))
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
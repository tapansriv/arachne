XN HashAggregate  (cost=20468522633.85..20468592611.80 rows=1999370 width=27)
  ->  XN Hash Join DS_BCAST_INNER  (cost=913.11..20462643799.74 rows=261281516 width=27)
        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
        ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=274408098 width=16)
              Filter: (ss_sold_date_sk IS NOT NULL)
        ->  XN Hash  (cost=730.49..730.49 rows=73049 width=19)
              ->  XN Seq Scan on date_dim  (cost=0.00..730.49 rows=73049 width=19)

XN Limit  (cost=1000176649213.86..1000176649214.02 rows=66 width=143)
  ->  XN Merge  (cost=1000176649213.86..1000176649214.02 rows=66 width=143)
        Merge Key: store.s_store_name, store.s_store_id, volt_tt_618e630c63cd5.d_week_seq
        ->  XN Network  (cost=1000176649213.86..1000176649214.02 rows=66 width=143)
              Send to leader
              ->  XN Sort  (cost=1000176649213.86..1000176649214.02 rows=66 width=143)
                    Sort Key: store.s_store_name, store.s_store_id, volt_tt_618e630c63cd5.d_week_seq
                    ->  XN Hash Join DS_BCAST_INNER  (cost=97607358.36..176649211.86 rows=66 width=143)
                          Hash Cond: (("outer".d_week_seq = "inner".d_week_seq) AND ("outer".ss_store_sk = "inner".s_store_sk))
                          ->  XN Seq Scan on volt_tt_618e630c63cd5  (cost=0.00..529.24 rows=52924 width=64)
                          ->  XN Hash  (cost=97607357.98..97607357.98 rows=76 width=95)
                                ->  XN Hash Join DS_DIST_NONE  (cost=97607348.15..97607357.98 rows=76 width=95)
                                      Hash Cond: (("outer".s_store_id)::text = ("inner".s_store_id)::text)
                                      ->  XN Seq Scan on store  (cost=0.00..4.02 rows=402 width=31)
                                      ->  XN Hash  (cost=97607348.05..97607348.05 rows=39 width=84)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=67207338.62..97607348.05 rows=39 width=84)
                                                  Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                                  ->  XN Seq Scan on store volt_dt_1  (cost=0.00..4.02 rows=402 width=24)
                                                  ->  XN Hash  (cost=67207338.52..67207338.52 rows=40 width=68)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=2192.87..67207338.52 rows=40 width=68)
                                                              Hash Cond: (("outer".d_week_seq - 52) = "inner".d_week_seq)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1096.43..33606006.38 rows=1448 width=64)
                                                                    Hash Cond: ("outer".d_week_seq = "inner".d_week_seq)
                                                                    ->  XN Seq Scan on volt_tt_618e630c63cd5 volt_dt_2  (cost=0.00..529.24 rows=52924 width=64)
                                                                    ->  XN Hash  (cost=1095.73..1095.73 rows=280 width=4)
                                                                          ->  XN Seq Scan on date_dim volt_dt_0  (cost=0.00..1095.73 rows=280 width=4)
                                                                                Filter: ((d_month_seq >= 1224) AND (d_month_seq <= 1235))
                                                              ->  XN Hash  (cost=1095.73..1095.73 rows=280 width=4)
                                                                    ->  XN Seq Scan on date_dim d  (cost=0.00..1095.73 rows=280 width=4)
                                                                          Filter: ((d_month_seq >= 1212) AND (d_month_seq <= 1223))
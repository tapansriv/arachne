XN Limit  (cost=2044577922218.10..2044577922218.35 rows=100 width=80)
  ->  XN Merge  (cost=2044577922218.10..2044577922220.63 rows=1011 width=80)
        Merge Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
        ->  XN Network  (cost=2044577922218.10..2044577922220.63 rows=1011 width=80)
              Send to leader
              ->  XN Sort  (cost=2044577922218.10..2044577922220.63 rows=1011 width=80)
                    Sort Key: lochierarchy, CASE WHEN (lochierarchy = 0) THEN i_category ELSE NULL::character varying END, pg_catalog.rank()
                    ->  XN Window  (cost=1044577922142.37..1044577922167.64 rows=1011 width=80)
                          Partition: lochierarchy, CASE WHEN (g_class = 0) THEN i_category ELSE NULL::character varying END
                          Order: total_sum
                          ->  XN Sort  (cost=1044577922142.37..1044577922144.90 rows=1011 width=80)
                                Sort Key: lochierarchy, CASE WHEN (g_class = 0) THEN i_category ELSE NULL::character varying END, total_sum
                                ->  XN Network  (cost=14859306895.44..44577922091.91 rows=1011 width=80)
                                      Distribute
                                      ->  XN Subquery Scan results_rollup  (cost=14859306895.44..44577922091.91 rows=1011 width=80)
                                            ->  XN Unique  (cost=14859306895.44..44577922081.80 rows=1011 width=28)
                                                  ->  XN Append  (cost=14859306895.44..44577922066.64 rows=1011 width=28)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=14859306895.44..14859306907.94 rows=1000 width=28)
                                                              ->  XN HashAggregate  (cost=14859306895.44..14859306897.94 rows=1000 width=28)
                                                                    ->  XN Hash Join DS_DIST_INNER  (cost=37744829.77..14859304565.88 rows=310609 width=28)
                                                                          Inner Dist Key: web_sales.ws_item_sk
                                                                          Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                          ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=24)
                                                                          ->  XN Hash  (cost=37744088.70..37744088.70 rows=296431 width=12)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.49..37744088.70 rows=296431 width=12)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=16)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=301 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=301 width=4)
                                                                                                  Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=14859307967.54..14859307967.66 rows=10 width=17)
                                                              ->  XN HashAggregate  (cost=14859307967.54..14859307967.56 rows=10 width=17)
                                                                    ->  XN Hash Join DS_DIST_OUTER  (cost=3646.49..14859306414.50 rows=310609 width=17)
                                                                          Outer Dist Key: "outer".ws_item_sk
                                                                          Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1096.49..37744088.70 rows=296431 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=16)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=301 width=4)
                                                                                      ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=301 width=4)
                                                                                            Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                          ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=13)
                                                                                ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=13)
                                                        ->  XN Network  (cost=14859307191.02..14859307191.03 rows=1 width=8)
                                                              Distribute Round Robin
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=14859307191.02..14859307191.03 rows=1 width=8)
                                                                    ->  XN Aggregate  (cost=14859307191.02..14859307191.02 rows=1 width=8)
                                                                          ->  XN Hash Join DS_DIST_OUTER  (cost=3646.49..14859306414.50 rows=310609 width=8)
                                                                                Outer Dist Key: "outer".ws_item_sk
                                                                                Hash Cond: ("outer".ws_item_sk = "inner".i_item_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1096.49..37744088.70 rows=296431 width=12)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=16)
                                                                                      ->  XN Hash  (cost=1095.73..1095.73 rows=301 width=4)
                                                                                            ->  XN Seq Scan on date_dim d1  (cost=0.00..1095.73 rows=301 width=4)
                                                                                                  Filter: ((d_month_seq >= 1200) AND (d_month_seq <= 1211))
                                                                                ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=4)
                                                                                      ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=4)
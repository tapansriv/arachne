XN Subquery Scan foo  (cost=3010346700445.16..3010346700446.41 rows=100 width=100)
  ->  XN Limit  (cost=3010346700445.16..3010346700445.41 rows=100 width=54)
        ->  XN Merge  (cost=3010346700445.16..3010346700445.66 rows=201 width=54)
              Merge Key: i_item_id, s_state
              ->  XN Network  (cost=3010346700445.16..3010346700445.66 rows=201 width=54)
                    Send to leader
                    ->  XN Sort  (cost=3010346700445.16..3010346700445.66 rows=201 width=54)
                          Sort Key: i_item_id, s_state
                          ->  XN Append  (cost=1003451353518.12..2010346700437.47 rows=201 width=54)
                                ->  XN Subquery Scan "*SELECT* 1"  (cost=1003451353518.12..1003451353519.37 rows=100 width=54)
                                      ->  XN Limit  (cost=1003451353518.12..1003451353518.37 rows=100 width=54)
                                            ->  XN Sort  (cost=1003451353518.12..1003451353522.32 rows=1680 width=54)
                                                  Sort Key: item.i_item_id, store.s_state
                                                  ->  XN HashAggregate  (cost=3451353411.32..3451353428.12 rows=1680 width=54)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3451348779.31..3451353386.12 rows=1680 width=54)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=24)
                                                              ->  XN Hash  (cost=3451348775.30..3451348775.30 rows=1604 width=38)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34603.84..3451348775.30 rows=1604 width=38)
                                                                          Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=34598.70..3442148564.68 rows=15155 width=36)
                                                                                Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..46820861.92 rows=1109318 width=40)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250310763 width=44)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=340 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=4)
                                                                                                  Filter: (d_year = 2002)
                                                                                ->  XN Hash  (cost=33614.00..33614.00 rows=28294 width=4)
                                                                                      ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=28294 width=4)
                                                                                            Filter: (((cd_education_status)::text = 'College'::text) AND ((cd_marital_status)::text = 'S'::text) AND ((cd_gender)::text = 'M'::text))
                                                                          ->  XN Hash  (cost=5.03..5.03 rows=46 width=10)
                                                                                ->  XN Seq Scan on store  (cost=0.00..5.03 rows=46 width=10)
                                                                                      Filter: ((s_state)::text = 'TN'::text)
                                ->  XN Subquery Scan "*SELECT* 2"  (cost=1003447673513.92..1003447673515.17 rows=100 width=48)
                                      ->  XN Limit  (cost=1003447673513.92..1003447673514.17 rows=100 width=48)
                                            ->  XN Sort  (cost=1003447673513.92..1003447673518.12 rows=1680 width=48)
                                                  Sort Key: item.i_item_id
                                                  ->  XN HashAggregate  (cost=3447673407.12..3447673423.92 rows=1680 width=48)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=3447668779.31..3447673386.12 rows=1680 width=48)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=24)
                                                              ->  XN Hash  (cost=3447668775.30..3447668775.30 rows=1604 width=32)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34603.84..3447668775.30 rows=1604 width=32)
                                                                          Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=34598.70..3442148564.68 rows=15155 width=36)
                                                                                Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..46820861.92 rows=1109318 width=40)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250310763 width=44)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=340 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=4)
                                                                                                  Filter: (d_year = 2002)
                                                                                ->  XN Hash  (cost=33614.00..33614.00 rows=28294 width=4)
                                                                                      ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=28294 width=4)
                                                                                            Filter: (((cd_education_status)::text = 'College'::text) AND ((cd_marital_status)::text = 'S'::text) AND ((cd_gender)::text = 'M'::text))
                                                                          ->  XN Hash  (cost=5.03..5.03 rows=46 width=4)
                                                                                ->  XN Seq Scan on store  (cost=0.00..5.03 rows=46 width=4)
                                                                                      Filter: ((s_state)::text = 'TN'::text)
                                ->  XN Network  (cost=3447673402.93..3447673402.94 rows=1 width=28)
                                      Distribute Round Robin
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=3447673402.93..3447673402.94 rows=1 width=28)
                                            ->  XN Aggregate  (cost=3447673402.93..3447673402.93 rows=1 width=28)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=3447668779.31..3447673386.12 rows=1680 width=28)
                                                        Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                        ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=4)
                                                        ->  XN Hash  (cost=3447668775.30..3447668775.30 rows=1604 width=32)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=34603.84..3447668775.30 rows=1604 width=32)
                                                                    Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34598.70..3442148564.68 rows=15155 width=36)
                                                                          Hash Cond: ("outer".ss_cdemo_sk = "inner".cd_demo_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..46820861.92 rows=1109318 width=40)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250310763 width=44)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=340 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=4)
                                                                                            Filter: (d_year = 2002)
                                                                          ->  XN Hash  (cost=33614.00..33614.00 rows=28294 width=4)
                                                                                ->  XN Seq Scan on customer_demographics  (cost=0.00..33614.00 rows=28294 width=4)
                                                                                      Filter: (((cd_education_status)::text = 'College'::text) AND ((cd_marital_status)::text = 'S'::text) AND ((cd_gender)::text = 'M'::text))
                                                                    ->  XN Hash  (cost=5.03..5.03 rows=46 width=4)
                                                                          ->  XN Seq Scan on store  (cost=0.00..5.03 rows=46 width=4)
                                                                                Filter: ((s_state)::text = 'TN'::text)
XN Limit  (cost=1006975090022.47..1006975090022.54 rows=28 width=392)
  ->  XN Merge  (cost=1006975090022.47..1006975090022.54 rows=28 width=392)
        Merge Key: w_warehouse_name
        ->  XN Network  (cost=1006975090022.47..1006975090022.54 rows=28 width=392)
              Send to leader
              ->  XN Sort  (cost=1006975090022.47..1006975090022.54 rows=28 width=392)
                    Sort Key: w_warehouse_name
                    ->  XN HashAggregate  (cost=6975090017.60..6975090021.80 rows=28 width=392)
                          ->  XN Subquery Scan x  (cost=3486752140.41..6975090014.52 rows=28 width=392)
                                ->  XN Append  (cost=3486752140.41..6975090014.24 rows=28 width=103)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=3486752140.41..3486752143.91 rows=14 width=103)
                                            ->  XN HashAggregate  (cost=3486752140.41..3486752143.77 rows=14 width=103)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=2281.36..3486751288.37 rows=10994 width=103)
                                                        Hash Cond: ("outer".ws_warehouse_sk = "inner".w_warehouse_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=2281.18..3473551040.79 rows=10996 width=32)
                                                              Hash Cond: ("outer".ws_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=914.27..69868810.77 rows=33473 width=36)
                                                                    Hash Cond: ("outer".ws_ship_mode_sk = "inner".sm_ship_mode_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..69624290.25 rows=334839 width=40)
                                                                          Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=36)
                                                                          ->  XN Hash  (cost=913.11..913.11 rows=340 width=12)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=12)
                                                                                      Filter: (d_year = 2001)
                                                                    ->  XN Hash  (cost=0.30..0.30 rows=2 width=4)
                                                                          ->  XN Seq Scan on ship_mode  (cost=0.00..0.30 rows=2 width=4)
                                                                                Filter: (((sm_carrier)::text = 'BARIAN'::text) OR ((sm_carrier)::text = 'DHL'::text))
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=28364 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=28364 width=4)
                                                                          Filter: ((t_time >= 30838) AND (t_time <= 59638))
                                                        ->  XN Hash  (cost=0.15..0.15 rows=15 width=79)
                                                              ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=79)
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=3488337866.83..3488337870.33 rows=14 width=103)
                                            ->  XN HashAggregate  (cost=3488337866.83..3488337870.19 rows=14 width=103)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=2281.36..3488336242.12 rows=20964 width=103)
                                                        Hash Cond: ("outer".cs_warehouse_sk = "inner".w_warehouse_sk)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=2281.18..3475135768.62 rows=21093 width=32)
                                                              Hash Cond: ("outer".cs_sold_time_sk = "inner".t_time_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=914.27..71452738.42 rows=64549 width=36)
                                                                    Hash Cond: ("outer".cs_ship_mode_sk = "inner".sm_ship_mode_sk)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..71203971.99 rows=649651 width=40)
                                                                          Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=140527264 width=36)
                                                                                Filter: ((cs_ship_mode_sk IS NOT NULL) AND (cs_sold_date_sk IS NOT NULL) AND (cs_warehouse_sk IS NOT NULL) AND (cs_sold_time_sk IS NOT NULL))
                                                                          ->  XN Hash  (cost=913.11..913.11 rows=340 width=12)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=12)
                                                                                      Filter: (d_year = 2001)
                                                                    ->  XN Hash  (cost=0.30..0.30 rows=2 width=4)
                                                                          ->  XN Seq Scan on ship_mode  (cost=0.00..0.30 rows=2 width=4)
                                                                                Filter: (((sm_carrier)::text = 'BARIAN'::text) OR ((sm_carrier)::text = 'DHL'::text))
                                                              ->  XN Hash  (cost=1296.00..1296.00 rows=28364 width=4)
                                                                    ->  XN Seq Scan on time_dim  (cost=0.00..1296.00 rows=28364 width=4)
                                                                          Filter: ((t_time >= 30838) AND (t_time <= 59638))
                                                        ->  XN Hash  (cost=0.15..0.15 rows=15 width=79)
                                                              ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=79)
XN HashAggregate  (cost=1783378105.84..1783378174.03 rows=27276 width=18)
  ->  XN Hash Join DS_DIST_INNER  (cost=40955128.51..1783377901.27 rows=27276 width=18)
        Inner Dist Key: web_returns.wr_returning_addr_sk
        Hash Cond: ("outer".ca_address_sk = "inner".wr_returning_addr_sk)
        ->  XN Seq Scan on customer_address  (cost=0.00..10000.00 rows=1000000 width=10)
        ->  XN Hash  (cost=40955055.91..40955055.91 rows=29040 width=16)
              ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..40955055.91 rows=29040 width=16)
                    Hash Cond: ("outer".wr_returned_date_sk = "inner".d_date_sk)
                    ->  XN Seq Scan on web_returns  (cost=0.00..71976.70 rows=6549988 width=20)
                          Filter: ((wr_returned_date_sk IS NOT NULL) AND (wr_returning_addr_sk IS NOT NULL))
                    ->  XN Hash  (cost=913.11..913.11 rows=340 width=4)
                          ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=4)
                                Filter: (2002 = d_year)

XN Limit  (cost=1066068822716.93..1066068822717.18 rows=100 width=155)
  ->  XN Merge  (cost=1066068822716.93..1066068822765.72 rows=19517 width=155)
        Merge Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date_sk, volt_tt_618e62c3c0a51.col2
        ->  XN Network  (cost=1066068822716.93..1066068822765.72 rows=19517 width=155)
              Send to leader
              ->  XN Sort  (cost=1066068822716.93..1066068822765.72 rows=19517 width=155)
                    Sort Key: customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date_sk, volt_tt_618e62c3c0a51.col2
                    ->  XN Hash Join DS_DIST_BOTH  (cost=1299184003.61..66068821326.11 rows=19517 width=155)
                          Outer Dist Key: "outer".c_customer_sk
                          Inner Dist Key: volt_tt_618e62c3c0a51.wr_returning_customer_sk
                          Hash Cond: ("outer".c_customer_sk = "inner".wr_returning_customer_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=12620.13..5766298565.61 rows=94548 width=151)
                                Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=155)
                                ->  XN Hash  (cost=12500.00..12500.00 rows=48052 width=4)
                                      ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=48052 width=4)
                                            Filter: ((ca_state)::text = 'GA'::text)
                          ->  XN Hash  (cost=1299170324.27..1299170324.27 rows=423683 width=12)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=1242875943.25..1299170324.27 rows=423683 width=12)
                                      Hash Cond: (("outer".ca_state)::text = ("inner".ca_state)::text)
                                      Join Filter: ("inner".col0 < "outer".col2)
                                      ->  XN Seq Scan on volt_tt_618e62c3c0a51  (cost=0.00..13105.55 rows=1310555 width=18)
                                      ->  XN Hash  (cost=1242875942.75..1242875942.75 rows=200 width=18)
                                            ->  XN Subquery Scan volt_dt_0  (cost=1242875939.75..1242875942.75 rows=200 width=18)
                                                  ->  XN HashAggregate  (cost=1242875939.75..1242875940.75 rows=200 width=18)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1202578381.10..1242869584.51 rows=1271047 width=18)
                                                              Hash Cond: (("outer".ca_state)::text = ("inner".ca_state)::text)
                                                              ->  XN Seq Scan on volt_tt_618e62c3c0a51  (cost=0.00..13105.55 rows=1310555 width=14)
                                                              ->  XN Hash  (cost=1202578380.60..1202578380.60 rows=200 width=10)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=1202578037.65..1202578380.60 rows=200 width=10)
                                                                          ->  XN Unique  (cost=1202578037.65..1202578378.60 rows=200 width=10)
                                                                                ->  XN Subquery Scan ctr1  (cost=1202578037.65..1202578310.41 rows=27276 width=10)
                                                                                      ->  XN HashAggregate  (cost=1202578037.65..1202578037.65 rows=27276 width=10)
                                                                                            ->  XN Hash Join DS_DIST_INNER  (cost=40955128.51..1202577901.27 rows=27276 width=10)
                                                                                                  Inner Dist Key: web_returns.wr_returning_addr_sk
                                                                                                  Hash Cond: ("outer".ca_address_sk = "inner".wr_returning_addr_sk)
                                                                                                  ->  XN Seq Scan on customer_address  (cost=0.00..10000.00 rows=1000000 width=10)
                                                                                                  ->  XN Hash  (cost=40955055.91..40955055.91 rows=29040 width=8)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..40955055.91 rows=29040 width=8)
                                                                                                              Hash Cond: ("outer".wr_returned_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on web_returns  (cost=0.00..71976.70 rows=6549988 width=12)
                                                                                                                    Filter: ((wr_returned_date_sk IS NOT NULL) AND (wr_returning_addr_sk IS NOT NULL))
                                                                                                              ->  XN Hash  (cost=913.11..913.11 rows=340 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=4)
                                                                                                                          Filter: (d_year = 2002)
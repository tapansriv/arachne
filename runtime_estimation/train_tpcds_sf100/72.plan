XN Limit  (cost=1020825531160.20..1020825531160.45 rows=100 width=132)
  ->  XN Merge  (cost=1020825531160.20..1020825534761.29 rows=1440438 width=132)
        Merge Key: count(*), item.i_item_desc, warehouse.w_warehouse_name, d1.d_week_seq
        ->  XN Network  (cost=1020825531160.20..1020825534761.29 rows=1440438 width=132)
              Send to leader
              ->  XN Sort  (cost=1020825531160.20..1020825534761.29 rows=1440438 width=132)
                    Sort Key: count(*), item.i_item_desc, warehouse.w_warehouse_name, d1.d_week_seq
                    ->  XN HashAggregate  (cost=20825373013.96..20825383817.25 rows=1440438 width=132)
                          ->  XN Hash Right Join DS_DIST_NONE  (cost=20824271079.30..20825351407.39 rows=1440438 width=132)
                                Hash Cond: (("outer".cr_order_number = "inner".cs_order_number) AND ("outer".cr_item_sk = "inner".cs_item_sk))
                                ->  XN Seq Scan on catalog_returns  (cost=0.00..144043.74 rows=14404374 width=8)
                                ->  XN Hash  (cost=20824267204.56..20824267204.56 rows=774949 width=140)
                                      ->  XN Hash Left Join DS_BCAST_INNER  (cost=20685448061.90..20824267204.56 rows=774949 width=140)
                                            Hash Cond: ("outer".cs_promo_sk = "inner".p_promo_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=20685448049.40..20704242029.68 rows=773906 width=140)
                                                  Hash Cond: ("outer".inv_warehouse_sk = "inner".w_warehouse_sk)
                                                  ->  XN Hash Join DS_DIST_NONE  (cost=20685448049.22..20699424616.63 rows=773905 width=124)
                                                        Hash Cond: (("outer".inv_item_sk = "inner".cs_item_sk) AND ("outer".inv_date_sk = "inner".d_date_sk))
                                                        Join Filter: ("inner".cs_quantity > "outer".inv_quantity_on_hand)
                                                        ->  XN Seq Scan on inventory  (cost=0.00..3993299.84 rows=399329984 width=16)
                                                        ->  XN Hash  (cost=20685447793.00..20685447793.00 rows=51243 width=132)
                                                              ->  XN Hash Join DS_DIST_INNER  (cost=16772882690.53..20685447793.00 rows=51243 width=132)
                                                                    Inner Dist Key: catalog_sales.cs_item_sk
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=108)
                                                                    ->  XN Hash  (cost=16772882568.26..16772882568.26 rows=48907 width=24)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=14853935975.52..16772882568.26 rows=48907 width=24)
                                                                                Hash Cond: ("outer".d_week_seq = "inner".d_week_seq)
                                                                                ->  XN Seq Scan on date_dim d2  (cost=0.00..730.49 rows=73049 width=8)
                                                                                ->  XN Hash  (cost=14853935958.39..14853935958.39 rows=6853 width=20)
                                                                                      ->  XN Hash Join DS_DIST_INNER  (cost=11903187257.01..14853935958.39 rows=6853 width=20)
                                                                                            Inner Dist Key: catalog_sales.cs_bill_cdemo_sk
                                                                                            Hash Cond: ("outer".cd_demo_sk = "inner".cs_bill_cdemo_sk)
                                                                                            ->  XN Seq Scan on customer_demographics  (cost=0.00..24010.00 rows=369828 width=4)
                                                                                                  Filter: ((cd_marital_status)::text = 'D'::text)
                                                                                            ->  XN Hash  (cost=11903187164.80..11903187164.80 rows=36884 width=24)
                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=1920.08..11903187164.80 rows=36884 width=24)
                                                                                                        Hash Cond: ("outer".cs_ship_date_sk = "inner".d_date_sk)
                                                                                                        Join Filter: ("inner".d_date > date_add('day'::text, 5::bigint, ("outer".d_date)::timestamp without time zone))
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1006.97..215342924.32 rows=111275 width=32)
                                                                                                              Hash Cond: ("outer".cs_bill_hdemo_sk = "inner".hd_demo_sk)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..71207075.68 rows=650795 width=36)
                                                                                                                    Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=140774644 width=32)
                                                                                                                          Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_hdemo_sk IS NOT NULL) AND (cs_bill_cdemo_sk IS NOT NULL) AND (cs_ship_date_sk IS NOT NULL))
                                                                                                                    ->  XN Hash  (cost=913.11..913.11 rows=340 width=12)
                                                                                                                          ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=340 width=12)
                                                                                                                                Filter: (d_year = 1999)
                                                                                                              ->  XN Hash  (cost=90.00..90.00 rows=1201 width=4)
                                                                                                                    ->  XN Seq Scan on household_demographics  (cost=0.00..90.00 rows=1201 width=4)
                                                                                                                          Filter: ((hd_buy_potential)::text = '>10000'::text)
                                                                                                        ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                              ->  XN Seq Scan on date_dim d3  (cost=0.00..730.49 rows=73049 width=8)
                                                  ->  XN Hash  (cost=0.15..0.15 rows=15 width=24)
                                                        ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=24)
                                            ->  XN Hash  (cost=10.00..10.00 rows=1000 width=4)
                                                  ->  XN Seq Scan on promotion  (cost=0.00..10.00 rows=1000 width=4)
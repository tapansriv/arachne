XN Seq Scan on item  (cost=0.00..2550.00 rows=20268 width=4)
  Filter: ((i_category)::text = 'Electronics'::text)

XN Limit  (cost=1000142058748.46..1000142058748.47 rows=3 width=12)
  ->  XN Merge  (cost=1000142058748.46..1000142058748.47 rows=3 width=12)
        Merge Key: sum(total_sales)
        ->  XN Network  (cost=1000142058748.46..1000142058748.47 rows=3 width=12)
              Send to leader
              ->  XN Sort  (cost=1000142058748.46..1000142058748.47 rows=3 width=12)
                    Sort Key: sum(total_sales)
                    ->  XN HashAggregate  (cost=142058748.43..142058748.43 rows=3 width=12)
                          ->  XN Subquery Scan tmp1  (cost=49892947.68..142058748.41 rows=3 width=12)
                                ->  XN Append  (cost=49892947.68..142058748.38 rows=3 width=12)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=49892947.68..49892947.69 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=49892947.68..49892947.68 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=9772935.24..49892947.68 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=255.43..255.43 rows=993 width=4)
                                                              ->  XN Seq Scan on volt_tt_618e62cea2d73  (cost=0.00..204.34 rows=20434 width=4)
                                                        ->  XN Hash  (cost=9772679.81..9772679.81 rows=2 width=12)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=9768089.79..9772679.81 rows=2 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=8)
                                                                    ->  XN Hash  (cost=9768089.79..9768089.79 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=13595.81..9768089.79 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=12500.00..6286990.89 rows=247 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=261961454 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=12500.00..12500.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 5))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=46757317.45..46757317.47 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=46757317.45..46757317.46 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=6837305.03..46757317.45 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=255.43..255.43 rows=993 width=4)
                                                              ->  XN Seq Scan on volt_tt_618e62cea2d73  (cost=0.00..204.34 rows=20434 width=4)
                                                        ->  XN Hash  (cost=6837049.60..6837049.60 rows=1 width=12)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=6832459.58..6837049.60 rows=1 width=12)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=8)
                                                                    ->  XN Hash  (cost=6832459.58..6832459.58 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=13595.81..6832459.58 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=12500.00..3351362.01 rows=140 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=142311191 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=12500.00..12500.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 5))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=45408483.21..45408483.22 rows=1 width=12)
                                            ->  XN HashAggregate  (cost=45408483.21..45408483.21 rows=1 width=12)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=5288470.77..45408483.20 rows=1 width=12)
                                                        Hash Cond: ("outer".i_manufact_id = "inner".i_manufact_id)
                                                        ->  XN HashAggregate  (cost=255.43..255.43 rows=993 width=4)
                                                              ->  XN Seq Scan on volt_tt_618e62cea2d73  (cost=0.00..204.34 rows=20434 width=4)
                                                        ->  XN Hash  (cost=5288215.34..5288215.34 rows=2 width=12)
                                                              ->  XN Hash Join DS_DIST_INNER  (cost=5233625.32..5288215.34 rows=2 width=12)
                                                                    Inner Dist Key: web_sales.ws_item_sk
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=8)
                                                                    ->  XN Hash  (cost=5233625.32..5233625.32 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=13595.81..5233625.32 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=12500.00..1752528.61 rows=71 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=20)
                                                                                      ->  XN Hash  (cost=12500.00..12500.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=29 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=29 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 5))
XN Limit  (cost=1005305869178.21..1005305869178.34 rows=52 width=6)
  InitPlan
    ->  XN Unique  (cost=0.00..1095.81 rows=2 width=4)
          ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=30 width=4)
                Filter: ((d_year = 2001) AND (d_moy = 1))
  ->  XN Merge  (cost=1005305868082.40..1005305868082.53 rows=52 width=6)
        Merge Key: count(*), a.ca_state
        ->  XN Network  (cost=1005305868082.40..1005305868082.53 rows=52 width=6)
              Send to leader
              ->  XN Sort  (cost=1005305868082.40..1005305868082.53 rows=52 width=6)
                    Sort Key: count(*), a.ca_state
                    ->  XN HashAggregate  (cost=5305868080.53..5305868080.92 rows=52 width=6)
                          Filter: (count(*) >= 10)
                          ->  XN Hash Join DS_DIST_INNER  (cost=4309545008.76..5305867835.49 rows=32672 width=6)
                                Inner Dist Key: c.c_current_addr_sk
                                Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                ->  XN Seq Scan on customer_address a  (cost=0.00..10000.00 rows=1000000 width=10)
                                ->  XN Hash  (cost=4309544925.74..4309544925.74 rows=33210 width=4)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=31379593.64..4309544925.74 rows=33210 width=4)
                                            Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                            ->  XN Seq Scan on customer c  (cost=0.00..20000.00 rows=2000000 width=8)
                                            ->  XN Hash  (cost=31379504.51..31379504.51 rows=35651 width=4)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=20170904.14..31379504.51 rows=35651 width=4)
                                                        Hash Cond: (("outer".i_category)::text = ("inner".i_category)::text)
                                                        Join Filter: ("outer".i_current_price > ("inner".avg * 1.2::double precision))
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=9760724.77..9766380.73 rows=107210 width=21)
                                                              Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on item i  (cost=0.00..2040.00 rows=203508 width=21)
                                                                    Filter: (i_category IS NOT NULL)
                                                              ->  XN Hash  (cost=9760468.36..9760468.36 rows=102564 width=8)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=913.19..9760468.36 rows=102564 width=8)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales s  (cost=0.00..2879970.24 rows=262284743 width=12)
                                                                                Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                          ->  XN Hash  (cost=913.11..913.11 rows=30 width=4)
                                                                                ->  XN Seq Scan on date_dim d  (cost=0.00..913.11 rows=30 width=4)
                                                                                      Filter: (d_month_seq = $0)
                                                        ->  XN Hash  (cost=10410179.36..10410179.36 rows=10 width=101)
                                                              ->  XN Subquery Scan volt_dt_0  (cost=10410179.23..10410179.36 rows=10 width=101)
                                                                    ->  XN HashAggregate  (cost=10410179.23..10410179.26 rows=10 width=101)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=2550.12..10409164.14 rows=203017 width=101)
                                                                                Hash Cond: (("outer".i_category)::text = ("inner".i_category)::text)
                                                                                ->  XN Seq Scan on item j  (cost=0.00..2040.00 rows=203508 width=17)
                                                                                      Filter: (i_category IS NOT NULL)
                                                                                ->  XN Hash  (cost=2550.10..2550.10 rows=10 width=93)
                                                                                      ->  XN Subquery Scan volt_dt_1  (cost=0.00..2550.10 rows=10 width=93)
                                                                                            ->  XN Unique  (cost=0.00..2550.00 rows=10 width=9)
                                                                                                  ->  XN Seq Scan on item i  (cost=0.00..2040.00 rows=204000 width=9)
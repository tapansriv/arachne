XN Limit  (cost=6995523546658.27..6995523546658.52 rows=100 width=128)
  ->  XN Merge  (cost=6995523546658.27..6998363630722.76 rows=1136033625799 width=128)
        Merge Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
        ->  XN Network  (cost=6995523546658.27..6998363630722.76 rows=1136033625799 width=128)
              Send to leader
              ->  XN Sort  (cost=6995523546658.27..6998363630722.76 rows=1136033625799 width=128)
                    Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
                    ->  XN Hash Join DS_BCAST_INNER  (cost=2069920901967.49..5768049043167.71 rows=1136033625799 width=128)
                          Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                          Join Filter: ((CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END > CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END) AND (CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END > CASE WHEN ("inner".year_total > 0::double precision) THEN ("outer".year_total / "inner".year_total) ELSE NULL::double precision END))
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1034765045542.79..2318302834017.05 rows=676912460928 width=216)
                                Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                                ->  XN Hash Join DS_BCAST_INNER  (cost=718783807130.54..889154041499.70 rows=612200065 width=184)
                                      Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                                      ->  XN Subquery Scan t_s_secyear  (cost=558004994163.90..558005029354.61 rows=1082790 width=140)
                                            ->  XN Append  (cost=558004994163.90..558005018526.71 rows=1082790 width=160)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=558004994163.90..558005018526.63 rows=1082788 width=160)
                                                        ->  XN HashAggregate  (cost=558004994163.90..558005007698.75 rows=1082788 width=160)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=60573973.29..558004969801.17 rows=1082788 width=160)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                    ->  XN Hash  (cost=60571067.33..60571067.33 rows=1162384 width=40)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..60571067.33 rows=1162384 width=40)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=262284743 width=40)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                            Filter: (d_year = 2002)
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                      ->  XN Hash  (cost=160778811335.26..160778811335.26 rows=326276 width=44)
                                            ->  XN Subquery Scan t_w_secyear  (cost=0.03..160778811335.26 rows=326276 width=44)
                                                  ->  XN Append  (cost=0.03..160778808072.50 rows=326276 width=160)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=160778800731.26..160778808072.42 rows=326274 width=160)
                                                              ->  XN HashAggregate  (cost=160778800731.26..160778804809.68 rows=326274 width=160)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=56025127.35..160778793390.09 rows=326274 width=160)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                          ->  XN Hash  (cost=56024290.25..56024290.25 rows=334839 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..56024290.25 rows=334839 width=40)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=40)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                                  Filter: (d_year = 2002)
                                ->  XN Hash  (cost=315981235221.85..315981235221.85 rows=638080 width=44)
                                      ->  XN Subquery Scan t_c_secyear  (cost=0.03..315981235221.85 rows=638080 width=44)
                                            ->  XN Append  (cost=0.03..315981228841.05 rows=638080 width=160)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=315981214484.22..315981228840.97 rows=638078 width=160)
                                                        ->  XN HashAggregate  (cost=315981214484.22..315981222460.19 rows=638078 width=160)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=57628746.68..315981200127.46 rows=638078 width=160)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                    ->  XN Hash  (cost=57627101.25..57627101.25 rows=658174 width=40)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..57627101.25 rows=658174 width=40)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=142370786 width=40)
                                                                                      Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                            Filter: (d_year = 2002)
                                                  ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                          ->  XN Hash  (cost=1035155856417.14..1035155856417.14 rows=3022 width=120)
                                ->  XN Hash Join DS_DIST_INNER  (cost=718783837217.27..1035155856417.14 rows=3022 width=120)
                                      Inner Dist Key: t_s_firstyear.dyear
                                      Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                                      ->  XN Hash Join DS_DIST_BOTH  (cost=160778810544.61..477020566220.55 rows=1740 width=88)
                                            Outer Dist Key: t_c_firstyear.dyear
                                            Inner Dist Key: t_w_firstyear.dyear
                                            Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                                            ->  XN Subquery Scan t_c_firstyear  (cost=0.03..315981233646.66 rows=1002 width=44)
                                                  ->  XN Append  (cost=0.03..315981233636.64 rows=1002 width=160)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=315981216079.41..315981233636.56 rows=1000 width=160)
                                                              ->  XN HashAggregate  (cost=315981216079.41..315981233626.56 rows=1000 width=160)
                                                                    Filter: (sum(((cs_ext_sales_price + ((cs_ext_list_price - cs_ext_wholesale_cost) - cs_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=57628746.68..315981200127.46 rows=638078 width=160)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".cs_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                          ->  XN Hash  (cost=57627101.25..57627101.25 rows=658174 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..57627101.25 rows=658174 width=40)
                                                                                      Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=142370786 width=40)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_customer_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                                  Filter: (d_year = 2001)
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                            ->  XN Hash  (cost=160778810539.57..160778810539.57 rows=1002 width=44)
                                                  ->  XN Subquery Scan t_w_firstyear  (cost=0.03..160778810539.57 rows=1002 width=44)
                                                        ->  XN Append  (cost=0.03..160778810529.55 rows=1002 width=160)
                                                              ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                                              ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                                    ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                      Distribute Round Robin
                                                                                      ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                            One-Time Filter: false
                                                              ->  XN Subquery Scan "*SELECT* 3"  (cost=160778801546.94..160778810529.47 rows=1000 width=160)
                                                                    ->  XN HashAggregate  (cost=160778801546.94..160778810519.47 rows=1000 width=160)
                                                                          Filter: (sum(((ws_ext_sales_price + ((ws_ext_list_price - ws_ext_wholesale_cost) - ws_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=56025127.35..160778793390.09 rows=326274 width=160)
                                                                                Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                                ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                                ->  XN Hash  (cost=56024290.25..56024290.25 rows=334839 width=40)
                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..56024290.25 rows=334839 width=40)
                                                                                            Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                            ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=40)
                                                                                            ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                                  ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                                        Filter: (d_year = 2001)
                                      ->  XN Hash  (cost=558005026667.64..558005026667.64 rows=1002 width=44)
                                            ->  XN Subquery Scan t_s_firstyear  (cost=558004996870.87..558005026667.64 rows=1002 width=44)
                                                  ->  XN Append  (cost=558004996870.87..558005026657.62 rows=1002 width=160)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=558004996870.87..558005026657.54 rows=1000 width=160)
                                                              ->  XN HashAggregate  (cost=558004996870.87..558005026647.54 rows=1000 width=160)
                                                                    Filter: (sum(((ss_ext_sales_price + ((ss_ext_list_price - ss_ext_wholesale_cost) - ss_ext_discount_amt)) / 2::double precision)) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=60573973.29..558004969801.17 rows=1082788 width=160)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                          ->  XN Hash  (cost=60571067.33..60571067.33 rows=1162384 width=40)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..60571067.33 rows=1162384 width=40)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=262284743 width=40)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                                  Filter: (d_year = 2001)
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 3"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
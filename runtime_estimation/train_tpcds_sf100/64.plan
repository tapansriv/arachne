XN HashAggregate  (cost=45660393.56..45663313.88 rows=1000 width=36)
  Filter: ((sum((cr_store_credit + (cr_refunded_cash + cr_reversed_charge))) * 2::double precision) < sum(cs_ext_list_price))
  ->  XN Hash Join DS_DIST_NONE  (cost=216065.61..45575149.97 rows=11365812 width=36)
        Hash Cond: (("outer".cs_order_number = "inner".cr_order_number) AND ("outer".cs_item_sk = "inner".cr_item_sk))
        ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=143997072 width=16)
        ->  XN Hash  (cost=144043.74..144043.74 rows=14404374 width=32)
              ->  XN Seq Scan on catalog_returns  (cost=0.00..144043.74 rows=14404374 width=32)

XN Merge  (cost=1074952749944.96..1074952749944.97 rows=3 width=855)
  Merge Key: cs1.product_name, cs1.store_name, cs2.cnt, cs1.s1, cs2.s1
  ->  XN Network  (cost=1074952749944.96..1074952749944.97 rows=3 width=855)
        Send to leader
        ->  XN Sort  (cost=1074952749944.96..1074952749944.97 rows=3 width=855)
              Sort Key: cs1.product_name, cs1.store_name, cs2.cnt, cs1.s1, cs2.s1
              ->  XN Hash Join DS_BCAST_INNER  (cost=74891149942.91..74952749944.94 rows=3 width=855)
                    Hash Cond: (("outer".item_sk = "inner".item_sk) AND (("outer".store_name)::text = ("inner".store_name)::text) AND (("outer".store_zip)::text = ("inner".store_zip)::text))
                    Join Filter: ("outer".cnt >= "inner".cnt)
                    ->  XN Subquery Scan cs1  (cost=37445574970.98..37445574971.68 rows=35 width=823)
                          ->  XN HashAggregate  (cost=37445574970.98..37445574971.33 rows=35 width=160)
                                ->  XN Hash Join DS_DIST_INNER  (cost=37432972468.96..37445574969.31 rows=35 width=160)
                                      Inner Dist Key: store_sales.ss_addr_sk
                                      Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                      ->  XN Seq Scan on customer_address ad1  (cost=0.00..10000.00 rows=1000000 width=43)
                                      ->  XN Hash  (cost=37432972468.87..37432972468.87 rows=37 width=125)
                                            ->  XN Hash Join DS_DIST_BOTH  (cost=37392742459.46..37432972468.87 rows=37 width=125)
                                                  Outer Dist Key: store.s_store_sk
                                                  Inner Dist Key: store_sales.ss_store_sk
                                                  Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                                  ->  XN Seq Scan on store  (cost=0.00..4.02 rows=402 width=20)
                                                  ->  XN Hash  (cost=37392742459.36..37392742459.36 rows=39 width=113)
                                                        ->  XN Hash Join DS_DIST_INNER  (cost=37380857869.14..37392742459.36 rows=39 width=113)
                                                              Inner Dist Key: store_sales.ss_item_sk
                                                              Hash Cond: ("outer".cs_item_sk = "inner".ss_item_sk)
                                                              ->  XN Seq Scan on volt_tt_618e631832817  (cost=0.00..2039.93 rows=203993 width=4)
                                                              ->  XN Hash  (cost=37380857869.05..37380857869.05 rows=36 width=121)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=37365877705.87..37380857869.05 rows=36 width=121)
                                                                          Hash Cond: ("outer".hd_income_band_sk = "inner".ib_income_band_sk)
                                                                          ->  XN Hash Join DS_DIST_INNER  (cost=37365877705.62..37378457867.99 rows=36 width=125)
                                                                                Inner Dist Key: store_sales.ss_hdemo_sk
                                                                                Hash Cond: ("outer".hd_demo_sk = "inner".ss_hdemo_sk)
                                                                                ->  XN Seq Scan on household_demographics hd1  (cost=0.00..72.00 rows=7200 width=8)
                                                                                ->  XN Hash  (cost=37365877705.52..37365877705.52 rows=37 width=125)
                                                                                      ->  XN Hash Join DS_DIST_BOTH  (cost=37322577682.65..37365877705.52 rows=37 width=125)
                                                                                            Outer Dist Key: promotion.p_promo_sk
                                                                                            Inner Dist Key: store_sales.ss_promo_sk
                                                                                            Hash Cond: ("outer".p_promo_sk = "inner".ss_promo_sk)
                                                                                            ->  XN Seq Scan on promotion  (cost=0.00..10.00 rows=1000 width=4)
                                                                                            ->  XN Hash  (cost=37322577682.56..37322577682.56 rows=38 width=129)
                                                                                                  ->  XN Hash Join DS_DIST_INNER  (cost=37303664463.96..37322577682.56 rows=38 width=129)
                                                                                                        Inner Dist Key: store_sales.ss_cdemo_sk
                                                                                                        Hash Cond: ("outer".cd_demo_sk = "inner".ss_cdemo_sk)
                                                                                                        Join Filter: (("outer".cd_marital_status)::text <> ("inner".cd_marital_status)::text)
                                                                                                        ->  XN Seq Scan on customer_demographics cd1  (cost=0.00..19208.00 rows=1920800 width=9)
                                                                                                        ->  XN Hash  (cost=37303664463.83..37303664463.83 rows=51 width=138)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=34000401706.45..37303664463.83 rows=51 width=138)
                                                                                                                    Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                                    ->  XN Hash Join DS_DIST_INNER  (cost=34000400792.49..37249263406.65 rows=11417 width=138)
                                                                                                                          Inner Dist Key: customer.c_current_addr_sk
                                                                                                                          Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                                                          ->  XN Seq Scan on customer_address ad2  (cost=0.00..10000.00 rows=1000000 width=43)
                                                                                                                          ->  XN Hash  (cost=34000400763.48..34000400763.48 rows=11603 width=103)
                                                                                                                                ->  XN Hash Join DS_DIST_BOTH  (cost=17550036877.40..34000400763.48 rows=11603 width=103)
                                                                                                                                      Outer Dist Key: "outer".c_first_shipto_date_sk
                                                                                                                                      Inner Dist Key: d3.d_date_sk
                                                                                                                                      Hash Cond: ("outer".c_first_shipto_date_sk = "inner".d_date_sk)
                                                                                                                                      ->  XN Hash Join DS_DIST_BOTH  (cost=17550035964.29..27707519583.84 rows=12039 width=103)
                                                                                                                                            Outer Dist Key: "inner".c_first_sales_date_sk
                                                                                                                                            Inner Dist Key: d2.d_date_sk
                                                                                                                                            Hash Cond: ("outer".c_first_sales_date_sk = "inner".d_date_sk)
                                                                                                                                            ->  XN Hash Join DS_DIST_INNER  (cost=17550035051.17..21286678394.13 rows=12496 width=103)
                                                                                                                                                  Inner Dist Key: customer.c_current_cdemo_sk
                                                                                                                                                  Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                                                                                  ->  XN Seq Scan on customer_demographics cd2  (cost=0.00..19208.00 rows=1920800 width=9)
                                                                                                                                                  ->  XN Hash  (cost=17550035017.81..17550035017.81 rows=13345 width=102)
                                                                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=10992833.57..17550035017.81 rows=13345 width=102)
                                                                                                                                                              Hash Cond: ("outer".c_current_hdemo_sk = "inner".hd_demo_sk)
                                                                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=8592581.32..16683634329.93 rows=13430 width=106)
                                                                                                                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                                                                                                    ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=1729145 width=24)
                                                                                                                                                                          Filter: ((c_current_hdemo_sk IS NOT NULL) AND (c_first_sales_date_sk IS NOT NULL) AND (c_first_shipto_date_sk IS NOT NULL) AND (c_current_cdemo_sk IS NOT NULL))
                                                                                                                                                                    ->  XN Hash  (cost=8592539.63..8592539.63 rows=16675 width=90)
                                                                                                                                                                          ->  XN Hash Join DS_DIST_NONE  (cost=7584711.82..8592539.63 rows=16675 width=90)
                                                                                                                                                                                Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".i_item_sk))
                                                                                                                                                                                ->  XN Seq Scan on store_returns  (cost=0.00..287950.80 rows=28795080 width=8)
                                                                                                                                                                                ->  XN Hash  (cost=7583924.00..7583924.00 rows=157563 width=90)
                                                                                                                                                                                      ->  XN Hash Join DS_DIST_NONE  (cost=7140.37..7583924.00 rows=157563 width=90)
                                                                                                                                                                                            Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                                                                                                                            ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=208677234 width=60)
                                                                                                                                                                                                  Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_promo_sk IS NOT NULL))
                                                                                                                                                                                            ->  XN Hash  (cost=7140.00..7140.00 rows=147 width=30)
                                                                                                                                                                                                  ->  XN Seq Scan on item  (cost=0.00..7140.00 rows=147 width=30)
                                                                                                                                                                                                        Filter: ((i_current_price <= 74::double precision) AND (i_current_price <= 79::double precision) AND (i_current_price >= 65::double precision) AND (i_current_price >= 64::double precision) AND (((i_color)::text = 'purple'::text) OR ((i_color)::text = 'spring'::text) OR ((i_color)::text = 'burlywood'::text) OR ((i_color)::text = 'floral'::text) OR ((i_color)::text = 'indian'::text) OR ((i_color)::text = 'medium'::text)))
                                                                                                                                                              ->  XN Hash  (cost=2400234.25..2400234.25 rows=7200 width=4)
                                                                                                                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=0.25..2400234.25 rows=7200 width=4)
                                                                                                                                                                          Hash Cond: ("outer".hd_income_band_sk = "inner".ib_income_band_sk)
                                                                                                                                                                          ->  XN Seq Scan on household_demographics hd2  (cost=0.00..72.00 rows=7200 width=8)
                                                                                                                                                                          ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                                                                                                                                ->  XN Seq Scan on income_band ib2  (cost=0.00..0.20 rows=20 width=4)
                                                                                                                                            ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                                                                  ->  XN Seq Scan on date_dim d2  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                                                      ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                                                            ->  XN Seq Scan on date_dim d3  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                                    ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                                                          ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=340 width=8)
                                                                                                                                Filter: (d_year = 1999)
                                                                          ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                                ->  XN Seq Scan on income_band ib1  (cost=0.00..0.20 rows=20 width=4)
                    ->  XN Hash  (cost=37445574971.68..37445574971.68 rows=35 width=166)
                          ->  XN Subquery Scan cs2  (cost=37445574970.98..37445574971.68 rows=35 width=166)
                                ->  XN HashAggregate  (cost=37445574970.98..37445574971.33 rows=35 width=160)
                                      ->  XN Hash Join DS_DIST_INNER  (cost=37432972468.96..37445574969.31 rows=35 width=160)
                                            Inner Dist Key: store_sales.ss_addr_sk
                                            Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                            ->  XN Seq Scan on customer_address ad1  (cost=0.00..10000.00 rows=1000000 width=43)
                                            ->  XN Hash  (cost=37432972468.87..37432972468.87 rows=37 width=125)
                                                  ->  XN Hash Join DS_DIST_BOTH  (cost=37392742459.46..37432972468.87 rows=37 width=125)
                                                        Outer Dist Key: store.s_store_sk
                                                        Inner Dist Key: store_sales.ss_store_sk
                                                        Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                                        ->  XN Seq Scan on store  (cost=0.00..4.02 rows=402 width=20)
                                                        ->  XN Hash  (cost=37392742459.36..37392742459.36 rows=39 width=113)
                                                              ->  XN Hash Join DS_DIST_INNER  (cost=37380857869.14..37392742459.36 rows=39 width=113)
                                                                    Inner Dist Key: store_sales.ss_item_sk
                                                                    Hash Cond: ("outer".cs_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on volt_tt_618e631832817  (cost=0.00..2039.93 rows=203993 width=4)
                                                                    ->  XN Hash  (cost=37380857869.05..37380857869.05 rows=36 width=121)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=37365877705.87..37380857869.05 rows=36 width=121)
                                                                                Hash Cond: ("outer".hd_income_band_sk = "inner".ib_income_band_sk)
                                                                                ->  XN Hash Join DS_DIST_INNER  (cost=37365877705.62..37378457867.99 rows=36 width=125)
                                                                                      Inner Dist Key: store_sales.ss_hdemo_sk
                                                                                      Hash Cond: ("outer".hd_demo_sk = "inner".ss_hdemo_sk)
                                                                                      ->  XN Seq Scan on household_demographics hd1  (cost=0.00..72.00 rows=7200 width=8)
                                                                                      ->  XN Hash  (cost=37365877705.52..37365877705.52 rows=37 width=125)
                                                                                            ->  XN Hash Join DS_DIST_BOTH  (cost=37322577682.65..37365877705.52 rows=37 width=125)
                                                                                                  Outer Dist Key: promotion.p_promo_sk
                                                                                                  Inner Dist Key: store_sales.ss_promo_sk
                                                                                                  Hash Cond: ("outer".p_promo_sk = "inner".ss_promo_sk)
                                                                                                  ->  XN Seq Scan on promotion  (cost=0.00..10.00 rows=1000 width=4)
                                                                                                  ->  XN Hash  (cost=37322577682.56..37322577682.56 rows=38 width=129)
                                                                                                        ->  XN Hash Join DS_DIST_INNER  (cost=37303664463.96..37322577682.56 rows=38 width=129)
                                                                                                              Inner Dist Key: store_sales.ss_cdemo_sk
                                                                                                              Hash Cond: ("outer".cd_demo_sk = "inner".ss_cdemo_sk)
                                                                                                              Join Filter: (("outer".cd_marital_status)::text <> ("inner".cd_marital_status)::text)
                                                                                                              ->  XN Seq Scan on customer_demographics cd1  (cost=0.00..19208.00 rows=1920800 width=9)
                                                                                                              ->  XN Hash  (cost=37303664463.83..37303664463.83 rows=51 width=138)
                                                                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=34000401706.45..37303664463.83 rows=51 width=138)
                                                                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                                          ->  XN Hash Join DS_DIST_INNER  (cost=34000400792.49..37249263406.65 rows=11417 width=138)
                                                                                                                                Inner Dist Key: customer.c_current_addr_sk
                                                                                                                                Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                                                                                                                ->  XN Seq Scan on customer_address ad2  (cost=0.00..10000.00 rows=1000000 width=43)
                                                                                                                                ->  XN Hash  (cost=34000400763.48..34000400763.48 rows=11603 width=103)
                                                                                                                                      ->  XN Hash Join DS_DIST_BOTH  (cost=17550036877.40..34000400763.48 rows=11603 width=103)
                                                                                                                                            Outer Dist Key: "outer".c_first_shipto_date_sk
                                                                                                                                            Inner Dist Key: d3.d_date_sk
                                                                                                                                            Hash Cond: ("outer".c_first_shipto_date_sk = "inner".d_date_sk)
                                                                                                                                            ->  XN Hash Join DS_DIST_BOTH  (cost=17550035964.29..27707519583.84 rows=12039 width=103)
                                                                                                                                                  Outer Dist Key: "inner".c_first_sales_date_sk
                                                                                                                                                  Inner Dist Key: d2.d_date_sk
                                                                                                                                                  Hash Cond: ("outer".c_first_sales_date_sk = "inner".d_date_sk)
                                                                                                                                                  ->  XN Hash Join DS_DIST_INNER  (cost=17550035051.17..21286678394.13 rows=12496 width=103)
                                                                                                                                                        Inner Dist Key: customer.c_current_cdemo_sk
                                                                                                                                                        Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                                                                                        ->  XN Seq Scan on customer_demographics cd2  (cost=0.00..19208.00 rows=1920800 width=9)
                                                                                                                                                        ->  XN Hash  (cost=17550035017.81..17550035017.81 rows=13345 width=102)
                                                                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=10992833.57..17550035017.81 rows=13345 width=102)
                                                                                                                                                                    Hash Cond: ("outer".c_current_hdemo_sk = "inner".hd_demo_sk)
                                                                                                                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=8592581.32..16683634329.93 rows=13430 width=106)
                                                                                                                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                                                                                                          ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=1729145 width=24)
                                                                                                                                                                                Filter: ((c_current_hdemo_sk IS NOT NULL) AND (c_first_sales_date_sk IS NOT NULL) AND (c_first_shipto_date_sk IS NOT NULL) AND (c_current_cdemo_sk IS NOT NULL))
                                                                                                                                                                          ->  XN Hash  (cost=8592539.63..8592539.63 rows=16675 width=90)
                                                                                                                                                                                ->  XN Hash Join DS_DIST_NONE  (cost=7584711.82..8592539.63 rows=16675 width=90)
                                                                                                                                                                                      Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".i_item_sk))
                                                                                                                                                                                      ->  XN Seq Scan on store_returns  (cost=0.00..287950.80 rows=28795080 width=8)
                                                                                                                                                                                      ->  XN Hash  (cost=7583924.00..7583924.00 rows=157563 width=90)
                                                                                                                                                                                            ->  XN Hash Join DS_DIST_NONE  (cost=7140.37..7583924.00 rows=157563 width=90)
                                                                                                                                                                                                  Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                                                                                                                                                                  ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=208677234 width=60)
                                                                                                                                                                                                        Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL) AND (ss_cdemo_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL) AND (ss_promo_sk IS NOT NULL))
                                                                                                                                                                                                  ->  XN Hash  (cost=7140.00..7140.00 rows=147 width=30)
                                                                                                                                                                                                        ->  XN Seq Scan on item  (cost=0.00..7140.00 rows=147 width=30)
                                                                                                                                                                                                              Filter: ((i_current_price <= 74::double precision) AND (i_current_price <= 79::double precision) AND (i_current_price >= 65::double precision) AND (i_current_price >= 64::double precision) AND (((i_color)::text = 'purple'::text) OR ((i_color)::text = 'spring'::text) OR ((i_color)::text = 'burlywood'::text) OR ((i_color)::text = 'floral'::text) OR ((i_color)::text = 'indian'::text) OR ((i_color)::text = 'medium'::text)))
                                                                                                                                                                    ->  XN Hash  (cost=2400234.25..2400234.25 rows=7200 width=4)
                                                                                                                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=0.25..2400234.25 rows=7200 width=4)
                                                                                                                                                                                Hash Cond: ("outer".hd_income_band_sk = "inner".ib_income_band_sk)
                                                                                                                                                                                ->  XN Seq Scan on household_demographics hd2  (cost=0.00..72.00 rows=7200 width=8)
                                                                                                                                                                                ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                                                                                                                                      ->  XN Seq Scan on income_band ib2  (cost=0.00..0.20 rows=20 width=4)
                                                                                                                                                  ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                                                                        ->  XN Seq Scan on date_dim d2  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                                                            ->  XN Hash  (cost=730.49..730.49 rows=73049 width=8)
                                                                                                                                                  ->  XN Seq Scan on date_dim d3  (cost=0.00..730.49 rows=73049 width=8)
                                                                                                                          ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                                                                ->  XN Seq Scan on date_dim d1  (cost=0.00..913.11 rows=340 width=8)
                                                                                                                                      Filter: (d_year = 2000)
                                                                                ->  XN Hash  (cost=0.20..0.20 rows=20 width=4)
                                                                                      ->  XN Seq Scan on income_band ib1  (cost=0.00..0.20 rows=20 width=4)
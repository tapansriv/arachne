XN Seq Scan on item  (cost=0.00..2550.00 rows=20591 width=20)
  Filter: ((i_category)::text = 'Music'::text)

XN Limit  (cost=1011168939404.87..1011168939404.88 rows=3 width=40)
  ->  XN Merge  (cost=1011168939404.87..1011168939404.88 rows=3 width=40)
        Merge Key: i_item_id, sum(total_sales)
        ->  XN Network  (cost=1011168939404.87..1011168939404.88 rows=3 width=40)
              Send to leader
              ->  XN Sort  (cost=1011168939404.87..1011168939404.88 rows=3 width=40)
                    Sort Key: i_item_id, sum(total_sales)
                    ->  XN HashAggregate  (cost=11168939404.84..11168939404.85 rows=3 width=40)
                          ->  XN Subquery Scan tmp1  (cost=3725573166.48..11168939404.82 rows=3 width=40)
                                ->  XN Append  (cost=3725573166.48..11168939404.79 rows=3 width=28)
                                      ->  XN Subquery Scan "*SELECT* 1"  (cost=3725573166.48..3725573166.50 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=3725573166.48..3725573166.49 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=9652934.27..3725573166.48 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=254.45..254.45 rows=18576 width=20)
                                                              ->  XN Seq Scan on volt_tt_618e6311cea0d  (cost=0.00..203.56 rows=20356 width=20)
                                                        ->  XN Hash  (cost=9652679.81..9652679.81 rows=2 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=9648089.79..9652679.81 rows=2 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=24)
                                                                    ->  XN Hash  (cost=9648089.79..9648089.79 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=13595.81..9648089.79 rows=1 width=12)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=12500.00..6286990.89 rows=247 width=16)
                                                                                      Hash Cond: ("outer".ss_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=261961454 width=20)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=12500.00..12500.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=28 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=28 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 9))
                                      ->  XN Subquery Scan "*SELECT* 2"  (cost=3722277536.27..3722277536.28 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=3722277536.27..3722277536.27 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=6717304.05..3722277536.26 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=254.45..254.45 rows=18576 width=20)
                                                              ->  XN Seq Scan on volt_tt_618e6311cea0d  (cost=0.00..203.56 rows=20356 width=20)
                                                        ->  XN Hash  (cost=6717049.60..6717049.60 rows=1 width=28)
                                                              ->  XN Hash Join DS_DIST_NONE  (cost=6712459.58..6717049.60 rows=1 width=28)
                                                                    Hash Cond: ("outer".i_item_sk = "inner".cs_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=24)
                                                                    ->  XN Hash  (cost=6712459.57..6712459.57 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=13595.81..6712459.57 rows=1 width=12)
                                                                                Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=12500.00..3351362.01 rows=140 width=16)
                                                                                      Hash Cond: ("outer".cs_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=142311191 width=20)
                                                                                            Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_bill_addr_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=12500.00..12500.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=28 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=28 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 9))
                                      ->  XN Subquery Scan "*SELECT* 3"  (cost=3721088702.01..3721088702.02 rows=1 width=28)
                                            ->  XN HashAggregate  (cost=3721088702.01..3721088702.01 rows=1 width=28)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=5168469.79..3721088702.00 rows=1 width=28)
                                                        Hash Cond: (("outer".i_item_id)::text = ("inner".i_item_id)::text)
                                                        ->  XN HashAggregate  (cost=254.45..254.45 rows=18576 width=20)
                                                              ->  XN Seq Scan on volt_tt_618e6311cea0d  (cost=0.00..203.56 rows=20356 width=20)
                                                        ->  XN Hash  (cost=5168215.34..5168215.34 rows=2 width=28)
                                                              ->  XN Hash Join DS_DIST_INNER  (cost=5113625.32..5168215.34 rows=2 width=28)
                                                                    Inner Dist Key: web_sales.ws_item_sk
                                                                    Hash Cond: ("outer".i_item_sk = "inner".ws_item_sk)
                                                                    ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=24)
                                                                    ->  XN Hash  (cost=5113625.31..5113625.31 rows=1 width=12)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=13595.81..5113625.31 rows=1 width=12)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=12500.00..1752528.61 rows=71 width=16)
                                                                                      Hash Cond: ("outer".ws_bill_addr_sk = "inner".ca_address_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=20)
                                                                                      ->  XN Hash  (cost=12500.00..12500.00 rows=1 width=4)
                                                                                            ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=1 width=4)
                                                                                                  Filter: (ca_gmt_offset = -5::double precision)
                                                                                ->  XN Hash  (cost=1095.73..1095.73 rows=28 width=4)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=28 width=4)
                                                                                            Filter: ((d_year = 1998) AND (d_moy = 9))
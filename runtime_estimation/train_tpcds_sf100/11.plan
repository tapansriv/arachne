XN Limit  (cost=2132099902076.55..2132099902076.80 rows=100 width=128)
  ->  XN Merge  (cost=2132099902076.55..2132104331146.69 rows=1771628055 width=128)
        Merge Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
        ->  XN Network  (cost=2132099902076.55..2132104331146.69 rows=1771628055 width=128)
              Send to leader
              ->  XN Sort  (cost=2132099902076.55..2132104331146.69 rows=1771628055 width=128)
                    Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_preferred_cust_flag
                    ->  XN Hash Join DS_BCAST_INNER  (cost=958716522791.25..1131827758494.40 rows=1771628055 width=128)
                          Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                          Join Filter: (CASE WHEN ("inner".year_total > 0::double precision) THEN (("outer".year_total * 1::double precision) / "inner".year_total) ELSE 0::double precision END < CASE WHEN ("inner".year_total > 0::double precision) THEN (("outer".year_total * 1::double precision) / "inner".year_total) ELSE 0::double precision END)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=479228124683.43..649597830278.71 rows=612197623 width=176)
                                Hash Cond: (("outer".dyear = "inner".dyear) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                                ->  XN Subquery Scan t_s_secyear  (cost=372023554163.90..372023581233.65 rows=1082789 width=140)
                                      ->  XN Append  (cost=372023554163.90..372023570405.76 rows=1082789 width=144)
                                            ->  XN Subquery Scan "*SELECT* 1"  (cost=372023554163.90..372023570405.72 rows=1082788 width=144)
                                                  ->  XN HashAggregate  (cost=372023554163.90..372023559577.84 rows=1082788 width=144)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=60573973.29..372023529801.17 rows=1082788 width=144)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                              ->  XN Hash  (cost=60571067.33..60571067.33 rows=1162384 width=24)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..60571067.33 rows=1162384 width=24)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=262284743 width=24)
                                                                                Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                          ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                      Filter: (d_year = 2002)
                                            ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                  ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                        ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                              ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                    Distribute Round Robin
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          One-Time Filter: false
                                ->  XN Hash  (cost=107204568888.15..107204568888.15 rows=326275 width=44)
                                      ->  XN Subquery Scan t_w_secyear  (cost=0.03..107204568888.15 rows=326275 width=44)
                                            ->  XN Append  (cost=0.03..107204565625.40 rows=326275 width=144)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=107204560731.25..107204565625.36 rows=326274 width=144)
                                                        ->  XN HashAggregate  (cost=107204560731.25..107204562362.62 rows=326274 width=144)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=56025127.35..107204553390.09 rows=326274 width=144)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                    ->  XN Hash  (cost=56024290.25..56024290.25 rows=334839 width=24)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..56024290.25 rows=334839 width=24)
                                                                                Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=24)
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                            Filter: (d_year = 2002)
                          ->  XN Hash  (cost=479488398103.47..479488398103.47 rows=1737 width=80)
                                ->  XN Hash Join DS_DIST_BOTH  (cost=479228122521.29..479488398103.47 rows=1737 width=80)
                                      Outer Dist Key: t_s_firstyear.customer_id
                                      Inner Dist Key: t_w_firstyear.customer_id
                                      Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".dyear = "inner".dyear))
                                      ->  XN Subquery Scan t_s_firstyear  (cost=372023556870.87..372023570425.77 rows=1001 width=44)
                                            ->  XN Append  (cost=372023556870.87..372023570415.76 rows=1001 width=144)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=372023556870.87..372023570415.72 rows=1000 width=144)
                                                        ->  XN HashAggregate  (cost=372023556870.87..372023570405.72 rows=1000 width=144)
                                                              Filter: (sum((ss_ext_list_price - ss_ext_discount_amt)) > 0::double precision)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=60573973.29..372023529801.17 rows=1082788 width=144)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                    ->  XN Hash  (cost=60571067.33..60571067.33 rows=1162384 width=24)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..60571067.33 rows=1162384 width=24)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=262284743 width=24)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                            Filter: (d_year = 2001)
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.03..0.04 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                      ->  XN Hash  (cost=107204565645.41..107204565645.41 rows=1001 width=44)
                                            ->  XN Subquery Scan t_w_firstyear  (cost=0.03..107204565645.41 rows=1001 width=44)
                                                  ->  XN Append  (cost=0.03..107204565635.40 rows=1001 width=144)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.03..0.04 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.03..0.03 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=107204561546.94..107204565635.36 rows=1000 width=144)
                                                              ->  XN HashAggregate  (cost=107204561546.94..107204565625.36 rows=1000 width=144)
                                                                    Filter: (sum((ws_ext_list_price - ws_ext_discount_amt)) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=56025127.35..107204553390.09 rows=326274 width=144)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=128)
                                                                          ->  XN Hash  (cost=56024290.25..56024290.25 rows=334839 width=24)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..56024290.25 rows=334839 width=24)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=24)
                                                                                      ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                                  Filter: (d_year = 2001)
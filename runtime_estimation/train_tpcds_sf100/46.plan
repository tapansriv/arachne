XN Limit  (cost=1047665318139.51..1047665318139.76 rows=100 width=159)
  ->  XN Merge  (cost=1047665318139.51..1047669143399.77 rows=1530104107 width=159)
        Merge Key: customer.c_last_name, customer.c_first_name, current_addr.ca_city, dn.bought_city, dn.ss_ticket_number
        ->  XN Network  (cost=1047665318139.51..1047669143399.77 rows=1530104107 width=159)
              Send to leader
              ->  XN Sort  (cost=1047665318139.51..1047669143399.77 rows=1530104107 width=159)
                    Sort Key: customer.c_last_name, customer.c_first_name, current_addr.ca_city, dn.bought_city, dn.ss_ticket_number
                    ->  XN Hash Join DS_DIST_INNER  (cost=37690270440.55..47431893240.05 rows=1530104107 width=159)
                          Inner Dist Key: customer.c_current_addr_sk
                          Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                          Join Filter: (("outer".ca_city)::text <> ("inner".bought_city)::text)
                          ->  XN Seq Scan on customer_address current_addr  (cost=0.00..10000.00 rows=1000000 width=16)
                          ->  XN Hash  (cost=37690270379.66..37690270379.66 rows=24354 width=151)
                                ->  XN Hash Join DS_BCAST_INNER  (cost=2655665136.12..37690270379.66 rows=24354 width=151)
                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                      ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=27)
                                      ->  XN Hash  (cost=2655665073.65..2655665073.65 rows=24989 width=132)
                                            ->  XN Subquery Scan dn  (cost=2655664698.82..2655665073.65 rows=24989 width=132)
                                                  ->  XN HashAggregate  (cost=2655664698.82..2655664823.76 rows=24989 width=40)
                                                        ->  XN Hash Join DS_DIST_INNER  (cost=261011574.09..2655664323.98 rows=24989 width=40)
                                                              Inner Dist Key: store_sales.ss_addr_sk
                                                              Hash Cond: ("outer".ca_address_sk = "inner".ss_addr_sk)
                                                              ->  XN Seq Scan on customer_address  (cost=0.00..10000.00 rows=1000000 width=16)
                                                              ->  XN Hash  (cost=261011507.57..261011507.57 rows=26607 width=28)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1762.95..261011507.57 rows=26607 width=28)
                                                                          Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1650.44..44888700.98 rows=107912 width=32)
                                                                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1644.27..38157141.82 rows=837909 width=36)
                                                                                      Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=238971857 width=40)
                                                                                            Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_addr_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                                                                      ->  XN Hash  (cost=1643.60..1643.60 rows=269 width=4)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1643.60 rows=269 width=4)
                                                                                                  Filter: (((d_year = 2000) OR (d_year = 2001) OR (d_year = 1999)) AND ((d_dow = 6) OR (d_dow = 0)))
                                                                                ->  XN Hash  (cost=6.03..6.03 rows=56 width=4)
                                                                                      ->  XN Seq Scan on store  (cost=0.00..6.03 rows=56 width=4)
                                                                                            Filter: (((s_city)::text = 'Fairview'::text) OR ((s_city)::text = 'Midway'::text))
                                                                          ->  XN Hash  (cost=108.00..108.00 rows=1801 width=4)
                                                                                ->  XN Seq Scan on household_demographics  (cost=0.00..108.00 rows=1801 width=4)
                                                                                      Filter: ((hd_vehicle_count = 3) OR (hd_dep_count = 4))
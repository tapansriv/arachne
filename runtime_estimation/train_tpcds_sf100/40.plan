XN Limit  (cost=1000055899286.28..1000055899286.28 rows=1 width=46)
  ->  XN Merge  (cost=1000055899286.28..1000055899286.28 rows=1 width=46)
        Merge Key: warehouse.w_state, item.i_item_id
        ->  XN Network  (cost=1000055899286.28..1000055899286.28 rows=1 width=46)
              Send to leader
              ->  XN Sort  (cost=1000055899286.28..1000055899286.28 rows=1 width=46)
                    Sort Key: warehouse.w_state, item.i_item_id
                    ->  XN HashAggregate  (cost=55899286.25..55899286.27 rows=1 width=46)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=55379285.89..55899286.24 rows=1 width=46)
                                Hash Cond: ("outer".w_warehouse_sk = "inner".cs_warehouse_sk)
                                ->  XN Seq Scan on warehouse  (cost=0.00..0.15 rows=15 width=10)
                                ->  XN Hash  (cost=55379285.89..55379285.89 rows=1 width=44)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=220221.47..55379285.89 rows=1 width=44)
                                            Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                            ->  XN Hash Join DS_DIST_NONE  (cost=219125.61..47378180.77 rows=740 width=44)
                                                  Hash Cond: ("outer".cs_item_sk = "inner".i_item_sk)
                                                  ->  XN Hash Left Join DS_DIST_NONE  (cost=216065.61..45575149.97 rows=143997072 width=28)
                                                        Hash Cond: (("outer".cs_order_number = "inner".cr_order_number) AND ("outer".cs_item_sk = "inner".cr_item_sk))
                                                        ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=143997072 width=24)
                                                        ->  XN Hash  (cost=144043.74..144043.74 rows=14404374 width=16)
                                                              ->  XN Seq Scan on catalog_returns  (cost=0.00..144043.74 rows=14404374 width=16)
                                                  ->  XN Hash  (cost=3060.00..3060.00 rows=1 width=24)
                                                        ->  XN Seq Scan on item  (cost=0.00..3060.00 rows=1 width=24)
                                                              Filter: ((i_current_price <= 1.49::double precision) AND (i_current_price >= 0.98999999999999999::double precision))
                                            ->  XN Hash  (cost=1095.73..1095.73 rows=50 width=8)
                                                  ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=50 width=8)
                                                        Filter: ((d_date >= '2000-02-10'::date) AND (d_date <= '2000-04-10'::date))
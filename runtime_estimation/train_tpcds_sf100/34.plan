XN Merge  (cost=1000335412858.36..1000335412860.80 rows=975 width=43)
  Merge Key: customer.c_last_name, customer.c_first_name, customer.c_salutation, customer.c_preferred_cust_flag, dn.ss_ticket_number
  ->  XN Network  (cost=1000335412858.36..1000335412860.80 rows=975 width=43)
        Send to leader
        ->  XN Sort  (cost=1000335412858.36..1000335412860.80 rows=975 width=43)
              Sort Key: customer.c_last_name, customer.c_first_name, customer.c_salutation, customer.c_preferred_cust_flag, dn.ss_ticket_number
              ->  XN Hash Join DS_BCAST_INNER  (cost=93387800.21..335412809.96 rows=975 width=43)
                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                    ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=35)
                    ->  XN Hash  (cost=93387797.71..93387797.71 rows=1000 width=16)
                          ->  XN Subquery Scan dn  (cost=93387731.96..93387797.71 rows=1000 width=16)
                                ->  XN HashAggregate  (cost=93387731.96..93387787.71 rows=1000 width=8)
                                      Filter: ((count(*) <= 20) AND (count(*) >= 15))
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=2249.69..93387676.21 rows=4460 width=8)
                                            Hash Cond: ("outer".ss_hdemo_sk = "inner".hd_demo_sk)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=2014.47..34705897.44 rows=66620 width=12)
                                                  Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=2009.33..29177354.34 rows=629740 width=16)
                                                        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250326190 width=20)
                                                              Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_hdemo_sk IS NOT NULL))
                                                        ->  XN Hash  (cost=2008.85..2008.85 rows=193 width=4)
                                                              ->  XN Seq Scan on date_dim  (cost=0.00..2008.85 rows=193 width=4)
                                                                    Filter: (((d_year = 2000) OR (d_year = 2001) OR (d_year = 1999)) AND (((d_dom >= 25) AND (d_dom <= 28)) OR ((d_dom <= 3) AND (d_dom >= 1))))
                                                  ->  XN Hash  (cost=5.03..5.03 rows=46 width=4)
                                                        ->  XN Seq Scan on store  (cost=0.00..5.03 rows=46 width=4)
                                                              Filter: ((s_county)::text = 'Williamson County'::text)
                                            ->  XN Hash  (cost=234.00..234.00 rows=489 width=4)
                                                  ->  XN Seq Scan on household_demographics  (cost=0.00..234.00 rows=489 width=4)
                                                        Filter: ((((hd_buy_potential)::text = '>10000'::text) OR ((hd_buy_potential)::text = 'Unknown'::text)) AND (CASE WHEN (hd_vehicle_count > 0) THEN (((hd_dep_count)::numeric * 1.000) / (hd_vehicle_count)::numeric) ELSE NULL::numeric END > 1.20000000000000) AND (hd_vehicle_count > 0))
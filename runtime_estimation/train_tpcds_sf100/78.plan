XN Limit  (cost=2192690422559.72..2192690422559.97 rows=100 width=84)
  ->  XN Merge  (cost=2192690422559.72..2192690425750.56 rows=1276335 width=84)
        Merge Key: ss.ss_sold_year, ss.ss_item_sk, ss.ss_customer_sk, ss.ss_qty, ss.ss_wc, ss.ss_sp, (COALESCE(cs.cs_qty, 0::bigint) + COALESCE(ws.ws_qty, 0::bigint)), (COALESCE(cs.cs_wc, 0::double precision) + COALESCE(ws.ws_wc, 0::double precision)), (COALESCE(cs.cs_sp, 0::double precision) + COALESCE(ws.ws_sp, 0::double precision)), round((((ss.ss_qty)::numeric * 1.00) / ((COALESCE(cs.cs_qty, 0::bigint) + COALESCE(ws.ws_qty, 0::bigint)))::numeric), 2)
        ->  XN Network  (cost=2192690422559.72..2192690425750.56 rows=1276335 width=84)
              Send to leader
              ->  XN Sort  (cost=2192690422559.72..2192690425750.56 rows=1276335 width=84)
                    Sort Key: ss.ss_sold_year, ss.ss_item_sk, ss.ss_customer_sk, ss.ss_qty, ss.ss_wc, ss.ss_sp, (COALESCE(cs.cs_qty, 0::bigint) + COALESCE(ws.ws_qty, 0::bigint)), (COALESCE(cs.cs_wc, 0::double precision) + COALESCE(ws.ws_wc, 0::double precision)), (COALESCE(cs.cs_sp, 0::double precision) + COALESCE(ws.ws_sp, 0::double precision)), round((((ss.ss_qty)::numeric * 1.00) / ((COALESCE(cs.cs_qty, 0::bigint) + COALESCE(ws.ws_qty, 0::bigint)))::numeric), 2)
                    ->  XN Hash Left Join DS_DIST_NONE  (cost=1152026858128.11..1192690293116.54 rows=1276335 width=84)
                          Hash Cond: (("outer".ss_customer_sk = "inner".cs_customer_sk) AND ("outer".ss_item_sk = "inner".cs_item_sk) AND ("outer".ss_sold_year = "inner".cs_sold_year))
                          Filter: ((COALESCE("inner".cs_qty, 0::bigint) > 0) OR (COALESCE("outer".ws_qty, 0::bigint) > 0))
                          ->  XN Hash Left Join DS_DIST_INNER  (cost=1151925048816.18..1190039475292.96 rows=1276335 width=60)
                                Inner Dist Key: ws.ws_item_sk
                                Hash Cond: (("outer".ss_customer_sk = "inner".ws_customer_sk) AND ("outer".ss_item_sk = "inner".ws_item_sk) AND ("outer".ss_sold_year = "inner".ws_sold_year))
                                ->  XN Subquery Scan ss  (cost=229822958.51..229845294.37 rows=1276335 width=36)
                                      ->  XN HashAggregate  (cost=229822958.51..229832531.02 rows=1276335 width=32)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=432840.16..229803813.48 rows=1276335 width=32)
                                                  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                  ->  XN Hash Left Join DS_DIST_NONE  (cost=431926.20..171790173.37 rows=287997024 width=32)
                                                        Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_item_sk = "inner".sr_item_sk))
                                                        Filter: ("inner".sr_ticket_number IS NULL)
                                                        ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=287997024 width=36)
                                                        ->  XN Hash  (cost=287950.80..287950.80 rows=28795080 width=8)
                                                              ->  XN Seq Scan on store_returns  (cost=0.00..287950.80 rows=28795080 width=8)
                                                  ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                        ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                              Filter: (d_year = 2000)
                                ->  XN Hash  (cost=1151695223346.38..1151695223346.38 rows=334839 width=36)
                                      ->  XN Subquery Scan ws  (cost=1151695217486.70..1151695223346.38 rows=334839 width=36)
                                            ->  XN HashAggregate  (cost=1151695217486.70..1151695219997.99 rows=334839 width=32)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=108879.01..1151695212464.11 rows=334839 width=32)
                                                        Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                        ->  XN Hash Left Join DS_BCAST_INNER  (cost=107965.05..1151639908186.26 rows=72001240 width=32)
                                                              Hash Cond: (("outer".ws_order_number = "inner".wr_order_number) AND ("outer".ws_item_sk = "inner".wr_item_sk))
                                                              Filter: ("inner".wr_order_number IS NULL)
                                                              ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=36)
                                                              ->  XN Hash  (cost=71976.70..71976.70 rows=7197670 width=8)
                                                                    ->  XN Seq Scan on web_returns  (cost=0.00..71976.70 rows=7197670 width=8)
                                                        ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                              ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                    Filter: (d_year = 2000)
                          ->  XN Hash  (cost=101804319.24..101804319.24 rows=665692 width=36)
                                ->  XN Subquery Scan cs  (cost=101792669.63..101804319.24 rows=665692 width=36)
                                      ->  XN HashAggregate  (cost=101792669.63..101797662.32 rows=665692 width=32)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=216979.57..101782684.25 rows=665692 width=32)
                                                  Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                  ->  XN Hash Left Join DS_DIST_NONE  (cost=216065.61..45575149.97 rows=143997072 width=32)
                                                        Hash Cond: (("outer".cs_order_number = "inner".cr_order_number) AND ("outer".cs_item_sk = "inner".cr_item_sk))
                                                        Filter: ("inner".cr_order_number IS NULL)
                                                        ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=143997072 width=36)
                                                        ->  XN Hash  (cost=144043.74..144043.74 rows=14404374 width=8)
                                                              ->  XN Seq Scan on catalog_returns  (cost=0.00..144043.74 rows=14404374 width=8)
                                                  ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                        ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                              Filter: (d_year = 2000)
XN Nested Loop DS_BCAST_INNER  (cost=13602869.34..13762869.39 rows=1 width=16)
  ->  XN Subquery Scan all_sales  (cost=6750451.98..6750451.99 rows=1 width=8)
        ->  XN Aggregate  (cost=6750451.98..6750451.98 rows=1 width=8)
              ->  XN Hash Join DS_BCAST_INNER  (cost=6549355.88..6750451.97 rows=1 width=8)
                    Hash Cond: ("outer".d_date_sk = "inner".ss_sold_date_sk)
                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=28 width=4)
                          Filter: ((d_year = 1998) AND (d_moy = 11))
                    ->  XN Hash  (cost=6549355.87..6549355.87 rows=1 width=12)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=6426555.59..6549355.87 rows=1 width=12)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                ->  XN Hash Join DS_DIST_NONE  (cost=6426550.56..6429350.54 rows=24 width=16)
                                      Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                      ->  XN Seq Scan on item  (cost=0.00..2550.00 rows=19979 width=4)
                                            Filter: ((i_category)::text = 'Jewelry'::text)
                                      ->  XN Hash  (cost=6426549.98..6426549.98 rows=230 width=20)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=177500.03..6426549.98 rows=230 width=20)
                                                  Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                  ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=250326190 width=24)
                                                        Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                  ->  XN Hash  (cost=177500.02..177500.02 rows=2 width=4)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=12500.00..177500.02 rows=2 width=4)
                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=8)
                                                              ->  XN Hash  (cost=12500.00..12500.00 rows=1 width=4)
                                                                    ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=1 width=4)
                                                                          Filter: (ca_gmt_offset = -5::double precision)
                                ->  XN Hash  (cost=5.03..5.03 rows=1 width=4)
                                      ->  XN Seq Scan on store  (cost=0.00..5.03 rows=1 width=4)
                                            Filter: (s_gmt_offset = -5::double precision)
  ->  XN Subquery Scan promotional_sales  (cost=6852417.37..6852417.38 rows=1 width=8)
        ->  XN Aggregate  (cost=6852417.37..6852417.37 rows=1 width=8)
              ->  XN Hash Join DS_BCAST_INNER  (cost=6651321.27..6852417.36 rows=1 width=8)
                    Hash Cond: ("outer".d_date_sk = "inner".ss_sold_date_sk)
                    ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=28 width=4)
                          Filter: ((d_year = 1998) AND (d_moy = 11))
                    ->  XN Hash  (cost=6651321.27..6651321.27 rows=1 width=12)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=6411297.34..6651321.27 rows=1 width=12)
                                Hash Cond: ("outer".p_promo_sk = "inner".ss_promo_sk)
                                ->  XN Seq Scan on promotion  (cost=0.00..17.50 rows=513 width=4)
                                      Filter: (((p_channel_dmail)::text = 'Y'::text) OR ((p_channel_email)::text = 'Y'::text) OR ((p_channel_tv)::text = 'Y'::text))
                                ->  XN Hash  (cost=6411297.34..6411297.34 rows=1 width=16)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=6288497.08..6411297.34 rows=1 width=16)
                                            Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                            ->  XN Hash Join DS_DIST_NONE  (cost=6288492.05..6291292.02 rows=23 width=20)
                                                  Hash Cond: ("outer".i_item_sk = "inner".ss_item_sk)
                                                  ->  XN Seq Scan on item  (cost=0.00..2550.00 rows=19979 width=4)
                                                        Filter: ((i_category)::text = 'Jewelry'::text)
                                                  ->  XN Hash  (cost=6288491.50..6288491.50 rows=220 width=24)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=177500.03..6288491.50 rows=220 width=24)
                                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                              ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=239281520 width=28)
                                                                    Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL) AND (ss_promo_sk IS NOT NULL))
                                                              ->  XN Hash  (cost=177500.02..177500.02 rows=2 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=12500.00..177500.02 rows=2 width=4)
                                                                          Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=8)
                                                                          ->  XN Hash  (cost=12500.00..12500.00 rows=1 width=4)
                                                                                ->  XN Seq Scan on customer_address  (cost=0.00..12500.00 rows=1 width=4)
                                                                                      Filter: (ca_gmt_offset = -5::double precision)
                                            ->  XN Hash  (cost=5.03..5.03 rows=1 width=4)
                                                  ->  XN Seq Scan on store  (cost=0.00..5.03 rows=1 width=4)
                                                        Filter: (s_gmt_offset = -5::double precision)
----- Nested Loop Join in the query plan - review the join predicates to avoid Cartesian products -----
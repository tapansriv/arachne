XN Limit  (cost=1011513361197.06..1011513361197.31 rows=100 width=96)
  ->  XN Merge  (cost=1011513361197.06..1011513361810.60 rows=245414 width=96)
        Merge Key: t_s_secyear.customer_id
        ->  XN Network  (cost=1011513361197.06..1011513361810.60 rows=245414 width=96)
              Send to leader
              ->  XN Sort  (cost=1011513361197.06..1011513361810.60 rows=245414 width=96)
                    Sort Key: t_s_secyear.customer_id
                    ->  XN Hash Join DS_BCAST_INNER  (cost=8473983733.86..11513339226.55 rows=245414 width=96)
                          Hash Cond: (("outer".year_ = "inner".year_) AND (("outer".customer_id)::text = ("inner".customer_id)::text))
                          Join Filter: (CASE WHEN ("outer".year_total > 0::double precision) THEN ("outer".year_total / "outer".year_total) ELSE NULL::double precision END < CASE WHEN ("outer".year_total > 0::double precision) THEN ("inner".year_total / "outer".year_total) ELSE NULL::double precision END)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=7526077186.30..8567260159.12 rows=110614 width=188)
                                Hash Cond: ((("outer".customer_id)::text = ("inner".customer_id)::text) AND ("outer".year_ = "inner".year_))
                                ->  XN Hash Join DS_BCAST_INNER  (cost=4236991768.36..4757525593.00 rows=63769 width=152)
                                      Hash Cond: (("outer".customer_id)::text = ("inner".customer_id)::text)
                                      ->  XN Subquery Scan t_s_secyear  (cost=3289085265.49..3289085552.18 rows=12741 width=108)
                                            ->  XN Append  (cost=3289085265.49..3289085424.78 rows=12741 width=51)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=3289085265.49..3289085424.74 rows=12740 width=51)
                                                        ->  XN HashAggregate  (cost=3289085265.49..3289085297.34 rows=12740 width=51)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=6799978.84..3289085106.24 rows=12740 width=51)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=43)
                                                                    ->  XN Hash  (cost=6799944.65..6799944.65 rows=13676 width=16)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..6799944.65 rows=13676 width=16)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=262284743 width=16)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                            Filter: ((d_year = 2002) AND ((d_year = 2002) OR (d_year = 2001)))
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.02..0.03 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                                      ->  XN Hash  (cost=947906500.36..947906500.36 rows=1001 width=44)
                                            ->  XN Subquery Scan t_w_firstyear  (cost=0.02..947906500.36 rows=1001 width=44)
                                                  ->  XN Append  (cost=0.02..947906490.35 rows=1001 width=51)
                                                        ->  XN Subquery Scan "*SELECT* 1"  (cost=0.02..0.03 rows=1 width=0)
                                                              ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                                Distribute Round Robin
                                                                                ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                      One-Time Filter: false
                                                        ->  XN Subquery Scan "*SELECT* 2"  (cost=947906451.52..947906490.32 rows=1000 width=51)
                                                              ->  XN HashAggregate  (cost=947906451.52..947906480.32 rows=1000 width=51)
                                                                    Filter: (sum(ws_net_paid) > 0::double precision)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=2261355.52..947906393.92 rows=3840 width=51)
                                                                          Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                                          ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=43)
                                                                          ->  XN Hash  (cost=2261345.67..2261345.67 rows=3940 width=16)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..2261345.67 rows=3940 width=16)
                                                                                      Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                      ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=16)
                                                                                      ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                            ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                                  Filter: ((d_year = 2001) AND ((d_year = 2002) OR (d_year = 2001)))
                                ->  XN Hash  (cost=3289085412.93..3289085412.93 rows=1001 width=44)
                                      ->  XN Subquery Scan t_s_firstyear  (cost=3289085297.34..3289085412.93 rows=1001 width=44)
                                            ->  XN Append  (cost=3289085297.34..3289085402.92 rows=1001 width=51)
                                                  ->  XN Subquery Scan "*SELECT* 1"  (cost=3289085297.34..3289085402.89 rows=1000 width=51)
                                                        ->  XN HashAggregate  (cost=3289085297.34..3289085392.89 rows=1000 width=51)
                                                              Filter: (sum(ss_net_paid) > 0::double precision)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=6799978.84..3289085106.24 rows=12740 width=51)
                                                                    Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                    ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=43)
                                                                    ->  XN Hash  (cost=6799944.65..6799944.65 rows=13676 width=16)
                                                                          ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..6799944.65 rows=13676 width=16)
                                                                                Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=262284743 width=16)
                                                                                      Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                                                                ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                      ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                            Filter: ((d_year = 2001) AND ((d_year = 2002) OR (d_year = 2001)))
                                                  ->  XN Subquery Scan "*SELECT* 2"  (cost=0.02..0.03 rows=1 width=0)
                                                        ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                              ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                    ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                          Distribute Round Robin
                                                                          ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                                One-Time Filter: false
                          ->  XN Hash  (cost=947906528.36..947906528.36 rows=3841 width=44)
                                ->  XN Subquery Scan t_w_secyear  (cost=0.02..947906528.36 rows=3841 width=44)
                                      ->  XN Append  (cost=0.02..947906489.95 rows=3841 width=51)
                                            ->  XN Subquery Scan "*SELECT* 1"  (cost=0.02..0.03 rows=1 width=0)
                                                  ->  XN HashAggregate  (cost=0.02..0.02 rows=1 width=0)
                                                        ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                              ->  XN Network  (cost=0.00..0.01 rows=1 width=0)
                                                                    Distribute Round Robin
                                                                    ->  XN Result  (cost=0.00..0.01 rows=1 width=0)
                                                                          One-Time Filter: false
                                            ->  XN Subquery Scan "*SELECT* 2"  (cost=947906441.92..947906489.92 rows=3840 width=51)
                                                  ->  XN HashAggregate  (cost=947906441.92..947906451.52 rows=3840 width=51)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=2261355.52..947906393.92 rows=3840 width=51)
                                                              Hash Cond: ("outer".c_customer_sk = "inner".ws_bill_customer_sk)
                                                              ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=43)
                                                              ->  XN Hash  (cost=2261345.67..2261345.67 rows=3940 width=16)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.37..2261345.67 rows=3940 width=16)
                                                                          Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=16)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=4 width=8)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=4 width=8)
                                                                                      Filter: ((d_year = 2002) AND ((d_year = 2002) OR (d_year = 2001)))
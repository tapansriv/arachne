XN Hash Left Join DS_BCAST_INNER  (cost=39363818144.56..39381143146.00 rows=2000000 width=12)
  Hash Cond: ("outer".oid = "inner".oid)
  Filter: ("inner".oid IS NULL)
  ->  XN Seq Scan on customer c  (cost=0.00..20000.00 rows=2000000 width=16)
  ->  XN Hash  (cost=39363818144.20..39363818144.20 rows=144 width=4)
        ->  XN Subquery Scan volt_dt_0  (cost=39357654922.96..39363818144.20 rows=144 width=4)
              ->  XN Unique  (cost=39357654922.96..39363818142.76 rows=144 width=4)
                    ->  XN Hash Join DS_DIST_INNER  (cost=39357654922.96..39363818142.40 rows=144 width=4)
                          Inner Dist Key: c.c_current_cdemo_sk
                          Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                          ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                          ->  XN Hash  (cost=39357654922.57..39357654922.57 rows=153 width=8)
                                ->  XN Hash Join DS_DIST_INNER  (cost=39277386209.78..39357654922.57 rows=153 width=8)
                                      Inner Dist Key: c.c_current_addr_sk
                                      Hash Cond: ("outer".ca_address_sk = "inner".c_current_addr_sk)
                                      ->  XN Seq Scan on customer_address ca  (cost=0.00..17500.00 rows=96900 width=4)
                                            Filter: (((ca_state)::text = 'GA'::text) OR ((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'NM'::text))
                                      ->  XN Hash  (cost=39277386205.77..39277386205.77 rows=1605 width=12)
                                            ->  XN Hash Join DS_BCAST_INNER  (cost=39001661189.71..39277386205.77 rows=1605 width=12)
                                                  Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                  ->  XN Seq Scan on customer c  (cost=0.00..20000.00 rows=2000000 width=16)
                                                  ->  XN Hash  (cost=39001661185.40..39001661185.40 rows=1723 width=8)
                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=24844042186.90..39001661185.40 rows=1723 width=8)
                                                              Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                              ->  XN HashAggregate  (cost=16685200.16..16685200.16 rows=319084 width=4)
                                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..16684402.45 rows=319084 width=4)
                                                                          Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                          ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=287997024 width=8)
                                                                          ->  XN Hash  (cost=1278.36..1278.36 rows=85 width=4)
                                                                                ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=85 width=4)
                                                                                      Filter: ((2001 = d_year) AND (d_moy <= 6) AND (d_moy >= 4))
                                                              ->  XN Hash  (cost=24827356957.77..24827356957.77 rows=11588 width=4)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=24827356841.89..24827356957.77 rows=11588 width=4)
                                                                          ->  XN HashAggregate  (cost=24827356841.89..24827356841.89 rows=11588 width=4)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=22837071697.04..24827356812.92 rows=11588 width=4)
                                                                                      Hash Cond: ("outer".c_customer_sk = "inner".ss_customer_sk)
                                                                                      ->  XN Seq Scan on customer c  (cost=0.00..20000.00 rows=2000000 width=4)
                                                                                      ->  XN Hash  (cost=22837071665.94..22837071665.94 rows=12439 width=8)
                                                                                            ->  XN Hash Join DS_BCAST_INNER  (cost=28507553.01..22837071665.94 rows=12439 width=8)
                                                                                                  Hash Cond: ("outer".ss_customer_sk = "inner".ws_bill_customer_sk)
                                                                                                  ->  XN HashAggregate  (cost=16685200.16..16685200.16 rows=319084 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..16684402.45 rows=319084 width=4)
                                                                                                              Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=287997024 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=85 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=85 width=4)
                                                                                                                          Filter: ((2001 = d_year) AND (d_moy <= 6) AND (d_moy >= 4))
                                                                                                  ->  XN Hash  (cost=11822143.57..11822143.57 rows=83710 width=4)
                                                                                                        ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..11822143.57 rows=83710 width=4)
                                                                                                              Hash Cond: ("outer".ws_sold_date_sk = "inner".d_date_sk)
                                                                                                              ->  XN Seq Scan on web_sales  (cost=0.00..720012.40 rows=72001240 width=8)
                                                                                                              ->  XN Hash  (cost=1278.36..1278.36 rows=85 width=4)
                                                                                                                    ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=85 width=4)
                                                                                                                          Filter: ((2001 = d_year) AND (d_moy <= 6) AND (d_moy >= 4))

XN Hash Join DS_BCAST_INNER  (cost=1278.57..16514390.32 rows=304028 width=4)
  Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
  ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=274408098 width=8)
        Filter: (ss_sold_date_sk IS NOT NULL)
  ->  XN Hash  (cost=1278.36..1278.36 rows=85 width=4)
        ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=85 width=4)
              Filter: ((2001 = d_year) AND (d_moy <= 6) AND (d_moy >= 4))

XN Limit  (cost=1146747243523.35..1146747243523.60 rows=100 width=37)
  ->  XN Merge  (cost=1146747243523.35..1146747243537.35 rows=5600 width=37)
        Merge Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
        ->  XN Network  (cost=1146747243523.35..1146747243537.35 rows=5600 width=37)
              Send to leader
              ->  XN Sort  (cost=1146747243523.35..1146747243537.35 rows=5600 width=37)
                    Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                    ->  XN HashAggregate  (cost=146747243132.72..146747243174.72 rows=5600 width=37)
                          ->  XN Hash Join DS_DIST_INNER  (cost=145135058407.58..146747242127.96 rows=50238 width=37)
                                Inner Dist Key: volt_tt_618e632f4c29c.c_current_cdemo_sk
                                Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=41)
                                ->  XN Hash  (cost=145135058273.24..145135058273.24 rows=53738 width=4)
                                      ->  XN Hash Join DS_DIST_BOTH  (cost=96019440323.97..145135058273.24 rows=53738 width=4)
                                            Outer Dist Key: ss_customer_sk
                                            Inner Dist Key: volt_tt_618e632f4c29c.c_customer_sk
                                            Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                            ->  XN HashAggregate  (cost=99062.15..99062.15 rows=592951 width=4)
                                                  ->  XN Seq Scan on volt_tt_618e632f5f2f9  (cost=0.00..79249.72 rows=7924972 width=4)
                                            ->  XN Hash  (cost=96019340786.25..96019340786.25 rows=190226 width=8)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=83946605675.37..96019340786.25 rows=190226 width=8)
                                                        Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                        ->  XN Hash Left Join DS_BCAST_INNER  (cost=83946587933.12..84391296198.98 rows=1995421 width=12)
                                                              Hash Cond: ("outer".oid = "inner".oid)
                                                              Filter: ("inner".oid IS NULL)
                                                              ->  XN Seq Scan on volt_tt_618e632f4c29c  (cost=0.00..19954.21 rows=1995421 width=16)
                                                              ->  XN Hash  (cost=83946587924.01..83946587924.01 rows=3645 width=4)
                                                                    ->  XN Subquery Scan volt_dt_1  (cost=59481340456.00..83946587924.01 rows=3645 width=4)
                                                                          ->  XN Unique  (cost=59481340456.00..83946587887.56 rows=3645 width=4)
                                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=59481340456.00..83946587878.44 rows=3645 width=4)
                                                                                      Hash Cond: ("outer".ss_customer_sk = "inner".c_customer_sk)
                                                                                      ->  XN HashAggregate  (cost=99062.15..99062.15 rows=592951 width=4)
                                                                                            ->  XN Seq Scan on volt_tt_618e632f5f2f9  (cost=0.00..79249.72 rows=7924972 width=4)
                                                                                      ->  XN Hash  (cost=59481241384.51..59481241384.51 rows=3736 width=12)
                                                                                            ->  XN Hash Join DS_DIST_INNER  (cost=59241378129.14..59481241384.51 rows=3736 width=12)
                                                                                                  Inner Dist Key: volt_tt_618e632f4c29c.c_current_cdemo_sk
                                                                                                  Hash Cond: ("outer".cd_demo_sk = "inner".c_current_cdemo_sk)
                                                                                                  ->  XN Seq Scan on customer_demographics  (cost=0.00..19208.00 rows=1920800 width=4)
                                                                                                  ->  XN Hash  (cost=59241378119.14..59241378119.14 rows=3997 width=16)
                                                                                                        ->  XN Hash Join DS_DIST_OUTER  (cost=50863834045.44..59241378119.14 rows=3997 width=16)
                                                                                                              Outer Dist Key: "outer".c_current_addr_sk
                                                                                                              Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=50863816303.19..56306959812.92 rows=41920 width=20)
                                                                                                                    Hash Cond: ("outer".c_customer_sk = "inner".c_customer_sk)
                                                                                                                    ->  XN Seq Scan on volt_tt_618e632f4c29c  (cost=0.00..19954.21 rows=1922471 width=16)
                                                                                                                          Filter: (c_current_cdemo_sk IS NOT NULL)
                                                                                                                    ->  XN Hash  (cost=50863816191.58..50863816191.58 rows=44644 width=4)
                                                                                                                          ->  XN Subquery Scan volt_dt_2  (cost=50863815745.14..50863816191.58 rows=44644 width=4)
                                                                                                                                ->  XN HashAggregate  (cost=50863815745.14..50863815745.14 rows=44644 width=4)
                                                                                                                                      ->  XN Hash Join DS_BCAST_INNER  (cost=43480090290.10..50863815633.53 rows=44644 width=4)
                                                                                                                                            Hash Cond: ("outer".c_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                            ->  XN Seq Scan on volt_tt_618e632f4c29c  (cost=0.00..19954.21 rows=1995421 width=4)
                                                                                                                                            ->  XN Hash  (cost=43480090174.73..43480090174.73 rows=46148 width=8)
                                                                                                                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=13522301.37..43480090174.73 rows=46148 width=8)
                                                                                                                                                        Hash Cond: ("outer".ss_customer_sk = "inner".cs_ship_customer_sk)
                                                                                                                                                        ->  XN HashAggregate  (cost=99062.15..99062.15 rows=592951 width=4)
                                                                                                                                                              ->  XN Seq Scan on volt_tt_618e632f5f2f9  (cost=0.00..79249.72 rows=7924972 width=4)
                                                                                                                                                        ->  XN Hash  (cost=13422827.79..13422827.79 rows=164571 width=4)
                                                                                                                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=1278.57..13422827.79 rows=164571 width=4)
                                                                                                                                                                    Hash Cond: ("outer".cs_sold_date_sk = "inner".d_date_sk)
                                                                                                                                                                    ->  XN Seq Scan on catalog_sales  (cost=0.00..1439970.72 rows=142394623 width=8)
                                                                                                                                                                          Filter: ((cs_sold_date_sk IS NOT NULL) AND (cs_ship_customer_sk IS NOT NULL))
                                                                                                                                                                    ->  XN Hash  (cost=1278.36..1278.36 rows=85 width=4)
                                                                                                                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..1278.36 rows=85 width=4)
                                                                                                                                                                                Filter: ((d_year = 2001) AND (d_moy <= 6) AND (d_moy >= 4))
                                                                                                              ->  XN Hash  (cost=17500.00..17500.00 rows=96900 width=4)
                                                                                                                    ->  XN Seq Scan on customer_address ca  (cost=0.00..17500.00 rows=96900 width=4)
                                                                                                                          Filter: (((ca_state)::text = 'GA'::text) OR ((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'NM'::text))
                                                        ->  XN Hash  (cost=17500.00..17500.00 rows=96900 width=4)
                                                              ->  XN Seq Scan on customer_address ca  (cost=0.00..17500.00 rows=96900 width=4)
                                                                    Filter: (((ca_state)::text = 'GA'::text) OR ((ca_state)::text = 'KY'::text) OR ((ca_state)::text = 'NM'::text))
XN HashAggregate  (cost=43050321.73..43053057.98 rows=1094501 width=16)
  ->  XN Hash Join DS_BCAST_INNER  (cost=1096.50..43042112.98 rows=1094501 width=16)
        Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
        ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=274408098 width=20)
              Filter: (ss_sold_date_sk IS NOT NULL)
        ->  XN Hash  (cost=1095.73..1095.73 rows=306 width=4)
              ->  XN Seq Scan on date_dim  (cost=0.00..1095.73 rows=306 width=4)
                    Filter: ((d_month_seq <= 1187) AND (d_month_seq >= 1176))

XN Limit  (cost=1310165178379.96..1310165178380.21 rows=100 width=155)
  ->  XN Merge  (cost=1310165178379.96..1310165186301.35 rows=3168556 width=155)
        Merge Key: store.s_store_name, item.i_item_desc
        ->  XN Network  (cost=1310165178379.96..1310165186301.35 rows=3168556 width=155)
              Send to leader
              ->  XN Sort  (cost=1310165178379.96..1310165186301.35 rows=3168556 width=155)
                    Sort Key: store.s_store_name, item.i_item_desc
                    ->  XN Hash Join DS_BCAST_INNER  (cost=20388788.46..310164836248.88 rows=3168556 width=155)
                          Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                          ->  XN Hash Join DS_BCAST_INNER  (cost=20386238.46..84631819.02 rows=6121596 width=19)
                                Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                Join Filter: ("outer".col2 <= ("inner".ave * 0.10000000000000001::double precision))
                                ->  XN Seq Scan on volt_tt_618e6321ce859  (cost=0.00..190762.30 rows=19076230 width=16)
                                ->  XN Hash  (cost=20386237.96..20386237.96 rows=199 width=23)
                                      ->  XN Hash Join DS_DIST_OUTER  (cost=286146.53..20386237.96 rows=199 width=23)
                                            Outer Dist Key: store.s_store_sk
                                            Hash Cond: ("outer".s_store_sk = "inner".ss_store_sk)
                                            ->  XN Seq Scan on store  (cost=0.00..4.02 rows=402 width=11)
                                            ->  XN Hash  (cost=286146.01..286146.01 rows=205 width=12)
                                                  ->  XN Subquery Scan sb  (cost=286143.45..286146.01 rows=205 width=12)
                                                        ->  XN HashAggregate  (cost=286143.45..286143.96 rows=205 width=12)
                                                              ->  XN Seq Scan on volt_tt_618e6321ce859  (cost=0.00..190762.30 rows=19076230 width=12)
                          ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=144)
                                ->  XN Seq Scan on item  (cost=0.00..2040.00 rows=204000 width=144)
XN Merge  (cost=1012216572195.82..1012216572197.69 rows=745 width=34)
  Merge Key: customer.c_last_name, customer.c_first_name, store.s_store_name
  InitPlan
    ->  XN Aggregate  (cost=6860614652.71..6860614652.71 rows=1 width=8)
          ->  XN Subquery Scan ssales_1  (cost=6860614152.62..6860614569.36 rows=33339 width=8)
                ->  XN HashAggregate  (cost=6860614152.62..6860614235.97 rows=33339 width=83)
                      ->  XN Hash Join DS_DIST_NONE  (cost=6859085527.27..6860613235.80 rows=33339 width=83)
                            Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                            ->  XN Hash Join DS_DIST_NONE  (cost=6859082977.27..6860090805.09 rows=15764325 width=54)
                                  Hash Cond: (("outer".sr_ticket_number = "inner".ss_ticket_number) AND ("outer".sr_item_sk = "inner".ss_item_sk))
                                  ->  XN Seq Scan on store_returns store_returns_1  (cost=0.00..287950.80 rows=28795080 width=8)
                                  ->  XN Hash  (cost=6859081474.07..6859081474.07 rows=300641 width=54)
                                        ->  XN Hash Join DS_BCAST_INNER  (cost=2211713416.54..6859081474.07 rows=300641 width=54)
                                              Hash Cond: (("outer".ss_customer_sk = "inner".c_customer_sk) AND ("outer".ss_store_sk = "inner".s_store_sk))
                                              ->  XN Seq Scan on store_sales store_sales_1  (cost=0.00..2879970.24 rows=262722559 width=24)
                                                    Filter: ((ss_store_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                              ->  XN Hash  (cost=2211713375.13..2211713375.13 rows=8282 width=46)
                                                    ->  XN Hash Join DS_BCAST_INNER  (cost=13108250.33..2211713375.13 rows=8282 width=46)
                                                          Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                                          Join Filter: (("outer".c_birth_country)::text <> upper(("inner".ca_country)::text))
                                                          ->  XN Seq Scan on customer customer_1  (cost=0.00..20000.00 rows=2000000 width=39)
                                                          ->  XN Hash  (cost=13108239.76..13108239.76 rows=4228 width=44)
                                                                ->  XN Hash Join DS_BCAST_INNER  (cost=5.12..13108239.76 rows=4228 width=44)
                                                                      Hash Cond: (("outer".ca_zip)::text = ("inner".s_zip)::text)
                                                                      ->  XN Seq Scan on customer_address customer_address_1  (cost=0.00..10000.00 rows=969771 width=36)
                                                                            Filter: (ca_zip IS NOT NULL)
                                                                      ->  XN Hash  (cost=5.03..5.03 rows=36 width=26)
                                                                            ->  XN Seq Scan on store store_1  (cost=0.00..5.03 rows=36 width=26)
                                                                                  Filter: ((s_market_id = 8) AND (s_zip IS NOT NULL))
                            ->  XN Hash  (cost=2040.00..2040.00 rows=204000 width=41)
                                  ->  XN Seq Scan on item item_1  (cost=0.00..2040.00 rows=204000 width=41)
  ->  XN Network  (cost=1005355957543.12..1005355957544.98 rows=745 width=34)
        Send to leader
        ->  XN Sort  (cost=1005355957543.12..1005355957544.98 rows=745 width=34)
              Sort Key: customer.c_last_name, customer.c_first_name, store.s_store_name
              ->  XN HashAggregate  (cost=5355957501.99..5355957507.58 rows=745 width=34)
                    Filter: ($0 < sum(ss_net_paid))
                    ->  XN Hash Join DS_DIST_NONE  (cost=1702421919.12..5355957492.68 rows=745 width=34)
                          Hash Cond: (("outer".ss_ticket_number = "inner".sr_ticket_number) AND ("outer".ss_item_sk = "inner".i_item_sk))
                          ->  XN Hash Join DS_BCAST_INNER  (cost=1701473416.54..5355001474.07 rows=300641 width=42)
                                Hash Cond: (("outer".ss_customer_sk = "inner".c_customer_sk) AND ("outer".ss_store_sk = "inner".s_store_sk))
                                ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=262722559 width=24)
                                      Filter: ((ss_store_sk IS NOT NULL) AND (ss_customer_sk IS NOT NULL))
                                ->  XN Hash  (cost=1701473375.13..1701473375.13 rows=8282 width=34)
                                      ->  XN Hash Join DS_BCAST_INNER  (cost=10228250.33..1701473375.13 rows=8282 width=34)
                                            Hash Cond: ("outer".c_current_addr_sk = "inner".ca_address_sk)
                                            Join Filter: (("outer".c_birth_country)::text <> upper(("inner".ca_country)::text))
                                            ->  XN Seq Scan on customer  (cost=0.00..20000.00 rows=2000000 width=39)
                                            ->  XN Hash  (cost=10228239.76..10228239.76 rows=4228 width=32)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=5.12..10228239.76 rows=4228 width=32)
                                                        Hash Cond: (("outer".ca_zip)::text = ("inner".s_zip)::text)
                                                        ->  XN Seq Scan on customer_address  (cost=0.00..10000.00 rows=969771 width=30)
                                                              Filter: (ca_zip IS NOT NULL)
                                                        ->  XN Hash  (cost=5.03..5.03 rows=36 width=20)
                                                              ->  XN Seq Scan on store  (cost=0.00..5.03 rows=36 width=20)
                                                                    Filter: ((s_market_id = 8) AND (s_zip IS NOT NULL))
                          ->  XN Hash  (cost=945135.54..945135.54 rows=673406 width=12)
                                ->  XN Hash Join DS_DIST_NONE  (cost=2561.38..945135.54 rows=673406 width=12)
                                      Hash Cond: ("outer".sr_item_sk = "inner".i_item_sk)
                                      ->  XN Seq Scan on store_returns  (cost=0.00..287950.80 rows=28795080 width=8)
                                      ->  XN Hash  (cost=2550.00..2550.00 rows=4553 width=4)
                                            ->  XN Seq Scan on item  (cost=0.00..2550.00 rows=4553 width=4)
                                                  Filter: ((i_color)::text = 'peach'::text)
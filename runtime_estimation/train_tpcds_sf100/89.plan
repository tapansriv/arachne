XN Limit  (cost=2000189241656.32..2000189241656.50 rows=72 width=485)
  ->  XN Merge  (cost=2000189241656.32..2000189241656.50 rows=72 width=485)
        Merge Key: (sum_sales - avg_monthly_sales), s_store_name, i_category, i_class, i_brand, s_company_name, d_moy, sum_sales, avg_monthly_sales
        ->  XN Network  (cost=2000189241656.32..2000189241656.50 rows=72 width=485)
              Send to leader
              ->  XN Sort  (cost=2000189241656.32..2000189241656.50 rows=72 width=485)
                    Sort Key: (sum_sales - avg_monthly_sales), s_store_name, i_category, i_class, i_brand, s_company_name, d_moy, sum_sales, avg_monthly_sales
                    ->  XN Subquery Scan tmp1  (cost=1000189241643.76..1000189241654.10 rows=72 width=485)
                          Filter: (CASE WHEN (avg_monthly_sales <> 0::double precision) THEN (abs((sum_sales - avg_monthly_sales)) / avg_monthly_sales) ELSE NULL::double precision END > 0.10000000000000001::double precision)
                          ->  XN Window  (cost=1000189241643.76..1000189241649.11 rows=214 width=70)
                                Partition: item.i_category, item.i_brand, store.s_store_name, store.s_company_name
                                ->  XN Sort  (cost=1000189241643.76..1000189241644.29 rows=214 width=70)
                                      Sort Key: item.i_category, item.i_brand, store.s_store_name, store.s_company_name
                                      ->  XN Network  (cost=189241634.41..189241635.47 rows=214 width=70)
                                            Distribute
                                            ->  XN HashAggregate  (cost=189241634.41..189241635.47 rows=214 width=70)
                                                  ->  XN Hash Join DS_BCAST_INNER  (cost=9088.54..189241213.31 rows=21055 width=70)
                                                        Hash Cond: ("outer".ss_store_sk = "inner".s_store_sk)
                                                        ->  XN Hash Join DS_DIST_NONE  (cost=9083.51..60600713.06 rows=22774 width=56)
                                                              Hash Cond: ("outer".ss_item_sk = "inner".i_item_sk)
                                                              ->  XN Hash Join DS_BCAST_INNER  (cost=913.96..60566200.80 rows=1160665 width=20)
                                                                    Hash Cond: ("outer".ss_sold_date_sk = "inner".d_date_sk)
                                                                    ->  XN Seq Scan on store_sales  (cost=0.00..2879970.24 rows=261896796 width=20)
                                                                          Filter: ((ss_sold_date_sk IS NOT NULL) AND (ss_store_sk IS NOT NULL))
                                                                    ->  XN Hash  (cost=913.11..913.11 rows=340 width=8)
                                                                          ->  XN Seq Scan on date_dim  (cost=0.00..913.11 rows=340 width=8)
                                                                                Filter: (d_year = 1999)
                                                              ->  XN Hash  (cost=8160.00..8160.00 rows=3820 width=44)
                                                                    ->  XN Seq Scan on item  (cost=0.00..8160.00 rows=3820 width=44)
                                                                          Filter: (((((i_class)::text = 'shirts'::text) OR ((i_class)::text = 'dresses'::text) OR ((i_class)::text = 'birdal'::text)) AND (((i_category)::text = 'Women'::text) OR ((i_category)::text = 'Jewelry'::text) OR ((i_category)::text = 'Men'::text))) OR ((((i_class)::text = 'computers'::text) OR ((i_class)::text = 'football'::text) OR ((i_class)::text = 'stereo'::text)) AND (((i_category)::text = 'Electronics'::text) OR ((i_category)::text = 'Sports'::text) OR ((i_category)::text = 'Books'::text))))
                                                        ->  XN Hash  (cost=4.02..4.02 rows=402 width=22)
                                                              ->  XN Seq Scan on store  (cost=0.00..4.02 rows=402 width=22)